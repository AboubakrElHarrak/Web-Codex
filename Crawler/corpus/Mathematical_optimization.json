{
    "url": "https://en.wikipedia.org/wiki/Mathematical_optimization",
    "title": "Mathematical optimization",
    "table_of_contents": [
        "1 Optimization problems",
        "2 Notation",
        "2.1 Minimum and maximum value of a function",
        "2.2 Optimal input arguments",
        "3 History",
        "4 Major subfields",
        "4.1 Multi-objective optimization",
        "4.2 Multi-modal or global optimization",
        "5 Classification of critical points and extrema",
        "5.1 Feasibility problem",
        "5.2 Existence",
        "5.3 Necessary conditions for optimality",
        "5.4 Sufficient conditions for optimality",
        "5.5 Sensitivity and continuity of optima",
        "5.6 Calculus of optimization",
        "6 Computational optimization techniques",
        "6.1 Optimization algorithms",
        "6.2 Iterative methods",
        "6.3 Global convergence",
        "6.4 Heuristics",
        "7 Applications",
        "7.1 Mechanics",
        "7.2 Economics and finance",
        "7.3 Electrical engineering",
        "7.4 Civil engineering",
        "7.5 Operations research",
        "7.6 Control engineering",
        "7.7 Geophysics",
        "7.8 Molecular modeling",
        "7.9 Computational systems biology",
        "7.10 Machine learning",
        "8 Solvers",
        "9 See also",
        "10 Notes",
        "11 Further reading",
        "12 External links"
    ],
    "content": [
        {
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/7/72/Max_paraboloid.svg/440px-Max_paraboloid.svg.png",
                "caption": "\n\t\tGraph of a  given by z =  f(x, y) = −(x² + y²) + 4. The global maximum at (x, y, z) = (0, 0, 4) is indicated by a blue dot.\n\t"
            },
            "image3": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/3/33/Nelder-Mead_Simionescu.gif/440px-Nelder-Mead_Simionescu.gif",
                "caption": "\n\t\tNelder-Mead minimum search of Simionescu's function. Simplex vertices are ordered by their values, with 1 having the lowest (fx best) value.\n\t"
            },
            "paragraph1": "Mathematical optimization (alternatively spelled optimisation) or mathematical programming is the selection of a best element, with regard to some criterion, from some set of available alternatives. Optimization problems of sorts arise in all quantitative disciplines from computer science and engineering to operations research and economics, and the development of solution methods has been of interest in mathematics for centuries.\n",
            "paragraph2": "In the simplest case, an optimization problem consists of maximizing or minimizing a real function by systematically choosing input values from within an allowed set and computing the value of the function. The generalization of optimization theory and techniques to other formulations constitutes a large area of applied mathematics. More generally, optimization includes finding \"best available\" values of some objective function given a defined domain (or input), including a variety of different types of objective functions and different types of domains.\n"
        },
        {
            "title": "Optimization problems",
            "paragraph1": "An optimization problem can be represented in the following way:\n",
            "paragraph2": "Such a formulation is called an optimization problem or a mathematical programming problem (a term not directly related to computer programming, but still in use for example in linear programming – see History below). Many real-world and theoretical problems may be modeled in this general framework.\n",
            "paragraph3": "Since the following is valid\n",
            "paragraph4": "with\n",
            "paragraph5": "it is more convenient to solve minimization problems. However, the opposite perspective would be valid, too.\n",
            "paragraph6": "Problems formulated using this technique in the fields of physics may refer to the technique as energy minimization, speaking of the value of the function f as representing the energy of the system being modeled. In machine learning, it is always necessary to continuously evaluate the quality of a data model by using a cost function where a minimum implies a set of possibly optimal parameters with an optimal (lowest) error.\n",
            "paragraph7": "Typically, A is some subset of the Euclidean space ℝn, often specified by a set of constraints, equalities or inequalities that the members of A have to satisfy.  The domain A of f is called the search space or the choice set, while the elements of A are called candidate solutions or feasible solutions.\n",
            "paragraph8": "The function f is called, variously, an objective function, a loss function or cost function (minimization),  a utility function or fitness function (maximization), or, in certain fields, an energy function or energy functional. A feasible solution that minimizes (or maximizes, if that is the goal) the objective function is called an optimal solution.\n",
            "paragraph9": "In mathematics, conventional optimization problems are usually stated in terms of minimization.\n",
            "paragraph10": "A local minimum x* is defined as an element for which there exists some δ > 0 such that\n",
            "paragraph11": "the expression f(x*) ≤ f(x) holds;\n",
            "paragraph12": "that is to say, on some region around x* all of the function values are greater than or equal to the value at that element. \nLocal maxima are defined similarly.\n",
            "paragraph13": "While a local minimum is at least as good as any nearby elements, a global minimum is at least as good as every feasible element.\nGenerally, unless the objective function is convex in a minimization problem, there may be several local minima.\nIn a convex problem, if there is a local minimum that is interior (not on the edge of the set of feasible elements), it is also the global minimum, but a nonconvex problem may have more than one local minimum not all of which need be global minima.\n",
            "paragraph14": "A large number of algorithms proposed for solving the nonconvex problems – including the majority of commercially available solvers – are  not capable of making a distinction between locally optimal solutions and globally optimal solutions, and will treat the former as actual solutions to the original problem. Global optimization is the branch of applied mathematics and numerical analysis that is concerned with the development of deterministic algorithms that are capable of guaranteeing convergence in finite time to the actual optimal solution of a nonconvex problem.\n"
        },
        {
            "title": "Notation",
            "paragraph1": "Optimization problems are often expressed with special notation. Here are some examples:\n",
            "subtitle1": "Minimum and maximum value of a function",
            "paragraph2": "Consider the following notation:\n",
            "paragraph3": "This denotes the minimum value of the objective function x2 + 1, when choosing x from the set of real numbers ℝ. The minimum value in this case is 1, occurring at x = 0.\n",
            "paragraph4": "Similarly, the notation\n",
            "paragraph5": "asks for the maximum value of the objective function 2x, where x may be any real number. In this case, there is no such maximum as the objective function is unbounded, so the answer is \"infinity\" or \"undefined\".\n",
            "subtitle2": "Optimal input arguments",
            "paragraph6": "Consider the following notation:\n",
            "paragraph7": "or equivalently\n",
            "paragraph8": "This represents the value (or values) of the argument x in the interval (−∞,−1] that minimizes (or minimize) the objective function x2 + 1 (the actual minimum value of that function is not what the problem asks for). In this case, the answer is x = −1, since x = 0 is infeasible, that is, it does not belong to the feasible set.\n",
            "paragraph9": "Similarly,\n",
            "paragraph10": "or equivalently\n",
            "paragraph11": "represents the {x, y} pair (or pairs) that maximizes (or maximize) the value of the objective function x cos y, with the added constraint that x lie in the interval [−5,5] (again, the actual maximum value of the expression does not matter). In this case, the solutions are the pairs of the form {5, 2kπ} and {−5, (2k + 1)π}, where k ranges over all integers.\n",
            "paragraph12": "Operators arg min and arg max are sometimes also written as argmin and argmax, and stand for argument of the minimum and argument of the maximum.\n"
        },
        {
            "title": "History",
            "paragraph1": "Fermat and Lagrange found calculus-based formulae for identifying optima, while Newton and Gauss proposed iterative methods for moving towards an optimum.\n",
            "paragraph2": "The term \"linear programming\" for certain optimization cases was due to George B. Dantzig, although much of the theory had been introduced by Leonid Kantorovich in 1939. (Programming in this context does not refer to computer programming, but comes from the use of program by the United States military to refer to proposed training and logistics schedules, which were the problems Dantzig studied at that time.) Dantzig published the Simplex algorithm in 1947, and John von Neumann developed the theory of duality in the same year.[citation needed]\n",
            "paragraph3": "Other notable researchers in mathematical optimization include the following:\n"
        },
        {
            "title": "Major subfields",
            "ul1": "Convex programming studies the case when the objective function is convex (minimization) or concave (maximization) and the constraint set is convex. This can be viewed as a particular case of nonlinear programming or as generalization of linear or convex quadratic programming.\nLinear programming (LP), a type of convex programming, studies the case in which the objective function f is linear and the constraints are specified using only linear equalities and inequalities. Such a constraint set is called a polyhedron or a polytope if it is bounded.\nSecond-order cone programming (SOCP) is a convex program, and includes certain types of quadratic programs.\nSemidefinite programming (SDP) is a subfield of convex optimization where the underlying variables are semidefinite matrices. It is a generalization of linear and convex quadratic programming.\nConic programming is a general form of convex programming.  LP, SOCP and SDP can all be viewed as conic programs with the appropriate type of cone.\nGeometric programming is a technique whereby objective and inequality constraints expressed as posynomials and equality constraints as monomials can be transformed into a convex program.\nLinear programming (LP), a type of convex programming, studies the case in which the objective function f is linear and the constraints are specified using only linear equalities and inequalities. Such a constraint set is called a polyhedron or a polytope if it is bounded.\nSecond-order cone programming (SOCP) is a convex program, and includes certain types of quadratic programs.\nSemidefinite programming (SDP) is a subfield of convex optimization where the underlying variables are semidefinite matrices. It is a generalization of linear and convex quadratic programming.\nConic programming is a general form of convex programming.  LP, SOCP and SDP can all be viewed as conic programs with the appropriate type of cone.\nGeometric programming is a technique whereby objective and inequality constraints expressed as posynomials and equality constraints as monomials can be transformed into a convex program.\nInteger programming studies linear programs in which some or all variables are constrained to take on integer values.  This is not convex, and in general much more difficult than regular linear programming.\nQuadratic programming allows the objective function to have quadratic terms, while the feasible set must be specified with linear equalities and inequalities.  For specific forms of the quadratic term, this is a type of convex programming.\nFractional programming studies optimization of ratios of two nonlinear functions. The special class of concave fractional programs can be transformed to a convex optimization problem.\nNonlinear programming studies the general case in which the objective function or the constraints or both contain nonlinear parts.  This may or may not be a convex program. In general, whether the program is convex affects the difficulty of solving it.\nStochastic programming studies the case in which some of the constraints or parameters depend on random variables.\nRobust optimization is, like stochastic programming, an attempt to capture uncertainty in the data underlying the optimization problem. Robust optimization aims to find solutions that are valid under all possible realizations of the uncertainties defined by an uncertainty set.\nCombinatorial optimization is concerned with problems where the set of feasible solutions is discrete or can be reduced to a discrete one.\nStochastic optimization is used with random (noisy) function measurements or random inputs in the search process.\nInfinite-dimensional optimization studies the case when the set of feasible solutions is a subset of an infinite-dimensional space, such as a space of functions.\nHeuristics and metaheuristics make few or no assumptions about the problem being optimized. Usually, heuristics do not guarantee that any optimal solution need be found. On the other hand, heuristics are used to find approximate solutions for many complicated optimization problems.\nConstraint satisfaction studies the case in which the objective function f is constant (this is used in artificial intelligence, particularly in automated reasoning).\nConstraint programming is a programming paradigm wherein relations between variables are stated in the form of constraints.\nConstraint programming is a programming paradigm wherein relations between variables are stated in the form of constraints.\nDisjunctive programming is used where at least one constraint must be satisfied but not all. It is of particular use in scheduling.\nSpace mapping is a concept for modeling and optimization of an engineering system to high-fidelity (fine) model accuracy exploiting a suitable physically meaningful coarse or surrogate model.\n",
            "paragraph1": "In a number of subfields, the techniques are designed primarily for optimization in dynamic contexts (that is, decision making over time):\n",
            "ul2": "Calculus of variations seeks to optimize an action integral over some space to an extremum by varying a function of the coordinates.\nOptimal control theory is a generalization of the calculus of variations which introduces control policies.\nDynamic programming is the approach to solve the stochastic optimization problem with stochastic, randomness, and unknown model parameters. It studies the case in which the optimization strategy is based on splitting the problem into smaller subproblems. The equation that describes the relationship between these subproblems is called the Bellman equation.\nMathematical programming with equilibrium constraints is where the constraints include variational inequalities or  complementarities.\n",
            "subtitle1": "Multi-objective optimization",
            "paragraph2": "Adding more than one objective to an optimization problem adds complexity. For example, to optimize a structural design, one would desire a design that is both light and rigid. When two objectives conflict, a trade-off must be created. There may be one lightest design, one stiffest design, and an infinite number of designs that are some compromise of weight and rigidity. The set of trade-off designs that improve upon one criterion at the expense of another is known as the Pareto set. The curve created plotting weight against stiffness of the best designs is known as the Pareto frontier.\n",
            "paragraph3": "A design is judged to be \"Pareto optimal\" (equivalently, \"Pareto efficient\" or in the Pareto set) if it is not dominated by any other design: If it is worse than another design in some respects and no better in any respect, then it is dominated and is not Pareto optimal.\n",
            "paragraph4": "The choice among \"Pareto optimal\" solutions to determine the \"favorite solution\" is delegated to the decision maker. In other words, defining the problem as multi-objective optimization signals that some information is missing: desirable objectives are given but combinations of them are not rated relative to each other. In some cases, the missing information can be derived by interactive sessions with the decision maker.\n",
            "paragraph5": "Multi-objective optimization problems have been generalized further into vector optimization problems where the (partial) ordering is no longer given by the Pareto ordering.\n",
            "subtitle2": "Multi-modal or global optimization",
            "paragraph6": "Optimization problems are often multi-modal; that is, they possess multiple good solutions. They could all be globally good (same cost function value) or there could be a mix of globally good and locally good solutions. Obtaining all (or at least some of) the multiple solutions is the goal of a multi-modal optimizer.\n",
            "paragraph7": "Classical optimization techniques due to their iterative approach do not perform satisfactorily when they are used to obtain multiple solutions, since it is not guaranteed that different solutions will be obtained even with different starting points in multiple runs of the algorithm.\n",
            "paragraph8": "Common approaches to global optimization problems, where multiple local extrema may be present include evolutionary algorithms, Bayesian optimization and simulated annealing.\n"
        },
        {
            "title": "Classification of critical points and extrema",
            "subtitle1": "Feasibility problem",
            "paragraph1": "The satisfiability problem, also called the feasibility problem, is just the problem of finding any feasible solution at all without regard to objective value. This can be regarded as the special case of mathematical optimization where the objective value is the same for every solution, and thus any solution is optimal.\n",
            "paragraph2": "Many optimization algorithms need to start from a feasible point. One way to obtain such a point is to relax the feasibility conditions using a slack variable; with enough slack, any starting point is feasible. Then, minimize that slack variable until the slack is null or negative.\n",
            "subtitle2": "Existence",
            "paragraph3": "The extreme value theorem of Karl Weierstrass states that a continuous real-valued function on a compact set attains its maximum and minimum value. More generally, a lower semi-continuous function on a compact set attains its minimum; an upper semi-continuous function on a compact set attains its maximum point or view.\n",
            "subtitle3": "Necessary conditions for optimality",
            "paragraph4": "One of Fermat's theorems states that optima of unconstrained problems are found at stationary points, where the first derivative or the gradient of the objective function is zero (see first derivative test). More generally, they may be found at critical points, where the first derivative or gradient of the objective function is zero or is undefined, or on the boundary of the choice set. An equation (or set of equations) stating that the first derivative(s) equal(s) zero at an interior optimum is called a 'first-order condition' or a set of first-order conditions.\n",
            "paragraph5": "Optima of equality-constrained problems can be found by the Lagrange multiplier method. The optima of problems with equality and/or inequality constraints can be found using the 'Karush–Kuhn–Tucker conditions'.\n",
            "subtitle4": "Sufficient conditions for optimality",
            "paragraph6": "While the first derivative test identifies points that might be extrema, this test does not distinguish a point that is a minimum from one that is a maximum or one that is neither. When the objective function is twice differentiable, these cases can be distinguished by checking the second derivative or the matrix of second derivatives (called the Hessian matrix) in unconstrained problems, or the matrix of second derivatives of the objective function and the constraints called the bordered Hessian in constrained problems. The conditions that distinguish maxima, or minima, from other stationary points are called 'second-order conditions' (see 'Second derivative test'). If a candidate solution satisfies the first-order conditions, then the satisfaction of the second-order conditions as well is sufficient to establish at least local optimality.\n",
            "subtitle5": "Sensitivity and continuity of optima",
            "paragraph7": "The envelope theorem describes how the value of an optimal solution changes when an underlying parameter changes. The process of computing this change is called comparative statics.\n",
            "paragraph8": "The maximum theorem of Claude Berge (1963) describes the continuity of an optimal solution as a function of underlying parameters.\n",
            "subtitle6": "Calculus of optimization",
            "paragraph9": "For unconstrained problems with twice-differentiable functions, some critical points can be found by finding the points where the gradient of the objective function is zero (that is, the stationary points). More generally, a zero subgradient certifies that a local minimum has been found for minimization problems with convex functions and other locally Lipschitz functions.\n",
            "paragraph10": "Further, critical points can be classified using the definiteness of the Hessian matrix: If the Hessian is positive definite at a critical point, then the point is a local minimum; if the Hessian matrix is negative definite, then the point is a local maximum; finally, if indefinite, then the point is some kind of saddle point.\n",
            "paragraph11": "Constrained problems can often be transformed into unconstrained problems with the help of Lagrange multipliers. Lagrangian relaxation can also provide approximate solutions to difficult constrained problems.\n",
            "paragraph12": "When the objective function is a convex function, then any local minimum will also be a global minimum. There exist efficient numerical techniques for minimizing convex functions, such as interior-point methods.\n"
        },
        {
            "title": "Computational optimization techniques",
            "paragraph1": "To solve problems, researchers may use algorithms that terminate in a finite number of steps, or iterative methods that converge to a solution (on some specified class of problems), or heuristics that may provide approximate solutions to some problems (although their iterates need not converge).\n",
            "subtitle1": "Optimization algorithms",
            "ul1": "Simplex algorithm of George Dantzig, designed for linear programming\nExtensions of the simplex algorithm, designed for quadratic programming and for linear-fractional programming\nVariants of the simplex algorithm that are especially suited for network optimization\nCombinatorial algorithms\nQuantum optimization algorithms\n",
            "subtitle2": "Iterative methods",
            "paragraph2": "The iterative methods used to solve problems of nonlinear programming differ according to whether they evaluate Hessians, gradients, or only function values. While evaluating Hessians (H) and gradients (G) improves the rate of convergence, for functions for which these quantities exist and vary sufficiently smoothly, such evaluations increase the computational complexity (or computational cost) of each iteration. In some cases, the computational complexity may be excessively high.\n",
            "paragraph3": "One major criterion for optimizers is just the number of required function evaluations as this often is already a large computational effort, usually much more effort than within the optimizer itself, which mainly has to operate over the N variables. The derivatives provide detailed information for such optimizers, but are even harder to calculate, e.g. approximating the gradient takes at least N+1 function evaluations. For approximations of the 2nd derivatives (collected in the Hessian matrix), the number of function evaluations is in the order of N². Newton's method requires the 2nd-order derivatives, so for each iteration, the number of function calls is in the order of N², but for a simpler pure gradient optimizer it is only N. However, gradient optimizers need usually more iterations than Newton's algorithm. Which one is best with respect to the number of function calls depends on the problem itself.\n",
            "ul2": "Methods that evaluate Hessians (or approximate Hessians, using finite differences):\nNewton's method\nSequential quadratic programming: A Newton-based method for small-medium scale constrained problems. Some versions can handle large-dimensional problems.\nInterior point methods: This is a large class of methods for constrained optimization, some of which use only (sub)gradient information and others of which require the evaluation of Hessians.\nNewton's method\nSequential quadratic programming: A Newton-based method for small-medium scale constrained problems. Some versions can handle large-dimensional problems.\nInterior point methods: This is a large class of methods for constrained optimization, some of which use only (sub)gradient information and others of which require the evaluation of Hessians.\nMethods that evaluate gradients, or approximate gradients in some way (or even subgradients):\nCoordinate descent methods: Algorithms which update a single coordinate in each iteration\nConjugate gradient methods: Iterative methods for large problems. (In theory, these methods terminate in a finite number of steps with quadratic objective functions, but this finite termination is not observed in practice on finite–precision computers.)\nGradient descent (alternatively, \"steepest descent\" or \"steepest ascent\"): A (slow) method of historical and theoretical interest, which has had renewed interest for finding approximate solutions of enormous problems.\nSubgradient methods: An iterative method for large locally Lipschitz functions using generalized gradients. Following Boris T. Polyak, subgradient–projection methods are similar to conjugate–gradient methods.\nBundle method of descent: An iterative method for small–medium-sized problems with locally Lipschitz functions, particularly for convex minimization problems (similar to conjugate gradient methods).\nEllipsoid method: An iterative method for small problems with quasiconvex objective functions and of great theoretical interest, particularly in establishing the polynomial time complexity of some combinatorial optimization problems. It has similarities with Quasi-Newton methods.\nConditional gradient method (Frank–Wolfe) for approximate minimization of specially structured problems with linear constraints, especially with traffic networks. For general unconstrained problems, this method reduces to the gradient method, which is regarded as obsolete (for almost all problems).\nQuasi-Newton methods: Iterative methods for medium-large problems (e.g. N<1000).\nSimultaneous perturbation stochastic approximation (SPSA) method for stochastic optimization; uses random (efficient) gradient approximation.\nCoordinate descent methods: Algorithms which update a single coordinate in each iteration\nConjugate gradient methods: Iterative methods for large problems. (In theory, these methods terminate in a finite number of steps with quadratic objective functions, but this finite termination is not observed in practice on finite–precision computers.)\nGradient descent (alternatively, \"steepest descent\" or \"steepest ascent\"): A (slow) method of historical and theoretical interest, which has had renewed interest for finding approximate solutions of enormous problems.\nSubgradient methods: An iterative method for large locally Lipschitz functions using generalized gradients. Following Boris T. Polyak, subgradient–projection methods are similar to conjugate–gradient methods.\nBundle method of descent: An iterative method for small–medium-sized problems with locally Lipschitz functions, particularly for convex minimization problems (similar to conjugate gradient methods).\nEllipsoid method: An iterative method for small problems with quasiconvex objective functions and of great theoretical interest, particularly in establishing the polynomial time complexity of some combinatorial optimization problems. It has similarities with Quasi-Newton methods.\nConditional gradient method (Frank–Wolfe) for approximate minimization of specially structured problems with linear constraints, especially with traffic networks. For general unconstrained problems, this method reduces to the gradient method, which is regarded as obsolete (for almost all problems).\nQuasi-Newton methods: Iterative methods for medium-large problems (e.g. N<1000).\nSimultaneous perturbation stochastic approximation (SPSA) method for stochastic optimization; uses random (efficient) gradient approximation.\nMethods that evaluate only function values: If a problem is continuously differentiable, then gradients can be approximated using finite differences, in which case a gradient-based method can be used.\nInterpolation methods\nPattern search methods, which have better convergence properties than the Nelder–Mead heuristic (with simplices), which is listed below.\nInterpolation methods\nPattern search methods, which have better convergence properties than the Nelder–Mead heuristic (with simplices), which is listed below.\n",
            "subtitle3": "Global convergence",
            "paragraph4": "More generally, if the objective function is not a quadratic function, then many optimization methods use other methods to ensure that some subsequence of iterations converges to an optimal solution. The first and still popular method for ensuring convergence relies on line searches, which optimize a function along one dimension. A second and increasingly popular method for ensuring convergence uses trust regions. Both line searches and trust regions are used in modern methods of non-differentiable optimization. Usually, a global optimizer is much slower than advanced local optimizers (such as BFGS), so often an efficient global optimizer can be constructed by starting the local optimizer from different starting points.\n",
            "subtitle4": "Heuristics",
            "paragraph5": "Besides (finitely terminating) algorithms and (convergent) iterative methods, there are heuristics. A heuristic is any algorithm which is not guaranteed (mathematically) to find the solution, but which is nevertheless useful in certain practical situations. List of some well-known heuristics:\n"
        },
        {
            "title": "Applications",
            "subtitle1": "Mechanics",
            "paragraph1": "Problems in rigid body dynamics (in particular articulated rigid body dynamics) often require mathematical programming techniques, since you can view rigid body dynamics as attempting to solve an ordinary differential equation on a constraint manifold; the constraints are various nonlinear geometric constraints such as \"these two points must always coincide\", \"this surface must not penetrate any other\", or \"this point must always lie somewhere on this curve\". Also, the problem of computing contact forces can be done by solving a linear complementarity problem, which can also be viewed as a QP (quadratic programming) problem.\n",
            "paragraph2": "Many design problems can also be expressed as optimization programs. This application is called design optimization. One subset is the engineering optimization, and another recent and growing subset of this field is multidisciplinary design optimization, which, while useful in many problems, has in particular been applied to aerospace engineering problems.\n",
            "paragraph3": "This approach may be applied in cosmology and astrophysics.\n",
            "subtitle2": "Economics and finance",
            "paragraph4": "Economics is closely enough linked to optimization of agents that an influential definition relatedly describes economics qua science as the \"study of human behavior as a relationship between ends and scarce means\" with alternative uses.  Modern optimization theory includes traditional optimization theory but also overlaps with game theory and the study of economic equilibria. The Journal of Economic Literature codes classify mathematical programming, optimization techniques, and related topics under JEL:C61-C63.\n",
            "paragraph5": "In microeconomics, the utility maximization problem and its dual problem, the expenditure minimization problem, are economic optimization problems. Insofar as they behave consistently, consumers are assumed to maximize their utility, while firms are usually assumed to maximize their profit. Also, agents are often modeled as being risk-averse, thereby preferring to avoid risk. Asset prices are also modeled using optimization theory, though the underlying mathematics relies on optimizing stochastic processes rather than on static optimization. International trade theory also uses optimization to explain trade patterns between nations. The optimization of portfolios is an example of multi-objective optimization in economics.\n",
            "paragraph6": "Since the 1970s, economists have modeled dynamic decisions over time using control theory. For example, dynamic search models are used to study labor-market behavior. A crucial distinction is between deterministic and stochastic models. Macroeconomists build dynamic stochastic general equilibrium (DSGE) models that describe the dynamics of the whole economy as the result of the interdependent optimizing decisions of workers, consumers, investors, and governments.\n",
            "subtitle3": "Electrical engineering",
            "paragraph7": "Some common applications of optimization techniques in electrical engineering include active filter design, stray field reduction in superconducting magnetic energy storage systems, space mapping design of microwave structures, handset antennas, electromagnetics-based design. Electromagnetically validated design optimization of microwave components and antennas has made extensive use of an appropriate physics-based or empirical surrogate model and space mapping methodologies since the discovery of space mapping in 1993.\n",
            "subtitle4": "Civil engineering",
            "paragraph8": "Optimization has been widely used in civil engineering. Construction management and transportation engineering are among the main branches of civil engineering that heavily rely on optimization. The most common civil engineering problems that are solved by optimization are cut and fill of roads, life-cycle analysis of structures and infrastructures, resource leveling, water resource allocation, traffic management and schedule optimization.\n",
            "subtitle5": "Operations research",
            "paragraph9": "Another field that uses optimization techniques extensively is operations research. Operations research also uses stochastic modeling and simulation to support improved decision-making. Increasingly, operations research uses stochastic programming to model dynamic decisions that adapt to events; such problems can be solved with large-scale optimization and stochastic optimization methods.\n",
            "subtitle6": "Control engineering",
            "paragraph10": "Mathematical optimization is used in much modern controller design. High-level controllers such as model predictive control (MPC) or real-time optimization (RTO) employ mathematical optimization. These algorithms run online and repeatedly determine values for decision variables, such as choke openings in a process plant, by iteratively solving a mathematical optimization problem including constraints and a model of the system to be controlled.\n",
            "subtitle7": "Geophysics",
            "paragraph11": "Optimization techniques are regularly used in geophysical parameter estimation problems. Given a set of geophysical measurements, e.g. seismic recordings, it is common to solve for the physical properties and geometrical shapes of the underlying rocks and fluids.  The majority of problems in geophysics are nonlinear with both deterministic and stochastic methods being widely used.\n",
            "subtitle8": "Molecular modeling",
            "paragraph12": "Nonlinear optimization methods are widely used in conformational analysis.\n",
            "subtitle9": "Computational systems biology",
            "paragraph13": "Optimization techniques are used in many facets of computational systems biology such as model building, optimal experimental design, metabolic engineering, and synthetic biology. Linear programming has been applied to calculate the maximal possible yields of fermentation products, and to infer gene regulatory networks from multiple microarray datasets as well as transcriptional regulatory networks from high-throughput data. Nonlinear programming has been used to analyze energy metabolism and has been applied to metabolic engineering and parameter estimation in biochemical pathways.\n",
            "subtitle10": "Machine learning"
        },
        {
            "title": "Solvers"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Mathematical_Programming",
        "https://en.wikipedia.org/wiki/Test_functions_for_optimization",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Engineering",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Economics",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Optimization_problem",
        "https://en.wikipedia.org/wiki/Maxima_and_minima",
        "https://en.wikipedia.org/wiki/Function_of_a_real_variable",
        "https://en.wikipedia.org/wiki/Argument_of_a_function",
        "https://en.wikipedia.org/wiki/Applied_mathematics",
        "https://en.wikipedia.org/wiki/Domain_of_a_function",
        "https://en.wikipedia.org/wiki/Optimization_problem",
        "https://en.wikipedia.org/wiki/Real_number",
        "https://en.wikipedia.org/wiki/Optimization_problem",
        "https://en.wikipedia.org/wiki/Computer_programming",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Physics",
        "https://en.wikipedia.org/wiki/Energy",
        "https://en.wikipedia.org/wiki/System",
        "https://en.wikipedia.org/wiki/Mathematical_model",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Loss_function",
        "https://en.wikipedia.org/wiki/Subset",
        "https://en.wikipedia.org/wiki/Euclidean_space",
        "https://en.wikipedia.org/wiki/Domain_of_a_function",
        "https://en.wikipedia.org/wiki/Candidate_solution",
        "https://en.wikipedia.org/wiki/Loss_function",
        "https://en.wikipedia.org/wiki/Global_minimum",
        "https://en.wikipedia.org/wiki/Convex_function",
        "https://en.wikipedia.org/wiki/Convex_optimization",
        "https://en.wikipedia.org/wiki/Global_optimization",
        "https://en.wikipedia.org/wiki/Applied_mathematics",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Real_number",
        "https://en.wikipedia.org/wiki/Infinity",
        "https://en.wikipedia.org/wiki/Arg_max",
        "https://en.wikipedia.org/wiki/Argument_of_a_function",
        "https://en.wikipedia.org/wiki/Feasible_set",
        "https://en.wikipedia.org/wiki/Integer",
        "https://en.wikipedia.org/wiki/Pierre_de_Fermat",
        "https://en.wikipedia.org/wiki/Joseph_Louis_Lagrange",
        "https://en.wikipedia.org/wiki/Isaac_Newton",
        "https://en.wikipedia.org/wiki/Carl_Friedrich_Gauss",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/George_Dantzig",
        "https://en.wikipedia.org/wiki/Leonid_Kantorovich",
        "https://en.wikipedia.org/wiki/Computer_programming",
        "https://en.wikipedia.org/wiki/Logistics",
        "https://en.wikipedia.org/wiki/Simplex_algorithm",
        "https://en.wikipedia.org/wiki/John_von_Neumann",
        "https://en.wikipedia.org/wiki/Richard_Bellman",
        "https://en.wikipedia.org/wiki/Fritz_John",
        "https://en.wikipedia.org/wiki/Narendra_Karmarkar",
        "https://en.wikipedia.org/wiki/William_Karush",
        "https://en.wikipedia.org/wiki/Leonid_Khachiyan",
        "https://en.wikipedia.org/wiki/Bernard_Koopman",
        "https://en.wikipedia.org/wiki/Harold_Kuhn",
        "https://en.wikipedia.org/wiki/Arkadi_Nemirovski",
        "https://en.wikipedia.org/wiki/Yurii_Nesterov",
        "https://en.wikipedia.org/wiki/Lev_Pontryagin",
        "https://en.wikipedia.org/wiki/Convex_programming",
        "https://en.wikipedia.org/wiki/Convex_function",
        "https://en.wikipedia.org/wiki/Concave_function",
        "https://en.wikipedia.org/wiki/Convex_set",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Polyhedron",
        "https://en.wikipedia.org/wiki/Polytope",
        "https://en.wikipedia.org/wiki/Bounded_set",
        "https://en.wikipedia.org/wiki/Semidefinite_programming",
        "https://en.wikipedia.org/wiki/Semidefinite",
        "https://en.wikipedia.org/wiki/Conic_programming",
        "https://en.wikipedia.org/wiki/Geometric_programming",
        "https://en.wikipedia.org/wiki/Posynomials",
        "https://en.wikipedia.org/wiki/Monomials",
        "https://en.wikipedia.org/wiki/Integer_programming",
        "https://en.wikipedia.org/wiki/Integer",
        "https://en.wikipedia.org/wiki/Quadratic_programming",
        "https://en.wikipedia.org/wiki/Fractional_programming",
        "https://en.wikipedia.org/wiki/Nonlinear_programming",
        "https://en.wikipedia.org/wiki/Stochastic_programming",
        "https://en.wikipedia.org/wiki/Random_variable",
        "https://en.wikipedia.org/wiki/Robust_optimization",
        "https://en.wikipedia.org/wiki/Combinatorial_optimization",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Stochastic_optimization",
        "https://en.wikipedia.org/wiki/Dimension",
        "https://en.wikipedia.org/wiki/Metaheuristic",
        "https://en.wikipedia.org/wiki/Constraint_satisfaction",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Automated_reasoning",
        "https://en.wikipedia.org/wiki/Constraint_programming",
        "https://en.wikipedia.org/wiki/Space_mapping",
        "https://en.wikipedia.org/wiki/Surrogate_model",
        "https://en.wikipedia.org/wiki/Calculus_of_variations",
        "https://en.wikipedia.org/wiki/Optimal_control",
        "https://en.wikipedia.org/wiki/Dynamic_programming",
        "https://en.wikipedia.org/wiki/Stochastic_optimization",
        "https://en.wikipedia.org/wiki/Bellman_equation",
        "https://en.wikipedia.org/wiki/Mathematical_programming_with_equilibrium_constraints",
        "https://en.wikipedia.org/wiki/Variational_inequalities",
        "https://en.wikipedia.org/wiki/Complementarity_theory",
        "https://en.wikipedia.org/wiki/Pareto_set",
        "https://en.wikipedia.org/wiki/Pareto_frontier",
        "https://en.wikipedia.org/wiki/Vector_optimization",
        "https://en.wikipedia.org/wiki/Global_optimization",
        "https://en.wikipedia.org/wiki/Evolutionary_algorithm",
        "https://en.wikipedia.org/wiki/Bayesian_optimization",
        "https://en.wikipedia.org/wiki/Simulated_annealing",
        "https://en.wikipedia.org/wiki/Satisfiability_problem",
        "https://en.wikipedia.org/wiki/Feasible_solution",
        "https://en.wikipedia.org/wiki/Slack_variable",
        "https://en.wikipedia.org/wiki/Extreme_value_theorem",
        "https://en.wikipedia.org/wiki/Karl_Weierstrass",
        "https://en.wikipedia.org/wiki/Stationary_point",
        "https://en.wikipedia.org/wiki/First_derivative_test",
        "https://en.wikipedia.org/wiki/Lagrange_multiplier",
        "https://en.wikipedia.org/wiki/Hessian_matrix",
        "https://en.wikipedia.org/wiki/Second_derivative_test",
        "https://en.wikipedia.org/wiki/Envelope_theorem",
        "https://en.wikipedia.org/wiki/Parameter",
        "https://en.wikipedia.org/wiki/Comparative_statics",
        "https://en.wikipedia.org/wiki/Maximum_theorem",
        "https://en.wikipedia.org/wiki/Claude_Berge",
        "https://en.wikipedia.org/wiki/Differential_calculus",
        "https://en.wikipedia.org/wiki/Gradient",
        "https://en.wikipedia.org/wiki/Hessian_matrix",
        "https://en.wikipedia.org/wiki/Positive_definite_matrix",
        "https://en.wikipedia.org/wiki/Lipschitz_continuity",
        "https://en.wikipedia.org/wiki/Convex_function",
        "https://en.wikipedia.org/wiki/Convex_analysis",
        "https://en.wikipedia.org/wiki/Gradient",
        "https://en.wikipedia.org/wiki/Subgradient",
        "https://en.wikipedia.org/wiki/Convex_optimization",
        "https://en.wikipedia.org/wiki/Convex_function",
        "https://en.wikipedia.org/wiki/Lipschitz_function",
        "https://en.wikipedia.org/wiki/Positive_definite_matrix",
        "https://en.wikipedia.org/wiki/Hessian_matrix",
        "https://en.wikipedia.org/wiki/Saddle_point",
        "https://en.wikipedia.org/wiki/Lagrange_multiplier",
        "https://en.wikipedia.org/wiki/Lagrangian_relaxation",
        "https://en.wikipedia.org/wiki/Convex_function",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Heuristic_algorithm",
        "https://en.wikipedia.org/wiki/List_of_optimization_algorithms",
        "https://en.wikipedia.org/wiki/Simplex_algorithm",
        "https://en.wikipedia.org/wiki/George_Dantzig",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Quadratic_programming",
        "https://en.wikipedia.org/wiki/Flow_network",
        "https://en.wikipedia.org/wiki/Combinatorial_optimization",
        "https://en.wikipedia.org/wiki/Quantum_optimization_algorithms",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Finite_difference",
        "https://en.wikipedia.org/wiki/Approximation_theory",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Iterative_methods",
        "https://en.wikipedia.org/wiki/Nonlinear_programming",
        "https://en.wikipedia.org/wiki/Subroutine",
        "https://en.wikipedia.org/wiki/Hessian_matrix",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Finite_difference",
        "https://en.wikipedia.org/wiki/Sequential_quadratic_programming",
        "https://en.wikipedia.org/wiki/Interior_point_methods",
        "https://en.wikipedia.org/wiki/Coordinate_descent",
        "https://en.wikipedia.org/wiki/Conjugate_gradient_method",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Gradient_descent",
        "https://en.wikipedia.org/wiki/Subgradient_method",
        "https://en.wikipedia.org/wiki/Lipschitz_continuity",
        "https://en.wikipedia.org/wiki/Subgradient",
        "https://en.wikipedia.org/wiki/Convex_optimization",
        "https://en.wikipedia.org/wiki/Ellipsoid_method",
        "https://en.wikipedia.org/wiki/Quasiconvex_function",
        "https://en.wikipedia.org/wiki/Simultaneous_perturbation_stochastic_approximation",
        "https://en.wikipedia.org/wiki/Interpolation",
        "https://en.wikipedia.org/wiki/Line_search",
        "https://en.wikipedia.org/wiki/Trust_region",
        "https://en.wikipedia.org/wiki/Subgradient_method",
        "https://en.wikipedia.org/wiki/BFGS_method",
        "https://en.wikipedia.org/wiki/Heuristic_algorithm",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Heuristic_algorithm",
        "https://en.wikipedia.org/wiki/Memetic_algorithm",
        "https://en.wikipedia.org/wiki/Differential_evolution",
        "https://en.wikipedia.org/wiki/Evolutionary_algorithms",
        "https://en.wikipedia.org/wiki/Dynamic_relaxation",
        "https://en.wikipedia.org/wiki/Genetic_algorithms",
        "https://en.wikipedia.org/wiki/Hill_climbing",
        "https://en.wikipedia.org/wiki/Particle_swarm_optimization",
        "https://en.wikipedia.org/wiki/Gravitational_search_algorithm",
        "https://en.wikipedia.org/wiki/Simulated_annealing",
        "https://en.wikipedia.org/wiki/Stochastic_tunneling",
        "https://en.wikipedia.org/wiki/Tabu_search",
        "https://en.wikipedia.org/wiki/Reactive_Search_Optimization",
        "https://en.wikipedia.org/wiki/LIONsolver",
        "https://en.wikipedia.org/wiki/Rigid_body_dynamics",
        "https://en.wikipedia.org/wiki/Ordinary_differential_equation",
        "https://en.wikipedia.org/wiki/Linear_complementarity_problem",
        "https://en.wikipedia.org/wiki/Engineering_optimization",
        "https://en.wikipedia.org/wiki/Multidisciplinary_design_optimization",
        "https://en.wikipedia.org/wiki/Aerospace_engineering",
        "https://en.wikipedia.org/wiki/Economics",
        "https://en.wikipedia.org/wiki/Scarce",
        "https://en.wikipedia.org/wiki/Game_theory",
        "https://en.wikipedia.org/wiki/Journal_of_Economic_Literature",
        "https://en.wikipedia.org/wiki/JEL_classification_codes",
        "https://en.wikipedia.org/wiki/Utility_maximization_problem",
        "https://en.wikipedia.org/wiki/Dual_problem",
        "https://en.wikipedia.org/wiki/Expenditure_minimization_problem",
        "https://en.wikipedia.org/wiki/Consumer",
        "https://en.wikipedia.org/wiki/Utility",
        "https://en.wikipedia.org/wiki/Firm",
        "https://en.wikipedia.org/wiki/Risk_aversion",
        "https://en.wikipedia.org/wiki/Asset_pricing",
        "https://en.wikipedia.org/wiki/Stochastic_process",
        "https://en.wikipedia.org/wiki/International_trade_theory",
        "https://en.wikipedia.org/wiki/Control_theory",
        "https://en.wikipedia.org/wiki/Search_theory",
        "https://en.wikipedia.org/wiki/Labor_economics",
        "https://en.wikipedia.org/wiki/Macroeconomics",
        "https://en.wikipedia.org/wiki/Dynamic_stochastic_general_equilibrium",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Active_filter",
        "https://en.wikipedia.org/wiki/Space_mapping",
        "https://en.wikipedia.org/wiki/Microwave",
        "https://en.wikipedia.org/wiki/Surrogate_model",
        "https://en.wikipedia.org/wiki/Space_mapping",
        "https://en.wikipedia.org/wiki/Space_mapping",
        "https://en.wikipedia.org/wiki/Construction_management",
        "https://en.wikipedia.org/wiki/Transportation_engineering",
        "https://en.wikipedia.org/wiki/Resource_leveling",
        "https://en.wikipedia.org/wiki/Hydrological_optimization",
        "https://en.wikipedia.org/wiki/Traffic",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Stochastic_programming",
        "https://en.wikipedia.org/wiki/Stochastic_optimization",
        "https://en.wikipedia.org/wiki/Model_predictive_control",
        "https://en.wikipedia.org/wiki/Geophysics",
        "https://en.wikipedia.org/wiki/Seismology",
        "https://en.wikipedia.org/wiki/Mineral_physics",
        "https://en.wikipedia.org/wiki/Structure_of_the_earth",
        "https://en.wikipedia.org/wiki/Molecular_modeling",
        "https://en.wikipedia.org/wiki/Conformational_analysis",
        "https://en.wikipedia.org/wiki/Computational_systems_biology",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Nonlinear_programming",
        "https://en.wikipedia.org/wiki/List_of_optimization_software",
        "https://en.wikipedia.org/wiki/Brachistochrone",
        "https://en.wikipedia.org/wiki/Curve_fitting",
        "https://en.wikipedia.org/wiki/Deterministic_global_optimization",
        "https://en.wikipedia.org/wiki/Goal_programming",
        "https://en.wikipedia.org/wiki/Least_squares",
        "https://en.wikipedia.org/wiki/Mathematical_Optimization_Society",
        "https://en.wikipedia.org/wiki/Process_optimization",
        "https://en.wikipedia.org/wiki/Test_functions_for_optimization",
        "https://en.wikipedia.org/wiki/Variational_calculus",
        "https://en.wikipedia.org/wiki/Vehicle_routing_problem",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Christodoulos_Floudas",
        "https://en.wikipedia.org/wiki/Springer_Verlag",
        "https://en.wikipedia.org/wiki/Lionel_Robbins",
        "https://en.wikipedia.org/wiki/Robert_Dorfman",
        "https://en.wikipedia.org/wiki/American_Economic_Review",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Julio_Rotemberg",
        "https://en.wikipedia.org/wiki/The_New_Palgrave_Dictionary_of_Economics",
        "https://en.wikipedia.org/wiki/John_Geanakoplos",
        "https://en.wikipedia.org/wiki/Pedro_Pedrosa_Mendes",
        "https://en.wikipedia.org/wiki/Jorge_Nocedal",
        "https://en.wikipedia.org/wiki/Optimization_algorithm",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Heuristic_algorithm",
        "https://en.wikipedia.org/wiki/Nonlinear_programming",
        "https://en.wikipedia.org/wiki/Line_search",
        "https://en.wikipedia.org/wiki/Successive_parabolic_interpolation",
        "https://en.wikipedia.org/wiki/Gradient",
        "https://en.wikipedia.org/wiki/Local_convergence",
        "https://en.wikipedia.org/wiki/Trust_region",
        "https://en.wikipedia.org/wiki/Wolfe_conditions",
        "https://en.wikipedia.org/wiki/Iterative_method",
        "https://en.wikipedia.org/wiki/Nonlinear_conjugate_gradient_method",
        "https://en.wikipedia.org/wiki/Gradient_descent",
        "https://en.wikipedia.org/wiki/Truncated_Newton_method",
        "https://en.wikipedia.org/wiki/Hessian_matrix",
        "https://en.wikipedia.org/wiki/Nonlinear_programming",
        "https://en.wikipedia.org/wiki/Barrier_function",
        "https://en.wikipedia.org/wiki/Penalty_method",
        "https://en.wikipedia.org/wiki/Augmented_Lagrangian_method",
        "https://en.wikipedia.org/wiki/Sequential_quadratic_programming",
        "https://en.wikipedia.org/wiki/Successive_linear_programming",
        "https://en.wikipedia.org/wiki/Convex_optimization",
        "https://en.wikipedia.org/wiki/Convex_minimization",
        "https://en.wikipedia.org/wiki/Subgradient_method",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Quadratic_programming",
        "https://en.wikipedia.org/wiki/Affine_scaling",
        "https://en.wikipedia.org/wiki/Ellipsoid_method",
        "https://en.wikipedia.org/wiki/Matroid",
        "https://en.wikipedia.org/wiki/Exchange_algorithm",
        "https://en.wikipedia.org/wiki/Simplex_algorithm",
        "https://en.wikipedia.org/wiki/Revised_simplex_method",
        "https://en.wikipedia.org/wiki/Combinatorial_optimization",
        "https://en.wikipedia.org/wiki/Approximation_algorithm",
        "https://en.wikipedia.org/wiki/Dynamic_programming",
        "https://en.wikipedia.org/wiki/Greedy_algorithm",
        "https://en.wikipedia.org/wiki/Integer_programming",
        "https://en.wikipedia.org/wiki/Branch_and_bound",
        "https://en.wikipedia.org/wiki/Branch_and_cut",
        "https://en.wikipedia.org/wiki/Graph_algorithm",
        "https://en.wikipedia.org/wiki/Minimum_spanning_tree",
        "https://en.wikipedia.org/wiki/Shortest_path_problem",
        "https://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm",
        "https://en.wikipedia.org/wiki/Flow_network",
        "https://en.wikipedia.org/wiki/Metaheuristic",
        "https://en.wikipedia.org/wiki/Evolutionary_algorithm",
        "https://en.wikipedia.org/wiki/Hill_climbing",
        "https://en.wikipedia.org/wiki/Simulated_annealing",
        "https://en.wikipedia.org/wiki/Tabu_search",
        "https://en.wikipedia.org/wiki/Comparison_of_optimization_software",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Areas_of_mathematics",
        "https://en.wikipedia.org/wiki/Foundations_of_mathematics",
        "https://en.wikipedia.org/wiki/Category_theory",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Mathematical_logic",
        "https://en.wikipedia.org/wiki/Philosophy_of_mathematics",
        "https://en.wikipedia.org/wiki/Set_theory",
        "https://en.wikipedia.org/wiki/Type_theory",
        "https://en.wikipedia.org/wiki/Algebra",
        "https://en.wikipedia.org/wiki/Abstract_algebra",
        "https://en.wikipedia.org/wiki/Commutative_algebra",
        "https://en.wikipedia.org/wiki/Elementary_algebra",
        "https://en.wikipedia.org/wiki/Group_theory",
        "https://en.wikipedia.org/wiki/Linear_algebra",
        "https://en.wikipedia.org/wiki/Multilinear_algebra",
        "https://en.wikipedia.org/wiki/Universal_algebra",
        "https://en.wikipedia.org/wiki/Homological_algebra",
        "https://en.wikipedia.org/wiki/Mathematical_analysis",
        "https://en.wikipedia.org/wiki/Calculus",
        "https://en.wikipedia.org/wiki/Real_analysis",
        "https://en.wikipedia.org/wiki/Complex_analysis",
        "https://en.wikipedia.org/wiki/Differential_equation",
        "https://en.wikipedia.org/wiki/Functional_analysis",
        "https://en.wikipedia.org/wiki/Harmonic_analysis",
        "https://en.wikipedia.org/wiki/Measure_theory",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Combinatorics",
        "https://en.wikipedia.org/wiki/Graph_theory",
        "https://en.wikipedia.org/wiki/Order_theory",
        "https://en.wikipedia.org/wiki/Game_theory",
        "https://en.wikipedia.org/wiki/Geometry",
        "https://en.wikipedia.org/wiki/Algebraic_geometry",
        "https://en.wikipedia.org/wiki/Analytic_geometry",
        "https://en.wikipedia.org/wiki/Differential_geometry",
        "https://en.wikipedia.org/wiki/Discrete_geometry",
        "https://en.wikipedia.org/wiki/Euclidean_geometry",
        "https://en.wikipedia.org/wiki/Finite_geometry",
        "https://en.wikipedia.org/wiki/Number_theory",
        "https://en.wikipedia.org/wiki/Arithmetic",
        "https://en.wikipedia.org/wiki/Algebraic_number_theory",
        "https://en.wikipedia.org/wiki/Analytic_number_theory",
        "https://en.wikipedia.org/wiki/Diophantine_geometry",
        "https://en.wikipedia.org/wiki/Topology",
        "https://en.wikipedia.org/wiki/General_topology",
        "https://en.wikipedia.org/wiki/Algebraic_topology",
        "https://en.wikipedia.org/wiki/Differential_topology",
        "https://en.wikipedia.org/wiki/Geometric_topology",
        "https://en.wikipedia.org/wiki/Homotopy_theory",
        "https://en.wikipedia.org/wiki/Applied_mathematics",
        "https://en.wikipedia.org/wiki/Control_theory",
        "https://en.wikipedia.org/wiki/Engineering_mathematics",
        "https://en.wikipedia.org/wiki/Mathematical_and_theoretical_biology",
        "https://en.wikipedia.org/wiki/Mathematical_chemistry",
        "https://en.wikipedia.org/wiki/Mathematical_economics",
        "https://en.wikipedia.org/wiki/Mathematical_finance",
        "https://en.wikipedia.org/wiki/Mathematical_physics",
        "https://en.wikipedia.org/wiki/Mathematical_psychology",
        "https://en.wikipedia.org/wiki/Mathematical_sociology",
        "https://en.wikipedia.org/wiki/Mathematical_statistics",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Probability_theory",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Computational_mathematics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Computer_algebra",
        "https://en.wikipedia.org/wiki/Lists_of_mathematics_topics",
        "https://en.wikipedia.org/wiki/History_of_mathematics",
        "https://en.wikipedia.org/wiki/Recreational_mathematics",
        "https://en.wikipedia.org/wiki/Mathematics_and_art",
        "https://en.wikipedia.org/wiki/Mathematics_education",
        "https://en.wikipedia.org/wiki/Systems_engineering",
        "https://en.wikipedia.org/wiki/Aerospace_engineering",
        "https://en.wikipedia.org/wiki/Biological_systems_engineering",
        "https://en.wikipedia.org/wiki/Configuration_management",
        "https://en.wikipedia.org/wiki/Earth_systems_engineering_and_management",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Enterprise_systems_engineering",
        "https://en.wikipedia.org/wiki/Performance_engineering",
        "https://en.wikipedia.org/wiki/Reliability_engineering",
        "https://en.wikipedia.org/wiki/Safety_engineering",
        "https://en.wikipedia.org/wiki/Requirements_engineering",
        "https://en.wikipedia.org/wiki/Functional_specification",
        "https://en.wikipedia.org/wiki/System_integration",
        "https://en.wikipedia.org/wiki/Verification_and_validation",
        "https://en.wikipedia.org/wiki/Design_review",
        "https://en.wikipedia.org/wiki/Business_process",
        "https://en.wikipedia.org/wiki/System",
        "https://en.wikipedia.org/wiki/System_lifecycle",
        "https://en.wikipedia.org/wiki/Systems_development_life_cycle",
        "https://en.wikipedia.org/wiki/Function_model",
        "https://en.wikipedia.org/wiki/IDEF",
        "https://en.wikipedia.org/wiki/Quality_function_deployment",
        "https://en.wikipedia.org/wiki/System_dynamics",
        "https://en.wikipedia.org/wiki/Systems_Modeling_Language",
        "https://en.wikipedia.org/wiki/Systems_analysis",
        "https://en.wikipedia.org/wiki/Systems_modeling",
        "https://en.wikipedia.org/wiki/Work_breakdown_structure",
        "https://en.wikipedia.org/wiki/Ruzena_Bajcsy",
        "https://en.wikipedia.org/wiki/Wernher_von_Braun",
        "https://en.wikipedia.org/wiki/Kathleen_Carley",
        "https://en.wikipedia.org/wiki/Harold_Chestnut",
        "https://en.wikipedia.org/wiki/Wolt_Fabrycky",
        "https://en.wikipedia.org/wiki/Barbara_Grosz",
        "https://en.wikipedia.org/wiki/Arthur_David_Hall_III",
        "https://en.wikipedia.org/wiki/Derek_Hitchins",
        "https://en.wikipedia.org/wiki/Radhika_Nagpal",
        "https://en.wikipedia.org/wiki/Simon_Ramo",
        "https://en.wikipedia.org/wiki/Joseph_Francis_Shea",
        "https://en.wikipedia.org/wiki/Katia_Sycara",
        "https://en.wikipedia.org/wiki/Control_engineering",
        "https://en.wikipedia.org/wiki/Computer_engineering",
        "https://en.wikipedia.org/wiki/Industrial_engineering",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Project_management",
        "https://en.wikipedia.org/wiki/Quality_management",
        "https://en.wikipedia.org/wiki/Risk_management",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}