{
    "url": "https://en.wikipedia.org/wiki/Theoretical_computer_science",
    "title": "Theoretical computer science",
    "table_of_contents": [
        "1 History",
        "2 Topics",
        "2.1 Algorithms",
        "2.2 Automata theory",
        "2.3 Coding theory",
        "2.4 Computational biology",
        "2.5 Computational complexity theory",
        "2.6 Computational geometry",
        "2.7 Computational learning theory",
        "2.8 Computational number theory",
        "2.9 Cryptography",
        "2.10 Data structures",
        "2.11 Distributed computation",
        "2.12 Information-based complexity",
        "2.13 Formal methods",
        "2.14 Information theory",
        "2.15 Machine learning",
        "2.16 Parallel computation",
        "2.17 Program semantics",
        "2.18 Quantum computation",
        "2.19 Symbolic computation",
        "2.20 Very-large-scale integration",
        "3 Organizations",
        "4 Journals and newsletters",
        "5 Conferences",
        "6 See also",
        "7 Notes",
        "8 Further reading",
        "9 External links"
    ],
    "content": [
        {
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Maquina.png/440px-Maquina.png",
                "caption": "\n\t\tAn artistic representation of a Turing machine. Turing machines are used to model general computing devices.\n\t"
            },
            "paragraph1": "Theoretical computer science (TCS) is a subset of general computer science and mathematics that focuses on mathematical aspects of computer science such as the theory of computation, lambda calculus, and type theory.\n",
            "paragraph2": "It is difficult to circumscribe the theoretical areas precisely. The ACM's Special Interest Group on Algorithms and Computation Theory (SIGACT) provides the following description:\n"
        },
        {
            "title": "History",
            "paragraph1": "While logical inference and mathematical proof had existed previously, in 1931 Kurt Gödel proved with his incompleteness theorem that there are fundamental limitations on what statements could be proved or disproved.\n",
            "paragraph2": "These developments have led to the modern study of logic and computability, and indeed the field of theoretical computer science as a whole[citation needed]. Information theory was added to the field with a 1948 mathematical theory of communication by Claude Shannon. In the same decade, Donald Hebb introduced a mathematical model of learning in the brain. With mounting biological data supporting this hypothesis with some modification, the fields of neural networks and parallel distributed processing were established. In 1971, Stephen Cook and, working independently, Leonid Levin, proved that there exist practically relevant problems that are NP-complete – a landmark result in computational complexity theory[citation needed].\n",
            "paragraph3": "With the development of quantum mechanics in the beginning of the 20th century came the concept that mathematical operations could be performed on an entire particle wavefunction. In other words, one could compute functions on multiple states simultaneously. This led to the concept of a quantum computer in the latter half of the 20th century that took off in the 1990s when Peter Shor showed that such methods could be used to factor large numbers in polynomial time, which, if implemented, would render some modern public key cryptography algorithms like RSA_(cryptosystem) insecure.[citation needed]\n",
            "paragraph4": "Modern theoretical computer science research is based on these basic developments, but includes many other mathematical and interdisciplinary problems that have been posed, as shown below:\n"
        },
        {
            "title": "Topics",
            "subtitle1": "Algorithms",
            "paragraph1": "An algorithm is a step-by-step procedure for calculations.  Algorithms are used for calculation, data processing, and automated reasoning.\n",
            "paragraph2": "An algorithm is an effective method expressed as a finite list of well-defined instructions for calculating a function.  Starting from an initial state and initial input (perhaps empty), the instructions describe a computation that, when executed, proceeds through a finite number of well-defined successive states, eventually producing \"output\" and terminating at a final ending state. The transition from one state to the next is not necessarily deterministic; some algorithms, known as randomized algorithms, incorporate random input.\n",
            "subtitle2": "Automata theory",
            "paragraph3": "Automata theory is the study of abstract machines and automata, as well as the computational problems that can be solved using them. It is a theory in theoretical computer science, under discrete mathematics (a section of mathematics and also of computer science). Automata comes from the Greek word αὐτόματα meaning \"self-acting\".\n",
            "paragraph4": "Automata Theory is the study of self-operating virtual machines to help in the logical understanding of input and output process, without or with intermediate stage(s) of computation (or any function/process).\n",
            "subtitle3": "Coding theory",
            "paragraph5": "Coding theory is the study of the properties of codes and their fitness for a specific application. Codes are used for data compression, cryptography, error-correction and more recently also for network coding. Codes are studied by various scientific disciplines—such as information theory, electrical engineering,  mathematics, and computer science—for the purpose of designing efficient and reliable data transmission methods. This typically involves the removal of redundancy and the correction (or detection) of errors in the transmitted data.\n",
            "subtitle4": "Computational biology",
            "paragraph6": "Computational biology involves the development and application of data-analytical and theoretical methods, mathematical modeling and computational simulation techniques to the study of biological, behavioral, and social systems. The field is broadly defined and includes foundations in computer science, applied mathematics, animation, statistics, biochemistry, chemistry, biophysics, molecular biology, genetics, genomics, ecology, evolution, anatomy, neuroscience, and visualization.\n",
            "paragraph7": "Computational biology is different from biological computation, which is a subfield of computer science and computer engineering using bioengineering and biology to build computers, but is similar to bioinformatics, which is an interdisciplinary science using computers to store and process biological data.\n",
            "subtitle5": "Computational complexity theory",
            "paragraph8": "Computational complexity theory is a branch of the theory of computation that focuses on classifying computational problems according to their inherent difficulty, and relating those classes to each other. A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical application of mathematical steps, such as an algorithm.\n",
            "paragraph9": "A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used. The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage. Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of processors (used in parallel computing). One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.\n",
            "subtitle6": "Computational geometry",
            "paragraph10": "Computational geometry is a branch of computer science devoted to the study of algorithms that can be stated in terms of geometry. Some purely geometrical problems arise out of the study of computational geometric algorithms, and such problems are also considered to be part of computational geometry. While modern computational geometry is a recent development, it is one of the oldest fields of computing with history stretching back to antiquity. An ancient precursor is the Sanskrit treatise Shulba Sutras, or \"Rules of the Chord\", that is a book of algorithms written in 800 BCE. The book prescribes step-by-step procedures for constructing geometric objects like altars using a peg and chord.\n",
            "paragraph11": "The main impetus for the development of computational geometry as a discipline was progress in computer graphics and computer-aided design and manufacturing (CAD/CAM), but many problems in computational geometry are classical in nature, and may come from mathematical visualization.\n",
            "paragraph12": "Other important applications of computational geometry include robotics (motion planning and visibility problems), geographic information systems (GIS) (geometrical location and search, route planning), integrated circuit design (IC geometry design and verification), computer-aided engineering (CAE) (mesh generation), computer vision (3D reconstruction).\n",
            "subtitle7": "Computational learning theory",
            "paragraph13": "Theoretical results in machine learning mainly deal with a type of inductive learning called supervised learning.  In supervised learning, an algorithm is given samples that are labeled in some\nuseful way.  For example, the samples might be descriptions of mushrooms, and the labels could be whether or not the mushrooms are edible.  The algorithm takes these previously labeled samples and\nuses them to induce a classifier.  This classifier is a function that assigns labels to samples including the samples that have never been previously seen by the algorithm.  The goal of the supervised learning algorithm is to optimize some measure of performance such as minimizing the number of mistakes made on new samples.\n",
            "subtitle8": "Computational number theory",
            "paragraph14": "Computational number theory, also known as algorithmic number theory, is the study of algorithms for performing number theoretic computations. The best known problem in the field is integer factorization.\n",
            "subtitle9": "Cryptography",
            "paragraph15": "Cryptography  is the practice and study of techniques for secure communication in the presence of third parties (called adversaries). More generally, it is about constructing and analyzing protocols that overcome the influence of adversaries and that are related to various aspects in information security such as data confidentiality, data integrity, authentication, and non-repudiation. Modern cryptography intersects the disciplines of mathematics, computer science, and electrical engineering. Applications of cryptography include ATM cards, computer passwords, and electronic commerce.\n",
            "paragraph16": "Modern cryptography is heavily based on mathematical theory and computer science practice; cryptographic algorithms are designed around computational hardness assumptions, making such algorithms hard to break in practice by any adversary. It is theoretically possible to break such a system, but it is infeasible to do so by any known practical means. These schemes are therefore termed computationally secure; theoretical advances, e.g., improvements in integer factorization algorithms, and faster computing technology require these solutions to be continually adapted. There exist information-theoretically secure schemes that provably cannot be broken even with unlimited computing power—an example is the one-time pad—but these schemes are more difficult to implement than the best theoretically breakable but computationally secure mechanisms.\n",
            "subtitle10": "Data structures",
            "paragraph17": "A data structure is a particular way of organizing data in a computer so that it can be used efficiently.\n",
            "paragraph18": "Different kinds of data structures are suited to different kinds of applications, and some are highly specialized to specific tasks. For example, databases use B-tree indexes for small percentages of data retrieval and compilers and databases use dynamic hash tables as look up tables.\n",
            "paragraph19": "Data structures provide a means to manage large amounts of data efficiently for uses such as large databases and internet indexing services. Usually, efficient data structures are key to designing efficient algorithms. Some formal design methods and programming languages emphasize data structures, rather than algorithms, as the key organizing factor in software design. Storing and retrieving can be carried out on data stored in both main memory and in secondary memory.\n",
            "subtitle11": "Distributed computation",
            "paragraph20": "Distributed computing studies distributed systems. A distributed system is a software system in which components located on networked computers communicate and coordinate their actions by passing messages. The components interact with each other in order to achieve a common goal. Three significant characteristics of distributed systems are: concurrency of components, lack of a global clock, and independent failure of components. Examples of distributed systems vary from SOA-based systems to massively multiplayer online games to  peer-to-peer applications, and blockchain networks like Bitcoin.\n",
            "paragraph21": "A computer program that runs in a distributed system is called a distributed program, and distributed programming is the process of writing such programs. There are many alternatives for the message passing mechanism, including RPC-like connectors and message queues.  An important goal and challenge of distributed systems is location transparency.\n",
            "subtitle12": "Information-based complexity",
            "paragraph22": "Information-based complexity (IBC) studies optimal algorithms and computational complexity for continuous problems. IBC has studied continuous problems as path integration, partial differential equations, systems of ordinary differential equations, nonlinear equations, integral equations, fixed points, and very-high-dimensional integration.\n",
            "subtitle13": "Formal methods",
            "paragraph23": "Formal methods are a particular kind of mathematics based techniques for the specification, development and verification of software and hardware systems. The use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design.\n",
            "paragraph24": "Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages, automata theory, and program semantics, but also type systems and algebraic data types to problems in software and hardware specification and verification.\n",
            "subtitle14": "Information theory",
            "paragraph25": "Information theory is a branch of applied mathematics, electrical engineering, and computer science involving the quantification of information.  Information theory was developed by Claude E. Shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data. Since its inception it has broadened to find applications in many other areas, including statistical inference, natural language processing, cryptography, neurobiology, the evolution and function of molecular codes, model selection in statistics, thermal physics, quantum computing, linguistics, plagiarism detection, pattern recognition, anomaly detection and other forms of data analysis.\n",
            "paragraph26": "Applications of fundamental topics of information theory include lossless data compression (e.g. ZIP files), lossy data compression (e.g. MP3s and JPEGs), and channel coding (e.g. for Digital Subscriber Line (DSL)).  The field is at the intersection of mathematics, statistics, computer science, physics, neurobiology, and electrical engineering. Its impact has been crucial to the success of the Voyager missions to deep space, the invention of the compact disc, the feasibility of mobile phones, the development of the Internet, the study of linguistics and of human perception, the understanding of black holes, and numerous other fields. Important sub-fields of information theory are source coding, channel coding, algorithmic complexity theory, algorithmic information theory, information-theoretic security, and measures of information.\n",
            "subtitle15": "Machine learning",
            "paragraph27": "Machine learning is a scientific discipline that deals with the construction and study of algorithms that can learn from data. Such algorithms operate by building a model based on inputs: 2  and using that to make predictions or decisions, rather than following only explicitly programmed instructions.\n",
            "paragraph28": "Machine learning can be considered a subfield of computer science and statistics. It has strong ties to artificial intelligence and optimization, which deliver methods, theory and application domains to the field. Machine learning is employed in a range of computing tasks where designing and programming explicit, rule-based algorithms is infeasible. Example applications include spam filtering, optical character recognition (OCR), search engines and computer vision. Machine learning is sometimes conflated with data mining, although that focuses more on exploratory data analysis. Machine learning and pattern recognition \"can be viewed as two facets of\nthe same field.\": vii \n",
            "subtitle16": "Parallel computation",
            "paragraph29": "Parallel computing is a form of computation in which many calculations are carried out simultaneously, operating on the principle that large problems can often be divided into smaller ones, which are then solved \"in parallel\". There are several different forms of parallel computing: bit-level, instruction level, data, and task parallelism. Parallelism has been employed for many years, mainly in high-performance computing, but interest in it has grown lately due to the physical constraints preventing frequency scaling. As power consumption (and consequently heat generation) by computers has become a concern in recent years, parallel computing has become the dominant paradigm in computer architecture, mainly in the form of multi-core processors.\n",
            "paragraph30": "Parallel computer programs are more difficult to write than sequential ones, because concurrency introduces several new classes of potential software bugs, of which race conditions are the most common. Communication and synchronization between the different subtasks are typically some of the greatest obstacles to getting good parallel program performance.\n",
            "paragraph31": "The maximum possible speed-up of a single program as a result of parallelization is known as Amdahl's law.\n",
            "subtitle17": "Program semantics",
            "paragraph32": "In programming language theory, semantics is the field concerned with the rigorous mathematical study of the meaning of programming languages. It does so by evaluating the meaning of syntactically legal strings defined by a specific programming language, showing the computation involved. In such a case that the evaluation would be of syntactically illegal strings, the result would be non-computation. Semantics describes the processes a computer follows when executing a program in that specific language. This can be shown by describing the relationship between the input and output of a program, or an explanation of how the program will execute on a certain platform, hence creating a model of computation.\n",
            "subtitle18": "Quantum computation",
            "paragraph33": "A quantum computer is a computation system that makes direct use of quantum-mechanical phenomena, such as superposition and entanglement, to perform operations on data. Quantum computers are different from digital computers based on transistors. Whereas digital computers require data to be encoded into binary digits (bits), each of which is always in one of two definite states (0 or 1), quantum computation uses qubits (quantum bits), which can be in superpositions of states. A theoretical model is the quantum Turing machine, also known as the universal quantum computer.  Quantum computers share theoretical similarities with non-deterministic and probabilistic computers; one example is the ability to be in more than one state simultaneously.  The field of quantum computing was first introduced by Yuri Manin in 1980 and Richard Feynman in 1982. A quantum computer with spins as quantum bits was also formulated for use as a quantum space–time in 1968.\n",
            "paragraph34": "As of 2014, quantum computing is still in its infancy but experiments have been carried out in which quantum computational operations were executed on a very small number of qubits. Both practical and theoretical research continues, and many national governments and military funding agencies support quantum computing research to develop quantum computers for both civilian and national security purposes, such as cryptanalysis.\n",
            "subtitle19": "Symbolic computation",
            "paragraph35": "Computer algebra, also called symbolic computation or algebraic computation is a scientific area that refers to the study and development of algorithms and software for manipulating mathematical expressions and other mathematical objects. Although, properly speaking, computer algebra should be a subfield of scientific computing, they are generally considered as distinct fields because scientific computing is usually based on numerical computation with approximate floating point numbers, while symbolic computation emphasizes exact computation with expressions containing variables that have not any given value and are thus manipulated as symbols (therefore the name of symbolic computation).\n",
            "paragraph36": "Software applications that perform symbolic calculations are called computer algebra systems, with the term system alluding to the complexity of the main applications  that include, at least, a method to represent mathematical data in a computer, a user programming language (usually different from the language used for the implementation), a dedicated memory manager, a user interface for the input/output of mathematical expressions, a large set of routines to perform usual operations, like simplification of expressions, differentiation using chain rule, polynomial factorization, indefinite integration, etc.\n",
            "subtitle20": "Very-large-scale integration",
            "paragraph37": "Very-large-scale integration (VLSI) is the process of creating an integrated circuit (IC) by combining thousands of transistors into a single chip. VLSI began in the 1970s when complex semiconductor and communication technologies were being developed. The microprocessor is a VLSI device. Before the introduction of VLSI technology most ICs had a limited set of functions they could perform. An electronic circuit might consist of a CPU, ROM, RAM and other glue logic. VLSI allows IC makers to add all of these circuits into one chip.\n"
        },
        {
            "title": "Organizations",
            "ul1": "European Association for Theoretical Computer Science\nSIGACT\nSimons Institute for the Theory of Computing\n"
        },
        {
            "title": "Journals and newsletters",
            "ul1": "“Discrete Mathematics and Theoretical Computer Science”\nInformation and Computation\nTheory of Computing (open access journal)\nFormal Aspects of Computing\nJournal of the ACM\nSIAM Journal on Computing (SICOMP)\nSIGACT News\nTheoretical Computer Science\nTheory of Computing Systems\nInternational Journal of Foundations of Computer Science\nChicago Journal of Theoretical Computer Science (open access journal)\nFoundations and Trends in Theoretical Computer Science\nJournal of Automata, Languages and Combinatorics\nActa Informatica\nFundamenta Informaticae\nACM Transactions on Computation Theory\nComputational Complexity\nJournal of Complexity\nACM Transactions on Algorithms\nInformation Processing Letters\nOpen Computer Science (open access journal)\n"
        },
        {
            "title": "Conferences",
            "ul1": "Annual ACM Symposium on Theory of Computing (STOC)[45]\nAnnual IEEE Symposium on Foundations of Computer Science (FOCS)[45]\nInnovations in Theoretical Computer Science (ITCS)\nMathematical Foundations of Computer Science (MFCS)[46]\nInternational Computer Science Symposium in Russia (CSR)[47]\nACM–SIAM Symposium on Discrete Algorithms (SODA)[45]\nIEEE Symposium on Logic in Computer Science (LICS)[45]\nComputational Complexity Conference (CCC)[48]\nInternational Colloquium on Automata, Languages and Programming (ICALP)[48]\nAnnual Symposium on Computational Geometry (SoCG)[48]\nACM Symposium on Principles of Distributed Computing (PODC)[45]\nACM Symposium on Parallelism in Algorithms and Architectures (SPAA)[48]\nAnnual Conference on Learning Theory (COLT)[48]\nSymposium on Theoretical Aspects of Computer Science (STACS)[48]\nEuropean Symposium on Algorithms (ESA)[48]\nWorkshop on Approximation Algorithms for Combinatorial Optimization Problems (APPROX)[48]\nWorkshop on Randomization and Computation (RANDOM)[48]\nInternational Symposium on Algorithms and Computation (ISAAC)[48]\nInternational Symposium on Fundamentals of Computation Theory (FCT)[49]\nInternational Workshop on Graph-Theoretic Concepts in Computer Science (WG)\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Turing_machine",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Lambda_calculus",
        "https://en.wikipedia.org/wiki/Type_theory",
        "https://en.wikipedia.org/wiki/Association_for_Computing_Machinery",
        "https://en.wikipedia.org/wiki/ACM_SIGACT",
        "https://en.wikipedia.org/wiki/Algorithms",
        "https://en.wikipedia.org/wiki/Data_structure",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Parallel_computation",
        "https://en.wikipedia.org/wiki/Distributed_computation",
        "https://en.wikipedia.org/wiki/Probabilistic_computation",
        "https://en.wikipedia.org/wiki/Quantum_computation",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Program_semantics",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Computational_economics",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Computational_number_theory",
        "https://en.wikipedia.org/wiki/Symbolic_computation",
        "https://en.wikipedia.org/wiki/History_of_computer_science",
        "https://en.wikipedia.org/wiki/Incompleteness_theorem",
        "https://en.wikipedia.org/wiki/Computability",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Claude_Shannon",
        "https://en.wikipedia.org/wiki/Donald_Hebb",
        "https://en.wikipedia.org/wiki/Hebbian_learning",
        "https://en.wikipedia.org/wiki/Neural_network",
        "https://en.wikipedia.org/wiki/Parallel_distributed_processing",
        "https://en.wikipedia.org/wiki/Stephen_Cook",
        "https://en.wikipedia.org/wiki/Leonid_Levin",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Quantum_mechanics",
        "https://en.wikipedia.org/wiki/Quantum_computer",
        "https://en.wikipedia.org/wiki/Peter_Shor",
        "https://en.wikipedia.org/wiki/Polynomial_time",
        "https://en.wikipedia.org/wiki/Public_key_cryptography",
        "https://en.wikipedia.org/wiki/Mathematical_logic",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Number_theory",
        "https://en.wikipedia.org/wiki/Graph_theory",
        "https://en.wikipedia.org/wiki/Computability_theory",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Type_theory",
        "https://en.wikipedia.org/wiki/Category_theory",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Combinatorial_optimization",
        "https://en.wikipedia.org/wiki/Quantum_computer",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Calculation",
        "https://en.wikipedia.org/wiki/Data_processing",
        "https://en.wikipedia.org/wiki/Automated_reasoning",
        "https://en.wikipedia.org/wiki/Effective_method",
        "https://en.wikipedia.org/wiki/Null_string",
        "https://en.wikipedia.org/wiki/Computation",
        "https://en.wikipedia.org/wiki/Deterministic",
        "https://en.wikipedia.org/wiki/Randomized_algorithms",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Abstract_machine",
        "https://en.wikipedia.org/wiki/Automaton",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Computation",
        "https://en.wikipedia.org/wiki/Coding_theory",
        "https://en.wikipedia.org/wiki/Coding_theory",
        "https://en.wikipedia.org/wiki/Data_compression",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Network_coding",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Data_transmission",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Applied_mathematics",
        "https://en.wikipedia.org/wiki/Animation",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Biochemistry",
        "https://en.wikipedia.org/wiki/Chemistry",
        "https://en.wikipedia.org/wiki/Biophysics",
        "https://en.wikipedia.org/wiki/Molecular_biology",
        "https://en.wikipedia.org/wiki/Genetics",
        "https://en.wikipedia.org/wiki/Genomics",
        "https://en.wikipedia.org/wiki/Ecology",
        "https://en.wikipedia.org/wiki/Evolution",
        "https://en.wikipedia.org/wiki/Anatomy",
        "https://en.wikipedia.org/wiki/Neuroscience",
        "https://en.wikipedia.org/wiki/Scientific_visualization",
        "https://en.wikipedia.org/wiki/Biological_computation",
        "https://en.wikipedia.org/wiki/Computer_engineering",
        "https://en.wikipedia.org/wiki/Bioengineering",
        "https://en.wikipedia.org/wiki/Biology",
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Bioinformatics",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Computational_problems",
        "https://en.wikipedia.org/wiki/Complexity_class",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Models_of_computation",
        "https://en.wikipedia.org/wiki/Complexity",
        "https://en.wikipedia.org/wiki/Communication_complexity",
        "https://en.wikipedia.org/wiki/Logic_gate",
        "https://en.wikipedia.org/wiki/Circuit_complexity",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Geometry",
        "https://en.wikipedia.org/wiki/Sanskrit",
        "https://en.wikipedia.org/wiki/Shulba_Sutras",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Mathematical_visualization",
        "https://en.wikipedia.org/wiki/Robotics",
        "https://en.wikipedia.org/wiki/Geographic_information_system",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/Computational_learning_theory",
        "https://en.wikipedia.org/wiki/Computational_number_theory",
        "https://en.wikipedia.org/wiki/Computational_number_theory",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Number_theory",
        "https://en.wikipedia.org/wiki/Computation",
        "https://en.wikipedia.org/wiki/Integer_factorization",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Secure_communication",
        "https://en.wikipedia.org/wiki/Communications_protocol",
        "https://en.wikipedia.org/wiki/Information_security",
        "https://en.wikipedia.org/wiki/Confidentiality",
        "https://en.wikipedia.org/wiki/Data_integrity",
        "https://en.wikipedia.org/wiki/Authentication",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Automated_teller_machine",
        "https://en.wikipedia.org/wiki/Password",
        "https://en.wikipedia.org/wiki/Electronic_commerce",
        "https://en.wikipedia.org/wiki/Computational_hardness_assumption",
        "https://en.wikipedia.org/wiki/Integer_factorization",
        "https://en.wikipedia.org/wiki/Information_theoretic_security",
        "https://en.wikipedia.org/wiki/Data_structure",
        "https://en.wikipedia.org/wiki/Data_structure",
        "https://en.wikipedia.org/wiki/Algorithmic_efficiency",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Hash_table",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Web_indexing",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Main_memory",
        "https://en.wikipedia.org/wiki/Secondary_memory",
        "https://en.wikipedia.org/wiki/Distributed_computation",
        "https://en.wikipedia.org/wiki/Distributed_computing",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Message_passing",
        "https://en.wikipedia.org/wiki/Massively_multiplayer_online_game",
        "https://en.wikipedia.org/wiki/Bitcoin",
        "https://en.wikipedia.org/wiki/Computer_program",
        "https://en.wikipedia.org/wiki/Remote_procedure_call",
        "https://en.wikipedia.org/wiki/Location_transparency",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Formal_specification",
        "https://en.wikipedia.org/wiki/Formal_verification",
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Computer_hardware",
        "https://en.wikipedia.org/wiki/Logic_in_computer_science",
        "https://en.wikipedia.org/wiki/Formal_language",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Program_semantics",
        "https://en.wikipedia.org/wiki/Type_systems",
        "https://en.wikipedia.org/wiki/Algebraic_data_types",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Applied_mathematics",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Information",
        "https://en.wikipedia.org/wiki/Signal_processing",
        "https://en.wikipedia.org/wiki/Data_compression",
        "https://en.wikipedia.org/wiki/Computer_data_storage",
        "https://en.wikipedia.org/wiki/Telecommunication",
        "https://en.wikipedia.org/wiki/Statistical_inference",
        "https://en.wikipedia.org/wiki/Natural_language_processing",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Neurobiology",
        "https://en.wikipedia.org/wiki/Model_selection",
        "https://en.wikipedia.org/wiki/Quantum_computing",
        "https://en.wikipedia.org/wiki/Linguistics",
        "https://en.wikipedia.org/wiki/Pattern_recognition",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Data_analysis",
        "https://en.wikipedia.org/wiki/Lossless_data_compression",
        "https://en.wikipedia.org/wiki/Lossy_data_compression",
        "https://en.wikipedia.org/wiki/MP3",
        "https://en.wikipedia.org/wiki/JPEG",
        "https://en.wikipedia.org/wiki/Channel_capacity",
        "https://en.wikipedia.org/wiki/DSL",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Physics",
        "https://en.wikipedia.org/wiki/Neurobiology",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Voyager_program",
        "https://en.wikipedia.org/wiki/Internet",
        "https://en.wikipedia.org/wiki/Linguistics",
        "https://en.wikipedia.org/wiki/Black_hole",
        "https://en.wikipedia.org/wiki/Source_coding",
        "https://en.wikipedia.org/wiki/Channel_coding",
        "https://en.wikipedia.org/wiki/Algorithmic_complexity_theory",
        "https://en.wikipedia.org/wiki/Algorithmic_information_theory",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Academic_disciplines",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Learning",
        "https://en.wikipedia.org/wiki/Statistical_model",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Spam_filter",
        "https://en.wikipedia.org/wiki/Optical_character_recognition",
        "https://en.wikipedia.org/wiki/Learning_to_rank",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Pattern_recognition",
        "https://en.wikipedia.org/wiki/Parallel_computation",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Computing",
        "https://en.wikipedia.org/wiki/Instruction_level_parallelism",
        "https://en.wikipedia.org/wiki/Data_parallelism",
        "https://en.wikipedia.org/wiki/Task_parallelism",
        "https://en.wikipedia.org/wiki/High_performance_computing",
        "https://en.wikipedia.org/wiki/Frequency_scaling",
        "https://en.wikipedia.org/wiki/Computer_architecture",
        "https://en.wikipedia.org/wiki/Parallel_algorithm",
        "https://en.wikipedia.org/wiki/Software_bug",
        "https://en.wikipedia.org/wiki/Race_condition",
        "https://en.wikipedia.org/wiki/Computer_networking",
        "https://en.wikipedia.org/wiki/Speedup",
        "https://en.wikipedia.org/wiki/Program_semantics",
        "https://en.wikipedia.org/wiki/Programming_language_theory",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Programming_language_syntax",
        "https://en.wikipedia.org/wiki/Computer_platform",
        "https://en.wikipedia.org/wiki/Model_of_computation",
        "https://en.wikipedia.org/wiki/Quantum_computation",
        "https://en.wikipedia.org/wiki/Quantum_computer",
        "https://en.wikipedia.org/wiki/Computation",
        "https://en.wikipedia.org/wiki/Quantum_mechanics",
        "https://en.wikipedia.org/wiki/Phenomena",
        "https://en.wikipedia.org/wiki/Quantum_superposition",
        "https://en.wikipedia.org/wiki/Quantum_entanglement",
        "https://en.wikipedia.org/wiki/Data",
        "https://en.wikipedia.org/wiki/Transistor",
        "https://en.wikipedia.org/wiki/Bit",
        "https://en.wikipedia.org/wiki/Qubits",
        "https://en.wikipedia.org/wiki/Quantum_superposition",
        "https://en.wikipedia.org/wiki/Quantum_Turing_machine",
        "https://en.wikipedia.org/wiki/Probabilistic_automaton",
        "https://en.wikipedia.org/wiki/Yuri_Manin",
        "https://en.wikipedia.org/wiki/Richard_Feynman",
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Cryptanalysis",
        "https://en.wikipedia.org/wiki/Symbolic_computation",
        "https://en.wikipedia.org/wiki/Computer_algebra",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Mathematical_object",
        "https://en.wikipedia.org/wiki/Scientific_computing",
        "https://en.wikipedia.org/wiki/Numerical_computation",
        "https://en.wikipedia.org/wiki/Floating_point_number",
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Computer_algebra_system",
        "https://en.wikipedia.org/wiki/User_interface",
        "https://en.wikipedia.org/wiki/Chain_rule",
        "https://en.wikipedia.org/wiki/Polynomial_factorization",
        "https://en.wikipedia.org/wiki/Indefinite_integration",
        "https://en.wikipedia.org/wiki/VLSI",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Transistors",
        "https://en.wikipedia.org/wiki/Semiconductor",
        "https://en.wikipedia.org/wiki/Communication",
        "https://en.wikipedia.org/wiki/Microprocessor",
        "https://en.wikipedia.org/wiki/Electronic_circuit",
        "https://en.wikipedia.org/wiki/Central_processing_unit",
        "https://en.wikipedia.org/wiki/Random_Access_Memory",
        "https://en.wikipedia.org/wiki/Glue_logic",
        "https://en.wikipedia.org/wiki/European_Association_for_Theoretical_Computer_Science",
        "https://en.wikipedia.org/wiki/SIGACT",
        "https://en.wikipedia.org/wiki/Simons_Institute_for_the_Theory_of_Computing",
        "https://en.wikipedia.org/wiki/Discrete_Mathematics_and_Theoretical_Computer_Science",
        "https://en.wikipedia.org/wiki/Information_and_Computation",
        "https://en.wikipedia.org/wiki/Formal_Aspects_of_Computing",
        "https://en.wikipedia.org/wiki/Journal_of_the_ACM",
        "https://en.wikipedia.org/wiki/SIAM_Journal_on_Computing",
        "https://en.wikipedia.org/wiki/SIGACT_News",
        "https://en.wikipedia.org/wiki/Theory_of_Computing_Systems",
        "https://en.wikipedia.org/wiki/International_Journal_of_Foundations_of_Computer_Science",
        "https://en.wikipedia.org/wiki/Foundations_and_Trends_in_Theoretical_Computer_Science",
        "https://en.wikipedia.org/wiki/Acta_Informatica",
        "https://en.wikipedia.org/wiki/Fundamenta_Informaticae",
        "https://en.wikipedia.org/wiki/Symposium_on_Theory_of_Computing",
        "https://en.wikipedia.org/wiki/Symposium_on_Foundations_of_Computer_Science",
        "https://en.wikipedia.org/wiki/Mathematical_Foundations_of_Computer_Science",
        "https://en.wikipedia.org/wiki/Symposium_on_Discrete_Algorithms",
        "https://en.wikipedia.org/wiki/Symposium_on_Logic_in_Computer_Science",
        "https://en.wikipedia.org/wiki/Computational_Complexity_Conference",
        "https://en.wikipedia.org/wiki/Symposium_on_Computational_Geometry",
        "https://en.wikipedia.org/wiki/Symposium_on_Principles_of_Distributed_Computing",
        "https://en.wikipedia.org/wiki/Symposium_on_Parallelism_in_Algorithms_and_Architectures",
        "https://en.wikipedia.org/wiki/Symposium_on_Theoretical_Aspects_of_Computer_Science",
        "https://en.wikipedia.org/wiki/European_Symposium_on_Algorithms",
        "https://en.wikipedia.org/wiki/International_Symposium_on_Algorithms_and_Computation",
        "https://en.wikipedia.org/wiki/International_Symposium_on_Fundamentals_of_Computation_Theory",
        "https://en.wikipedia.org/wiki/Formal_science",
        "https://en.wikipedia.org/wiki/Unsolved_problems_in_computer_science",
        "https://en.wikipedia.org/wiki/List_of_important_publications_in_theoretical_computer_science",
        "https://en.wikipedia.org/wiki/Zero",
        "https://en.wikipedia.org/wiki/Quantity",
        "https://en.wikipedia.org/wiki/Ron_Rivest",
        "https://en.wikipedia.org/wiki/Dictionary_of_Algorithms_and_Data_Structures",
        "https://en.wikipedia.org/wiki/National_Institute_of_Standards_and_Technology",
        "https://en.wikipedia.org/wiki/Jean_Dollimore",
        "https://en.wikipedia.org/wiki/IEEE_Signal_Processing_Society",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Scientific_American",
        "https://en.wikipedia.org/wiki/Neil_Gershenfeld",
        "https://en.wikipedia.org/wiki/International_Journal_of_Theoretical_Physics",
        "https://en.wikipedia.org/wiki/David_Deutsch",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Elaine_Weyuker",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Program_semantics",
        "https://en.wikipedia.org/wiki/Quantification_theory",
        "https://en.wikipedia.org/wiki/Massachusetts_Institute_of_Technology",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/ACM_Computing_Classification_System",
        "https://en.wikipedia.org/wiki/Computer_hardware",
        "https://en.wikipedia.org/wiki/Printed_circuit_board",
        "https://en.wikipedia.org/wiki/Peripheral",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Very_Large_Scale_Integration",
        "https://en.wikipedia.org/wiki/System_on_a_chip",
        "https://en.wikipedia.org/wiki/Green_computing",
        "https://en.wikipedia.org/wiki/Electronic_design_automation",
        "https://en.wikipedia.org/wiki/Hardware_acceleration",
        "https://en.wikipedia.org/wiki/Computer_architecture",
        "https://en.wikipedia.org/wiki/Embedded_system",
        "https://en.wikipedia.org/wiki/Dependability",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Network_architecture",
        "https://en.wikipedia.org/wiki/Network_protocol",
        "https://en.wikipedia.org/wiki/Networking_hardware",
        "https://en.wikipedia.org/wiki/Network_scheduler",
        "https://en.wikipedia.org/wiki/Network_performance",
        "https://en.wikipedia.org/wiki/Network_service",
        "https://en.wikipedia.org/wiki/Middleware",
        "https://en.wikipedia.org/wiki/Virtual_machine",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Software_quality",
        "https://en.wikipedia.org/wiki/Programming_language_theory",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Programming_paradigm",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Compiler_construction",
        "https://en.wikipedia.org/wiki/Modeling_language",
        "https://en.wikipedia.org/wiki/Software_framework",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_repository",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Programming_team",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Model_of_computation",
        "https://en.wikipedia.org/wiki/Formal_language",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Computability_theory",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Logic_in_computer_science",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Algorithm_design",
        "https://en.wikipedia.org/wiki/Analysis_of_algorithms",
        "https://en.wikipedia.org/wiki/Algorithmic_efficiency",
        "https://en.wikipedia.org/wiki/Randomized_algorithm",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Probability",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Mathematical_software",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Mathematical_analysis",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Information_system",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Computer_data_storage",
        "https://en.wikipedia.org/wiki/Enterprise_information_system",
        "https://en.wikipedia.org/wiki/Social_software",
        "https://en.wikipedia.org/wiki/Geographic_information_system",
        "https://en.wikipedia.org/wiki/Decision_support_system",
        "https://en.wikipedia.org/wiki/Process_control",
        "https://en.wikipedia.org/wiki/Multimedia_database",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Digital_library",
        "https://en.wikipedia.org/wiki/Computing_platform",
        "https://en.wikipedia.org/wiki/Digital_marketing",
        "https://en.wikipedia.org/wiki/World_Wide_Web",
        "https://en.wikipedia.org/wiki/Information_retrieval",
        "https://en.wikipedia.org/wiki/Computer_security",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Intrusion_detection_system",
        "https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure",
        "https://en.wikipedia.org/wiki/Network_security",
        "https://en.wikipedia.org/wiki/Information_security",
        "https://en.wikipedia.org/wiki/Application_security",
        "https://en.wikipedia.org/wiki/Interaction_design",
        "https://en.wikipedia.org/wiki/Social_computing",
        "https://en.wikipedia.org/wiki/Ubiquitous_computing",
        "https://en.wikipedia.org/wiki/Computer_accessibility",
        "https://en.wikipedia.org/wiki/Concurrent_computing",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Distributed_computing",
        "https://en.wikipedia.org/wiki/Multiprocessing",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Natural_language_processing",
        "https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/Automated_planning_and_scheduling",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Control_theory",
        "https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Distributed_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Unsupervised_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Computer_animation",
        "https://en.wikipedia.org/wiki/Photo_manipulation",
        "https://en.wikipedia.org/wiki/Graphics_processing_unit",
        "https://en.wikipedia.org/wiki/Mixed_reality",
        "https://en.wikipedia.org/wiki/Virtual_reality",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Solid_modeling",
        "https://en.wikipedia.org/wiki/Enterprise_software",
        "https://en.wikipedia.org/wiki/Computational_mathematics",
        "https://en.wikipedia.org/wiki/Computational_physics",
        "https://en.wikipedia.org/wiki/Computational_chemistry",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Computational_social_science",
        "https://en.wikipedia.org/wiki/Computational_engineering",
        "https://en.wikipedia.org/wiki/Health_informatics",
        "https://en.wikipedia.org/wiki/Digital_art",
        "https://en.wikipedia.org/wiki/Electronic_publishing",
        "https://en.wikipedia.org/wiki/Cyberwarfare",
        "https://en.wikipedia.org/wiki/Electronic_voting",
        "https://en.wikipedia.org/wiki/Video_game",
        "https://en.wikipedia.org/wiki/Word_processor",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Educational_technology",
        "https://en.wikipedia.org/wiki/Document_management_system",
        "https://en.wikipedia.org/wiki/Outline_of_computer_science",
        "https://en.wikipedia.org/wiki/Theoretical_computer_science",
        "https://en.wikipedia.org/wiki/Theoretical_computer_science",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}