{
    "url": "https://en.wikipedia.org/wiki/Image_processing",
    "title": "Digital image processing",
    "table_of_contents": [
        "1 History",
        "1.1 Image sensors",
        "1.2 Image compression",
        "1.3 Digital signal processor (DSP)",
        "1.4 Medical imaging",
        "2 Tasks",
        "3 Digital image transformations",
        "3.1 Filtering",
        "3.1.1 Image padding in Fourier domain filtering",
        "3.1.2 Filtering code examples",
        "3.2 Affine transformations",
        "3.3 Image denoising with Morphology",
        "4 Applications",
        "4.1 Digital camera images",
        "4.2 Film",
        "4.3 Face detection",
        "4.4 Improvement of image quality method",
        "5 Fatigue detection and monitoring technologies",
        "6 See also",
        "7 References",
        "8 Further reading",
        "9 External links"
    ],
    "content": [
        {
            "paragraph1": "\nDigital image processing is the use of a digital computer to process digital images through an algorithm. As a subcategory or field of digital signal processing, digital image processing has many advantages over analog image processing. It allows a much wider range of algorithms to be applied to the input data and can avoid problems such as the build-up of noise and distortion during processing. Since images are defined over two dimensions (perhaps more) digital image processing may be modeled in the form of multidimensional systems. The generation and development of digital image processing are mainly affected by three factors: first, the development of computers; second, the development of mathematics (especially the creation and improvement of discrete mathematics theory); third, the demand for a wide range of applications in environment, agriculture, military, industry and medical science has increased.\n"
        },
        {
            "title": "History",
            "paragraph1": "Many of the techniques of digital image processing, or digital picture processing as it often was called, were developed in the 1960s, at Bell Laboratories, the Jet Propulsion Laboratory, Massachusetts Institute of Technology, University of Maryland, and a few other research facilities, with application to satellite imagery, wire-photo standards conversion, medical imaging, videophone, character recognition, and photograph enhancement. The purpose of early image processing was to improve the quality of the image. It was aimed for human beings to improve the visual effect of people. In image processing, the input is a low-quality image, and the output is an image with improved quality. Common image processing include image enhancement, restoration, encoding, and compression. The first successful application was the American Jet Propulsion Laboratory (JPL). They used image processing techniques such as geometric correction, gradation transformation, noise removal, etc. on the thousands of lunar photos sent back by the Space Detector Ranger 7 in 1964, taking into account the position of the sun and the environment of the moon. The impact of the successful mapping of the moon's surface map by the computer has been a huge success. Later, more complex image processing was performed on the nearly 100,000 photos sent back by the spacecraft, so that the topographic map, color map and panoramic mosaic of the moon were obtained, which achieved extraordinary results and laid a solid foundation for human landing on the moon.\n",
            "paragraph2": "The cost of processing was fairly high, however, with the computing equipment of that era. That changed in the 1970s, when digital image processing proliferated as cheaper computers and dedicated hardware became available. This led to images being processed in real-time, for some dedicated problems such as television standards conversion. As general-purpose computers became faster, they started to take over the role of dedicated hardware for all but the most specialized and computer-intensive operations. With the fast computers and signal processors available in the 2000s, digital image processing has become the most common form of image processing, and is generally used because it is not only the most versatile method, but also the cheapest.\n",
            "subtitle1": "Image sensors",
            "paragraph3": "The basis for modern image sensors is metal-oxide-semiconductor (MOS) technology, which originates from the invention of the MOSFET (MOS field-effect transistor) by Mohamed M. Atalla and Dawon Kahng at Bell Labs in 1959. This led to the development of digital semiconductor image sensors, including the charge-coupled device (CCD) and later the CMOS sensor.\n",
            "paragraph4": "The charge-coupled device was invented by Willard S. Boyle and George E. Smith at Bell Labs in 1969. While researching MOS technology, they realized that an electric charge was the analogy of the magnetic bubble and that it could be stored on a tiny MOS capacitor. As it was fairly straightforward to fabricate a series of MOS capacitors in a row, they connected a suitable voltage to them so that the charge could be stepped along from one to the next. The CCD is a semiconductor circuit that was later used in the first digital video cameras for television broadcasting.\n",
            "paragraph5": "The NMOS active-pixel sensor (APS) was invented by Olympus in Japan during the mid-1980s. This was enabled by advances in MOS semiconductor device fabrication, with MOSFET scaling reaching smaller micron and then sub-micron levels. The NMOS APS was fabricated by Tsutomu Nakamura's team at Olympus in 1985. The CMOS active-pixel sensor (CMOS sensor) was later developed by Eric Fossum's team at the NASA Jet Propulsion Laboratory in 1993. By 2007, sales of CMOS sensors had surpassed CCD sensors.\n",
            "subtitle2": "Image compression",
            "paragraph6": "An important development in digital image compression technology was the discrete cosine transform (DCT), a lossy compression technique first proposed by Nasir Ahmed in 1972. DCT compression became the basis for JPEG, which was introduced by the Joint Photographic Experts Group in 1992. JPEG compresses images down to much smaller file sizes, and has become the most widely used image file format on the Internet. Its highly efficient DCT compression algorithm was largely responsible for the wide proliferation of digital images and digital photos, with several billion JPEG images produced every day as of 2015.\n",
            "subtitle3": "Digital signal processor (DSP)",
            "paragraph7": "Electronic signal processing was revolutionized by the wide adoption of MOS technology in the 1970s. MOS integrated circuit technology was the basis for the first single-chip microprocessors and microcontrollers in the early 1970s, and then the first single-chip digital signal processor (DSP) chips in the late 1970s. DSP chips have since been widely used in digital image processing.\n",
            "paragraph8": "The discrete cosine transform (DCT) image compression algorithm has been widely implemented in DSP chips, with many companies developing DSP chips based on DCT technology. DCTs are widely used for encoding, decoding, video coding, audio coding, multiplexing, control signals, signaling, analog-to-digital conversion, formatting luminance and color differences, and color formats such as YUV444 and YUV411. DCTs are also used for encoding operations such as motion estimation, motion compensation, inter-frame prediction, quantization, perceptual weighting, entropy encoding, variable encoding, and motion vectors, and decoding operations such as the inverse operation between different color formats (YIQ, YUV and RGB) for display purposes. DCTs are also commonly used for high-definition television (HDTV) encoder/decoder chips.\n",
            "subtitle4": "Medical imaging",
            "paragraph9": "In 1972, the engineer from British company EMI Housfield invented the X-ray computed tomography device for head diagnosis, which is what is usually called CT (computer tomography). The CT nucleus method is based on the projection of the human head section and is processed by computer to reconstruct the cross-sectional image, which is called image reconstruction. In 1975, EMI successfully developed a CT device for the whole body, which obtained a clear tomographic image of various parts of the human body. In 1979, this diagnostic technique won the Nobel Prize. Digital image processing technology for medical applications was inducted into the Space Foundation Space Technology Hall of Fame in 1994.\n"
        },
        {
            "title": "Tasks",
            "paragraph1": "Digital image processing allows the use of much more complex algorithms, and hence, can offer both more sophisticated performance at simple tasks, and the implementation of methods which would be impossible by analogue means.\n",
            "paragraph2": "In particular, digital image processing is a concrete application of, and a practical technology based on:\n",
            "ul1": "Classification\nFeature extraction\nMulti-scale signal analysis\nPattern recognition\nProjection\n",
            "paragraph3": "Some techniques which are used in digital image processing include:\n",
            "ul2": "Anisotropic diffusion\nHidden Markov models\nImage editing\nImage restoration\nIndependent component analysis\nLinear filtering\nNeural networks\nPartial differential equations\nPixelation\nPoint feature matching\nPrincipal components analysis\nSelf-organizing maps\nWavelets\n"
        },
        {
            "title": "Digital image transformations",
            "subtitle1": "Filtering",
            "paragraph1": "Digital filters are used to blur and sharpen digital images. Filtering can be performed by:\n",
            "ul1": "convolution with specifically designed kernels (filter array) in the spatial domain[25]\nmasking specific frequency regions in the frequency (Fourier) domain\n",
            "paragraph2": "The following examples show both methods:\n",
            "paragraph3": "Images are typically padded before being transformed to the Fourier space, the highpass filtered images below illustrate the consequences of different padding techniques:\n",
            "paragraph4": "Notice that the highpass filter shows extra edges when zero padded compared to the repeated edge padding.\n",
            "paragraph5": "MATLAB example for spatial domain highpass filtering.\n",
            "subtitle2": "Affine transformations",
            "paragraph6": "Affine transformations enable basic image transformations including scale, rotate, translate, mirror and shear as is shown in the following examples:\n",
            "paragraph7": "To apply the affine matrix to an image, the image is converted to matrix in which each entry corresponds to the pixel intensity at that location. Then each pixel's location can be represented as a vector indicating the coordinates of that pixel in the image, [x, y], where x and y are the row and column of a pixel in the image matrix. This allows the coordinate to be multiplied by an affine-transformation matrix, which gives the position that the pixel value will be copied to in the output image.\n",
            "paragraph8": "However, to allow transformations that require translation transformations, 3 dimensional homogeneous coordinates are needed. The third dimension is usually set to a non-zero constant, usually 1, so that the new coordinate is [x, y, 1]. This allows the coordinate vector to be multiplied by a 3 by 3 matrix, enabling translation shifts. So the third dimension, which is the constant 1, allows translation.\n",
            "paragraph9": "Because matrix multiplication is associative, multiple affine transformations can be combined into a single affine transformation by multiplying the matrix of each individual transformation in the order that the transformations are done. This results in a single matrix that, when applied to a point vector, gives the same result as all the individual transformations performed on the vector [x, y, 1] in sequence. Thus a sequence of affine transformation matrices can be reduced to a single affine transformation matrix.\n",
            "paragraph10": "For example, 2 dimensional coordinates only allow rotation about the origin (0, 0). But 3 dimensional homogeneous coordinates can be used to first translate any point to (0, 0), then perform the rotation, and lastly translate the origin (0, 0) back to the original point (the opposite of the first translation). These 3 affine transformations can be combined into a single matrix, thus allowing rotation around any point in the image.\n",
            "subtitle3": "Image denoising with Morphology",
            "paragraph11": "Mathematical morphology is suitable for denoising images. Structuring element are important in Mathematical morphology.\n",
            "paragraph12": "The following examples are about Structuring elements.  The denoise function, image as I, and structuring element as B are shown as below and table.\n",
            "paragraph13": "e.g. \n\n\n\n(\n\nI\n′\n\n)\n=\n\n\n[\n\n\n\n45\n\n\n50\n\n\n65\n\n\n\n\n40\n\n\n60\n\n\n55\n\n\n\n\n25\n\n\n15\n\n\n5\n\n\n\n]\n\n\nB\n=\n\n\n[\n\n\n\n1\n\n\n2\n\n\n1\n\n\n\n\n2\n\n\n1\n\n\n1\n\n\n\n\n1\n\n\n0\n\n\n3\n\n\n\n]\n\n\n\n\n{\\displaystyle (I')={\\begin{bmatrix}45&50&65\\\\40&60&55\\\\25&15&5\\end{bmatrix))B={\\begin{bmatrix}1&2&1\\\\2&1&1\\\\1&0&3\\end{bmatrix))}\n\n\n",
            "paragraph14": "Define Dilation(I, B)(i,j) = \n\n\n\nm\na\nx\n{\nI\n(\ni\n+\nm\n,\nj\n+\nn\n)\n+\nB\n(\nm\n,\nn\n)\n}\n\n\n{\\displaystyle max\\{I(i+m,j+n)+B(m,n)\\))\n\n. Let Dilation(I,B) = D(I,B)\n",
            "paragraph15": "D(I', B)(1,1) = \n\n\n\nm\na\nx\n(\n45\n+\n1\n,\n50\n+\n2\n,\n65\n+\n1\n,\n40\n+\n2\n,\n60\n+\n1\n,\n55\n+\n1\n,\n25\n+\n1\n,\n15\n+\n0\n,\n5\n+\n3\n)\n=\n66\n\n\n{\\displaystyle max(45+1,50+2,65+1,40+2,60+1,55+1,25+1,15+0,5+3)=66}\n\n\n",
            "paragraph16": "Define Erosion(I, B)(i,j) = \n\n\n\nm\ni\nn\n{\nI\n(\ni\n+\nm\n,\nj\n+\nn\n)\n−\nB\n(\nm\n,\nn\n)\n}\n\n\n{\\displaystyle min\\{I(i+m,j+n)-B(m,n)\\))\n\n. Let Erosion(I,B) = E(I,B)\n",
            "paragraph17": "E(I', B)(1,1) = \n\n\n\nm\ni\nn\n(\n45\n−\n1\n,\n50\n−\n2\n,\n65\n−\n1\n,\n40\n−\n2\n,\n60\n−\n1\n,\n55\n−\n1\n,\n25\n−\n1\n,\n15\n−\n0\n,\n5\n−\n3\n)\n=\n2\n\n\n{\\displaystyle min(45-1,50-2,65-1,40-2,60-1,55-1,25-1,15-0,5-3)=2}\n\n\n",
            "paragraph18": "After dilation\n\n\n\n\n(\n\nI\n′\n\n)\n=\n\n\n[\n\n\n\n45\n\n\n50\n\n\n65\n\n\n\n\n40\n\n\n66\n\n\n55\n\n\n\n\n25\n\n\n15\n\n\n5\n\n\n\n]\n\n\n\n\n{\\displaystyle (I')={\\begin{bmatrix}45&50&65\\\\40&66&55\\\\25&15&5\\end{bmatrix))}\n\n\nAfter erosion\n\n\n\n\n(\n\nI\n′\n\n)\n=\n\n\n[\n\n\n\n45\n\n\n50\n\n\n65\n\n\n\n\n40\n\n\n2\n\n\n55\n\n\n\n\n25\n\n\n15\n\n\n5\n\n\n\n]\n\n\n\n\n{\\displaystyle (I')={\\begin{bmatrix}45&50&65\\\\40&2&55\\\\25&15&5\\end{bmatrix))}\n\n\n",
            "paragraph19": "An opening method is just simply erosion first, and then dilation while the closing method is vice versa. In reality, the D(I,B) and E(I,B) can implemented by Convolution\n",
            "paragraph20": "In order to apply the denoising method to an image, the image is converted into grayscale. A mask with denoising method is logical matrix with \n\n\n\n[\n111\n;\n111\n;\n111\n]\n\n\n{\\displaystyle [111;111;111]}\n\n. The denoising methods start from the center of the picture with half of height, half of width, and end with the image boundary of row number, column number. Neighbor is a block in the original image with the boundary [the point below center: the point above, the point on left of center: the point on the right of center]. Convolution Neighbor and structuring element and then replace the center with a minimum of neighbor.\n",
            "paragraph21": "Take the Closing method for example.\n",
            "paragraph22": "Dilation first\n",
            "ol1": "1 - Read the image and convert it into grayscale with Matlab.\nGet the size of an image. The return value row numbers and column numbers are the boundaries we are going to use later.\nstructuring elements depend on your dilation or erosion function. The minimum of the neighbor of a pixel leads to an erosion method and the maximum of neighbor leads to a dilation method.\nSet the time for dilation, erosion, and closing.\n2 - Get the size of an image. The return value row numbers and column numbers are the boundaries we are going to use later.\n3 - structuring elements depend on your dilation or erosion function. The minimum of the neighbor of a pixel leads to an erosion method and the maximum of neighbor leads to a dilation method.\n4 - Set the time for dilation, erosion, and closing.\n5 - Create a zero matrix of the same size as the original image.\n6 - Dilation first with structuring window.\nstructuring window is 3*3 matrix and convolution\nFor loop extract the minimum with window from row range [2 ~ image height - 1] with column range [2 ~ image width - 1]\n7 - structuring window is 3*3 matrix and convolution\n8 - For loop extract the minimum with window from row range [2 ~ image height - 1] with column range [2 ~ image width - 1]\n9 - Fill the minimum value to the zero matrix and save a new image\nFor the boundary, it can still be improved. Since in the method, a boundary is ignored. Padding elements can be applied to deal with boundaries.\n10 - For the boundary, it can still be improved. Since in the method, a boundary is ignored. Padding elements can be applied to deal with boundaries.\n",
            "paragraph23": "Then Erosion (Take the dilation image as input)\n",
            "ol2": "1 - Create a zero matrix of the same size as the original image.\n2 - Erosion with structuring window.\nstructuring window is 3*3 matrix and convolution\nFor loop extract the maximum with window from row range [2 ~ image height - 1] with column range [2 ~ image width - 1]\n3 - structuring window is 3*3 matrix and convolution\n4 - For loop extract the maximum with window from row range [2 ~ image height - 1] with column range [2 ~ image width - 1]\n5 - Fill the maximum value to the zero matrix and save a new image\nFor the boundary, it can still be improved. Since in the method, boundary is ignored. Padding elements can be applied to deal with boundaries.\n6 - For the boundary, it can still be improved. Since in the method, boundary is ignored. Padding elements can be applied to deal with boundaries.\n7 - Results are as above table shown\n"
        },
        {
            "title": "Applications",
            "subtitle1": "Digital camera images",
            "paragraph1": "Digital cameras generally include specialized digital image processing hardware – either dedicated chips or added circuitry on other chips – to convert the raw data from their image sensor into a color-corrected image in a standard image file format. Additional post processing techniques increase edge sharpness or color saturation to create more naturally looking images.\n",
            "subtitle2": "Film",
            "paragraph2": "Westworld (1973) was the first feature film to use the digital image processing to pixellate photography to simulate an android's point of view. Image processing is also vastly used to produce the chroma key effect that replaces the background of actors with natural or artistic scenery.\n",
            "subtitle3": "Face detection",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/4/49/Face_detection_process_V1.jpg/440px-Face_detection_process_V1.jpg",
                "caption": "\n\t\tFace detection process\n\t"
            },
            "paragraph3": "Face detection can be implemented with Mathematical morphology, Discrete cosine transform which is usually called DCT, and horizontal Projection (mathematics).\n",
            "paragraph4": "General method with feature-based method\n",
            "paragraph5": "The feature-based method of face detection is using skin tone, edge detection, face shape, and feature of a face (like eyes, mouth, etc.) to achieve face detection. The skin tone, face shape, and all the unique elements that only the human face have can be described as features.\n",
            "paragraph6": "Process explanation\n",
            "ol1": "1 - Given a batch of face images, first, extract the skin tone range by sampling face images. The skin tone range is just a skin filter.\nStructural similarity index measure (SSIM) can be applied to compare images in terms of extracting the skin tone.\nNormally, HSV or RGB color spaces are suitable for the skin filter. E.g. HSV mode, the skin tone range is [0,48,50] ~ [20,255,255]\n2 - Structural similarity index measure (SSIM) can be applied to compare images in terms of extracting the skin tone.\n3 - Normally, HSV or RGB color spaces are suitable for the skin filter. E.g. HSV mode, the skin tone range is [0,48,50] ~ [20,255,255]\n4 - After filtering images with skin tone, to get the face edge, morphology and DCT are used to remove noise and fill up missing skin areas.\nOpening method or closing method can be used to achieve filling up missing skin.\nDCT is to avoid the object with tone-like skin. Since human faces always have higher texture.\nSobel operator or other operators can be applied to detect face edge.\n5 - Opening method or closing method can be used to achieve filling up missing skin.\n6 - DCT is to avoid the object with tone-like skin. Since human faces always have higher texture.\n7 - Sobel operator or other operators can be applied to detect face edge.\n8 - To position human features like eyes, using the projection and find the peak of the histogram of projection help to get the detail feature like mouse, hair, and lip.\nProjection is just projecting the image to see the high frequency which is usually the feature position.\n9 - Projection is just projecting the image to see the high frequency which is usually the feature position.\n",
            "subtitle4": "Improvement of image quality method",
            "paragraph7": "Image quality can be influenced by camera vibration, over-exposure, gray level distribution too centralized, and noise, etc. For example, noise problem can be solved by Smoothing method while gray level distribution problem can be improved by Histogram Equalization.\n",
            "paragraph8": "Smoothing method\n",
            "paragraph9": "In drawing, if there is some dissatisfied color, taking some color around dissatisfied color and averaging them. This is an easy way to think of Smoothing method.\n",
            "paragraph10": "Smoothing method can be implemented with mask and Convolution. Take the small image and mask for instance as below.\n",
            "paragraph11": "image is\n\n\n\n\n\n\n[\n\n\n\n2\n\n\n5\n\n\n6\n\n\n5\n\n\n\n\n3\n\n\n1\n\n\n4\n\n\n6\n\n\n\n\n1\n\n\n28\n\n\n30\n\n\n2\n\n\n\n\n7\n\n\n3\n\n\n2\n\n\n2\n\n\n\n]\n\n\n\n\n{\\displaystyle {\\begin{bmatrix}2&5&6&5\\\\3&1&4&6\\\\1&28&30&2\\\\7&3&2&2\\end{bmatrix))}\n\n\n",
            "paragraph12": "mask is \n\n\n\n\n\n[\n\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n1\n\n/\n\n9\n\n\n\n]\n\n\n\n\n{\\displaystyle {\\begin{bmatrix}1/9&1/9&1/9\\\\1/9&1/9&1/9\\\\1/9&1/9&1/9\\end{bmatrix))}\n\n\n",
            "paragraph13": "After Convolution and smoothing, image is\n\n\n\n\n\n\n[\n\n\n\n2\n\n\n5\n\n\n6\n\n\n5\n\n\n\n\n3\n\n\n9\n\n\n10\n\n\n6\n\n\n\n\n1\n\n\n9\n\n\n9\n\n\n2\n\n\n\n\n7\n\n\n3\n\n\n2\n\n\n2\n\n\n\n]\n\n\n\n\n{\\displaystyle {\\begin{bmatrix}2&5&6&5\\\\3&9&10&6\\\\1&9&9&2\\\\7&3&2&2\\end{bmatrix))}\n\n\n",
            "paragraph14": "Oberseving image[1, 1], image[1, 2], image[2, 1], and image[2, 2].\n",
            "paragraph15": "The original image pixel is 1, 4, 28, 30. After smoothing mask, the pixel becomes 9, 10, 9, 9 respectively.\n",
            "paragraph16": "new image[1, 1] = \n\n\n\n\n\n\n1\n9\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{9))}\n\n * (image[0,0]+image[0,1]+image[0,2]+image[1,0]+image[1,1]+image[1,2]+image[2,0]+image[2,1]+image[2,2])\n",
            "paragraph17": "new image[1, 1] = floor(\n\n\n\n\n\n\n1\n9\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{9))}\n\n * (2+5+6+3+1+4+1+28+30)) = 9\n",
            "paragraph18": "new image[1, 2] = floor({\n\n\n\n\n\n\n1\n9\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{9))}\n\n * (5+6+5+1+4+6+28+30+2)) = 10\n",
            "paragraph19": "new image[2, 1] = floor(\n\n\n\n\n\n\n1\n9\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{9))}\n\n * (3+1+4+1+28+30+73+3+2)) = 9\n",
            "paragraph20": "new image[2, 2] = floor(\n\n\n\n\n\n\n1\n9\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{9))}\n\n * (1+4+6+28+30+2+3+2+2)) = 9\n",
            "paragraph21": "Gray Level Histogram method\n",
            "paragraph22": "Generally, given a gray level histogram from an image as below. Changing the histogram to uniform distribution from an image is usually what we called Histogram equalization.\n",
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Gray_level_histogram.jpg/440px-Gray_level_histogram.jpg",
                "caption": "\n\t\tFigure 1\n\t"
            },
            "image3": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/8/86/Uniform_distribution.jpg/440px-Uniform_distribution.jpg",
                "caption": "\n\t\tFigure 2\n\t"
            },
            "paragraph23": "In discrete time, the area of gray level histogram is \n\n\n\n\n∑\n\ni\n=\n0\n\n\nk\n\n\nH\n(\n\np\n\ni\n\n\n)\n\n\n{\\displaystyle \\sum _{i=0}^{k}H(p_{i})}\n\n(see figure 1) while the area of uniform distribution is \n\n\n\n\n∑\n\ni\n=\n0\n\n\nk\n\n\nG\n(\n\nq\n\ni\n\n\n)\n\n\n{\\displaystyle \\sum _{i=0}^{k}G(q_{i})}\n\n(see figure 2). It's clear that the area won't change, so \n\n\n\n\n∑\n\ni\n=\n0\n\n\nk\n\n\nH\n(\n\np\n\ni\n\n\n)\n=\n\n∑\n\ni\n=\n0\n\n\nk\n\n\nG\n(\n\nq\n\ni\n\n\n)\n\n\n{\\displaystyle \\sum _{i=0}^{k}H(p_{i})=\\sum _{i=0}^{k}G(q_{i})}\n\n.\n",
            "paragraph24": "From the uniform distribution, the probability of \n\n\n\n\nq\n\ni\n\n\n\n\n{\\displaystyle q_{i))\n\n is \n\n\n\n\n\n\n\nN\n\n2\n\n\n\n\nq\n\nk\n\n\n−\n\nq\n\n0\n\n\n\n\n\n\n\n\n{\\displaystyle {\\tfrac {N^{2)){q_{k}-q_{0))))\n\n while the \n\n\n\n0\n<\ni\n<\nk\n\n\n{\\displaystyle 0<i<k}\n\n\n",
            "paragraph25": "In continuous time, the equation is \n\n\n\n\n\n∫\n\n\nq\n\n0\n\n\n\n\nq\n\n\n\n\n\n\nN\n\n2\n\n\n\n\nq\n\nk\n\n\n−\n\nq\n\n0\n\n\n\n\n\n\nd\ns\n=\n\n\n∫\n\n\np\n\n0\n\n\n\n\np\n\n\nH\n(\ns\n)\nd\ns\n\n\n\n\n{\\displaystyle \\displaystyle \\int _{q_{0))^{q}{\\tfrac {N^{2)){q_{k}-q_{0))}ds=\\displaystyle \\int _{p_{0))^{p}H(s)ds}\n\n.\n",
            "paragraph26": "Moreover, based on the definition of a function, the Gray level histogram method is like finding a function \n\n\n\nf\n\n\n{\\displaystyle f}\n\n that satisfies f(p)=q.\n"
        },
        {
            "title": "Fatigue detection and monitoring technologies",
            "paragraph1": "There were significant advancements in fatigue monitoring technology the past decade. These innovative technology solutions are now commercially available and offer real safety benefits to drivers, operators and other shift workers across all industries.\n",
            "paragraph2": "Software developers, engineers and scientists develop fatigue detection software using various physiological cues to determine the state of fatigue or drowsiness. The measurement of brain activity (electroencephalogram) is widely accepted as the standard in fatigue monitoring. Other technology used to determine fatigue related impairment include behavioural symptom measurements such as; eye behaviour, gaze direction, micro-corrections in steering and throttle use as well as heart rate variability.[citation needed]\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Image_editing",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Digital_computer",
        "https://en.wikipedia.org/wiki/Digital_image",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Digital_signal_processing",
        "https://en.wikipedia.org/wiki/Analog_image_processing",
        "https://en.wikipedia.org/wiki/Distortion",
        "https://en.wikipedia.org/wiki/Multidimensional_systems",
        "https://en.wikipedia.org/wiki/Digital_image",
        "https://en.wikipedia.org/wiki/Bell_Laboratories",
        "https://en.wikipedia.org/wiki/Jet_Propulsion_Laboratory",
        "https://en.wikipedia.org/wiki/Massachusetts_Institute_of_Technology",
        "https://en.wikipedia.org/wiki/Satellite_imagery",
        "https://en.wikipedia.org/wiki/Wirephoto",
        "https://en.wikipedia.org/wiki/Medical_physics",
        "https://en.wikipedia.org/wiki/Videophone",
        "https://en.wikipedia.org/wiki/Character_recognition",
        "https://en.wikipedia.org/wiki/Television_standards_conversion",
        "https://en.wikipedia.org/wiki/Image_sensor",
        "https://en.wikipedia.org/wiki/Image_sensors",
        "https://en.wikipedia.org/wiki/MOSFET",
        "https://en.wikipedia.org/wiki/Dawon_Kahng",
        "https://en.wikipedia.org/wiki/Bell_Labs",
        "https://en.wikipedia.org/wiki/Semiconductor",
        "https://en.wikipedia.org/wiki/CMOS_sensor",
        "https://en.wikipedia.org/wiki/MOS_capacitor",
        "https://en.wikipedia.org/wiki/Semiconductor_device_fabrication",
        "https://en.wikipedia.org/wiki/Digital_video_camera",
        "https://en.wikipedia.org/wiki/Television_broadcasting",
        "https://en.wikipedia.org/wiki/NMOS_logic",
        "https://en.wikipedia.org/wiki/Olympus_Corporation",
        "https://en.wikipedia.org/wiki/Semiconductor_device_fabrication",
        "https://en.wikipedia.org/wiki/MOSFET_scaling",
        "https://en.wikipedia.org/wiki/List_of_semiconductor_scale_examples",
        "https://en.wikipedia.org/wiki/CMOS",
        "https://en.wikipedia.org/wiki/Eric_Fossum",
        "https://en.wikipedia.org/wiki/NASA",
        "https://en.wikipedia.org/wiki/Jet_Propulsion_Laboratory",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Discrete_cosine_transform",
        "https://en.wikipedia.org/wiki/Lossy_compression",
        "https://en.wikipedia.org/wiki/JPEG",
        "https://en.wikipedia.org/wiki/Joint_Photographic_Experts_Group",
        "https://en.wikipedia.org/wiki/Image_file_format",
        "https://en.wikipedia.org/wiki/Internet",
        "https://en.wikipedia.org/wiki/Digital_images",
        "https://en.wikipedia.org/wiki/Digital_photo",
        "https://en.wikipedia.org/wiki/Digital_signal_processor",
        "https://en.wikipedia.org/wiki/Signal_processing",
        "https://en.wikipedia.org/wiki/MOS_technology",
        "https://en.wikipedia.org/wiki/MOS_integrated_circuit",
        "https://en.wikipedia.org/wiki/Microprocessors",
        "https://en.wikipedia.org/wiki/Microcontrollers",
        "https://en.wikipedia.org/wiki/Digital_signal_processor",
        "https://en.wikipedia.org/wiki/Discrete_cosine_transform",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Encoding",
        "https://en.wikipedia.org/wiki/Video_coding",
        "https://en.wikipedia.org/wiki/Audio_coding",
        "https://en.wikipedia.org/wiki/Multiplexing",
        "https://en.wikipedia.org/wiki/Signaling",
        "https://en.wikipedia.org/wiki/Luminance",
        "https://en.wikipedia.org/wiki/YUV444",
        "https://en.wikipedia.org/wiki/YUV411",
        "https://en.wikipedia.org/wiki/Motion_estimation",
        "https://en.wikipedia.org/wiki/Motion_compensation",
        "https://en.wikipedia.org/wiki/Entropy_encoding",
        "https://en.wikipedia.org/wiki/Motion_vector",
        "https://en.wikipedia.org/wiki/YIQ",
        "https://en.wikipedia.org/wiki/YUV",
        "https://en.wikipedia.org/wiki/RGB",
        "https://en.wikipedia.org/wiki/Medical_imaging",
        "https://en.wikipedia.org/wiki/Space_Foundation",
        "https://en.wikipedia.org/wiki/Statistical_classification",
        "https://en.wikipedia.org/wiki/Feature_extraction",
        "https://en.wikipedia.org/wiki/Pattern_recognition",
        "https://en.wikipedia.org/wiki/Graphical_projection",
        "https://en.wikipedia.org/wiki/Anisotropic_diffusion",
        "https://en.wikipedia.org/wiki/Hidden_Markov_model",
        "https://en.wikipedia.org/wiki/Image_editing",
        "https://en.wikipedia.org/wiki/Image_restoration",
        "https://en.wikipedia.org/wiki/Independent_component_analysis",
        "https://en.wikipedia.org/wiki/Linear_filter",
        "https://en.wikipedia.org/wiki/Artificial_neural_networks",
        "https://en.wikipedia.org/wiki/Partial_differential_equations",
        "https://en.wikipedia.org/wiki/Pixelation",
        "https://en.wikipedia.org/wiki/Point_feature_matching",
        "https://en.wikipedia.org/wiki/Principal_components_analysis",
        "https://en.wikipedia.org/wiki/Wavelet",
        "https://en.wikipedia.org/wiki/Lowpass",
        "https://en.wikipedia.org/wiki/Edge_detection",
        "https://en.wikipedia.org/wiki/Fast_Fourier_transform",
        "https://en.wikipedia.org/wiki/Highpass_filter",
        "https://en.wikipedia.org/wiki/Affine_transformations",
        "https://en.wikipedia.org/wiki/Identity_operation",
        "https://en.wikipedia.org/wiki/Rotate",
        "https://en.wikipedia.org/wiki/Shear_matrix",
        "https://en.wikipedia.org/wiki/Homogeneous_coordinates",
        "https://en.wikipedia.org/wiki/Mathematical_morphology",
        "https://en.wikipedia.org/wiki/Structuring_element",
        "https://en.wikipedia.org/wiki/Mathematical_morphology",
        "https://en.wikipedia.org/wiki/Convolution",
        "https://en.wikipedia.org/wiki/Convolution",
        "https://en.wikipedia.org/wiki/Digital_imaging",
        "https://en.wikipedia.org/wiki/Applications_of_computer_vision",
        "https://en.wikipedia.org/wiki/Image_sensor",
        "https://en.wikipedia.org/wiki/Color_correction",
        "https://en.wikipedia.org/wiki/Image_file_formats",
        "https://en.wikipedia.org/wiki/Pixellate",
        "https://en.wikipedia.org/wiki/Chroma_key",
        "https://en.wikipedia.org/wiki/Face_detection",
        "https://en.wikipedia.org/wiki/Mathematical_morphology",
        "https://en.wikipedia.org/wiki/Discrete_cosine_transform",
        "https://en.wikipedia.org/wiki/Structural_similarity",
        "https://en.wikipedia.org/wiki/Smoothing",
        "https://en.wikipedia.org/wiki/Histogram_Equalization",
        "https://en.wikipedia.org/wiki/Smoothing",
        "https://en.wikipedia.org/wiki/Convolution",
        "https://en.wikipedia.org/wiki/Convolution",
        "https://en.wikipedia.org/wiki/Histogram_equalization",
        "https://en.wikipedia.org/wiki/Histogram_equalization",
        "https://en.wikipedia.org/wiki/Fatigue_detection_software",
        "https://en.wikipedia.org/wiki/Digital_imaging",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/CVIPtools",
        "https://en.wikipedia.org/wiki/Digitizing",
        "https://en.wikipedia.org/wiki/Free_boundary_condition",
        "https://en.wikipedia.org/wiki/GPGPU",
        "https://en.wikipedia.org/wiki/Homomorphic_filtering",
        "https://en.wikipedia.org/wiki/Image_analysis",
        "https://en.wikipedia.org/wiki/IEEE_Intelligent_Transportation_Systems_Society",
        "https://en.wikipedia.org/wiki/Multidimensional_systems",
        "https://en.wikipedia.org/wiki/Remote_sensing_software",
        "https://en.wikipedia.org/wiki/Standard_test_image",
        "https://en.wikipedia.org/wiki/Superresolution",
        "https://en.wikipedia.org/wiki/Total_variation_denoising",
        "https://en.wikipedia.org/wiki/Machine_Vision",
        "https://en.wikipedia.org/wiki/Bounded_variation",
        "https://en.wikipedia.org/wiki/Radiomics",
        "https://en.wikipedia.org/wiki/Computer_History_Museum",
        "https://en.wikipedia.org/wiki/Eric_Fossum",
        "https://en.wikipedia.org/wiki/Eric_Fossum",
        "https://en.wikipedia.org/wiki/Eric_Fossum",
        "https://en.wikipedia.org/wiki/CCITT",
        "https://en.wikipedia.org/wiki/BT_Group",
        "https://en.wikipedia.org/wiki/The_Atlantic",
        "https://en.wikipedia.org/wiki/BBC_News",
        "https://en.wikipedia.org/wiki/IEEE_Spectrum",
        "https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers",
        "https://en.wikipedia.org/wiki/Computer_History_Museum",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Larry_Yaeger",
        "https://en.wikipedia.org/wiki/Digital_signal_processing",
        "https://en.wikipedia.org/wiki/Detection_theory",
        "https://en.wikipedia.org/wiki/Discrete_time_and_continuous_time",
        "https://en.wikipedia.org/wiki/Estimation_theory",
        "https://en.wikipedia.org/wiki/Audio_signal_processing",
        "https://en.wikipedia.org/wiki/Speech_processing",
        "https://en.wikipedia.org/wiki/Statistical_signal_processing",
        "https://en.wikipedia.org/wiki/Bilinear_transform",
        "https://en.wikipedia.org/wiki/Discrete_cosine_transform",
        "https://en.wikipedia.org/wiki/Discrete_Fourier_transform",
        "https://en.wikipedia.org/wiki/Impulse_invariance",
        "https://en.wikipedia.org/wiki/Integral_transform",
        "https://en.wikipedia.org/wiki/Laplace_transform",
        "https://en.wikipedia.org/wiki/Starred_transform",
        "https://en.wikipedia.org/wiki/Zak_transform",
        "https://en.wikipedia.org/wiki/Aliasing",
        "https://en.wikipedia.org/wiki/Nyquist_rate",
        "https://en.wikipedia.org/wiki/Nyquist_frequency",
        "https://en.wikipedia.org/wiki/Oversampling",
        "https://en.wikipedia.org/wiki/Sampling_rate",
        "https://en.wikipedia.org/wiki/Undersampling",
        "https://en.wikipedia.org/wiki/Upsampling",
        "https://en.wikipedia.org/wiki/Information_processing",
        "https://en.wikipedia.org/wiki/Information_processing",
        "https://en.wikipedia.org/wiki/Perception",
        "https://en.wikipedia.org/wiki/Attention",
        "https://en.wikipedia.org/wiki/Social_influence",
        "https://en.wikipedia.org/wiki/Remote_control",
        "https://en.wikipedia.org/wiki/Communication",
        "https://en.wikipedia.org/wiki/Reason",
        "https://en.wikipedia.org/wiki/Learning",
        "https://en.wikipedia.org/wiki/Information_storage",
        "https://en.wikipedia.org/wiki/Event_processing",
        "https://en.wikipedia.org/wiki/Semiotics",
        "https://en.wikipedia.org/wiki/Signal",
        "https://en.wikipedia.org/wiki/Data_processing",
        "https://en.wikipedia.org/wiki/Stream_processing",
        "https://en.wikipedia.org/wiki/Information_processor",
        "https://en.wikipedia.org/wiki/Social_information_processing",
        "https://en.wikipedia.org/wiki/Mixed_reality",
        "https://en.wikipedia.org/wiki/Physical_computing",
        "https://en.wikipedia.org/wiki/Ubiquitous_computing",
        "https://en.wikipedia.org/wiki/Artificial_brain",
        "https://en.wikipedia.org/wiki/Mind_uploading",
        "https://en.wikipedia.org/wiki/Virtual_reality",
        "https://en.wikipedia.org/wiki/Virtual_world",
        "https://en.wikipedia.org/wiki/Computational_theory_of_mind",
        "https://en.wikipedia.org/wiki/Philosophy_of_information",
        "https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Cognitive_science",
        "https://en.wikipedia.org/wiki/Information_processing_theory",
        "https://en.wikipedia.org/wiki/Mind",
        "https://en.wikipedia.org/wiki/Intelligence",
        "https://en.wikipedia.org/wiki/Cognitive_informatics",
        "https://en.wikipedia.org/wiki/Neuroinformatics",
        "https://en.wikipedia.org/wiki/Behavior_informatics",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Decision_theory",
        "https://en.wikipedia.org/wiki/Systems_theory",
        "https://en.wikipedia.org/wiki/Neural_computation",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Algorithms",
        "https://en.wikipedia.org/wiki/Information_structure",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Systems_biology",
        "https://en.wikipedia.org/wiki/Genome_informatics",
        "https://en.wikipedia.org/wiki/Cellular_computing",
        "https://en.wikipedia.org/wiki/Computational_neuroscience",
        "https://en.wikipedia.org/wiki/Neurocomputing",
        "https://en.wikipedia.org/wiki/Intelligent_design",
        "https://en.wikipedia.org/wiki/Law_of_conservation_of_information",
        "https://en.wikipedia.org/wiki/Infosphere",
        "https://en.wikipedia.org/wiki/Inforg",
        "https://en.wikipedia.org/wiki/Decoding_the_Universe",
        "https://en.wikipedia.org/wiki/Information_overload",
        "https://en.wikipedia.org/wiki/Digital_image_processing",
        "https://en.wikipedia.org/wiki/Digital_image_processing",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}