{
    "url": "https://en.wikipedia.org/wiki/Custom_software",
    "title": "Custom software",
    "table_of_contents": [
        "1 Considerations",
        "2 Major fields",
        "2.1 Construction",
        "2.2 Hospitals",
        "2.3 Places of education",
        "2.4 Retail",
        "3 Major project successes",
        "4 Major project overruns and failures",
        "5 Advantages and disadvantages",
        "5.1 Advantages",
        "5.2 Disadvantages",
        "6 Hybrid model",
        "7 See also",
        "8 References"
    ],
    "content": [
        {
            "paragraph1": "Customised software (also known as bespoke software or tailor-made software) is software that is specially developed for some specific organization or other user. As such, it can be contrasted with the use of software packages developed for the mass market, such as commercial off-the-shelf software, or existing free software.\n"
        },
        {
            "title": "Considerations",
            "paragraph1": "Since custom software is developed for a single customer it can accommodate that customer's particular preferences and expectations, which may not be the case for commercial off-the-shelf software. Custom software may be developed in an iterative processes, allowing all nuances and possible hidden risks to be taken into account, including issues which were not mentioned in the original requirement specifications (which are, as a rule, never perfect). In particular, the first phase in the software development process may involve many departments, including marketing, engineering, research and development and general management.\n",
            "paragraph2": "Large companies commonly develop custom software for critical functions, including content management, inventory management, customer management, human resource management, or otherwise to fill the gaps present in  existing software packages. In many cases, such software is legacy software, developed before commercial off the shelf software or free software packages offering the required functionality with an acceptable level of quality or functionality became available or widely known. For example, the BBC spent a great deal of money on a project to develop its own custom digital media production and management software, but the project experienced troubles, and after many years of development, was cancelled. A key stated reason for the project cancellation was that it had become clear that commercial off-the-shelf software existed that was, by that point, adequate to the BBC's needs and available for a small fraction of the price.\n",
            "paragraph3": "Custom software development is often considered expensive compared to off-the-shelf solutions or products. This can be true if one is speaking of typical challenges and typical solutions. However, it is not always true. In many cases, commercial off the shelf software requires customization to correctly support the buyer's operations.  The cost and delay of commercial off the shelf software customization can even add up to the expense of developing custom software.\n",
            "paragraph4": "Cost is also not the only consideration in the decision to develop custom software, as the requirements for a custom software project often includes the purchaser owning the source code, to secure the possibility of future improvement or modifications to the installed system to handle changing requirements. However, modern commercial off the shelf software often has application programming interfaces (APIs) for extensibility - or occasionally, as in the case of Salesforce.com, a domain-specific language (DSL) - meaning that commercial off the shelf software packages can sometimes accommodate quite a wide variety of customisations without the need to access source code of the core commercial off the shelf software system.\n",
            "paragraph5": "Additionally, commercial off the shelf software comes with upfront license costs which vary enormously, but sometimes run into the millions of US dollars. Furthermore, the big software houses that release commercial off the shelf software products revamp their product very frequently. Thus a particular customization may need to be upgraded for compatibility every two to four years. Given the cost of customization, such upgrades can also turn out to be expensive, as a dedicated product release cycle may have to be earmarked for them. However, in theory, the use of documented APIs and/or DSLs, as opposed to direct access to internal database tables and code modules, for customization can minimize the cost of these upgrades. This is because commercial off the shelf software vendors can opt to use techniques such as:\n",
            "ul1": "making \"under the hood\" changes while retaining backward compatibility with customizations written for older API or DSL version(s)\nsupporting old API version(s) and new API versions simultaneously in a new version of the software\npublishing guidance warning that support for old API or DSL versions is to be removed from the product in a subsequent version, to give customers more time to adapt customizations.\n",
            "paragraph6": "The decision to build a custom software or go for a commercial off the shelf software implementation would usually rest on one or more of the following factors:\n",
            "ul2": "Finances - both cost and benefit: The upfront license cost for commercial off the shelf software products mean that a thorough cost-benefit analysis of the business case needs to be done. However it is widely known that large custom software projects cannot fix all three of scope, time/cost and quality constant, so either the cost or the benefits of a custom software project will be subject to some degree of uncertainty - even disregarding the uncertainty around the business benefits of a feature that is successfully implemented.\nSupplier - In the case of commercial off the shelf software, is the supplier likely to remain in business long, and will there be adequate support and customisation available? Alternatively, will there be a realistic possibility of getting support and customisation from third parties? In the case of custom software, the software development may be outsourced or done in-house. If it is outsourced, the question is: is the supplier reputable, and do they have a good track record?\nTime to market: commercial off the shelf software products usually have a quicker time to market\nSize of implementation: commercial off the shelf software comes with standardization of business processes and reporting. For a global or national organisation, these can bring in gains in cost savings, efficiency and productivity, if the branch offices are all willing and able to use the same commercial off the shelf software without heavy customisations (which is not always a given).\n"
        },
        {
            "title": "Major fields",
            "subtitle1": "Construction",
            "paragraph1": "The construction industry uses custom software to manage projects, track changes, and report progress. Depending on the project, the software is modified to suit the particular needs of a project owner, the design team, and the general and trade contractors.\n",
            "paragraph2": "Project-specific data is used in other ways to suit the unique requirements of each project. Custom software accommodates a project team's particular preferences and expectations, making it suitable for most construction processes and challenges:\n",
            "ul1": "design development\ntender calls\ndocument control\nshop drawing approvals\nchanges management\ninspections and commissioning\nway-finding\n",
            "paragraph3": "Custom software developers use various platforms, like FileMaker Pro, to design and develop custom software for the construction industry and for other industries.\n",
            "subtitle2": "Hospitals",
            "paragraph4": "Hospitals can keep electronic health records and retrieve them any time. This enables a doctor and his or her assistants to transfer the details of a patient through a network.\n",
            "paragraph5": "Keeping patients' blood groups in a hospital database makes the search for suitable blood quicker and easier.\n",
            "paragraph6": "Hospitals also use billing software, especially in their dispensaries.\n",
            "subtitle3": "Places of education",
            "paragraph7": "Schools use custom software to keep admission details of students. They produce Transfer Certificates also. Some governments develop special software for all of their schools. Sampoorna is a school management system project implemented by the Education Department of Government of Kerala, India to automate the system and process of over 15,000 schools in the state. These projects brings a uniformity for the schools.\n",
            "subtitle4": "Retail",
            "paragraph8": "Billing is a common use of custom software. Custom software is often used by small shops,[citation needed] supermarkets and wholesale sellers to handle inventory details and to generate bills.\n"
        },
        {
            "title": "Major project successes"
        },
        {
            "title": "Major project overruns and failures",
            "paragraph1": "Failures and cost overruns of government IT projects have been extensively investigated by UK Members of Parliament and officials; they have had a rich seam of failures to examine, including:\n",
            "ul1": "The NHS National Programme for IT\nRural Payments Agency computer systems. On 15 March 2006 the Chief Executive Johnson McNeil was sacked when a deadline of 14 February for calculating Single Payment Scheme entitlements was missed.\nUniversal Credit - the first trial could not even perform the most basic functions correctly; behind schedule and reportedly the project has been restarted.\n1992 - LASCAD - the London Ambulance Service's new computer-aided despatch system - temporary crashes causing delays in routing ambulances. A previous attempt to develop a custom despatch system for the London Ambulance Service had also been scrapped.\n"
        },
        {
            "title": "Advantages and disadvantages",
            "paragraph1": "When a business is considering a software solution the options are generally between creating a spreadsheet (which is often done in Microsoft Excel), obtaining an off-the-shelf product, or having custom software created specifically to meet their needs.  There are five main criteria involved in selecting the correct solution:\n",
            "paragraph2": "Although initial assessments of the options according to these criteria may deviate sharply from the reality of the eventual solution when put into practice, due to factors such as cost overruns, insufficient training, poor product fit, reliability of the solution, etc.\n",
            "paragraph3": "These factors need to take into account the running of the business, its industry, size and turnover.  As such the decision can only be made on a business-by-business basis to determine if it warrants a custom development, as well as ownership of the software.\n",
            "subtitle1": "Advantages",
            "paragraph4": "Custom software will generally produce the most efficient system as it can provide support for the specific needs of the business, which might not be available in an off-the-shelf solution and will provide greater efficiency or better customer service.\n",
            "paragraph5": "Given a suitable approach to development, such as DSDM, custom software will also produce the best or most well-targeted service improvement.  Businesses can tailor the software to what their customers want instead of having to choose a package that caters for a generic market.  For example, one printing business may want software that responds in the shortest time, whereas another printing company may focus on producing the best results; as these two objectives often conflict, an off-the-shelf package will normally sit somewhere in the middle whereas with custom software each business can focus on their target audience.\n",
            "paragraph6": "Although not always the most suitable for larger or more complex projects, a spreadsheet allows less technical staff at a business to modify the software directly and get results faster. Custom software can be even more flexible than spreadsheets as it is constructed by software professionals that can implement functionality for a wide range of business needs.\n",
            "subtitle2": "Disadvantages",
            "paragraph7": "The main disadvantages of custom software are development time and cost. With a spreadsheet or an off-the-shelf software package, a user can get benefits quickly. With custom software, a business needs to go through a Software development process that may take weeks, months, or with bigger projects, years. Bugs accidentally introduced by software developers, and thorough testing to iron out bugs, may impede the process and cause it to take longer than expected. However, spreadsheets and off-the-shelf software packages may also contain bugs, and moreover because they may be deployed at a business without formal testing, these bugs may slip through and cause business-critical errors.\n",
            "paragraph8": "Custom software is often several times the cost of the other two options, and will normally include an ongoing maintenance cost. This will often make custom software infeasible for smaller businesses.  These higher costs can be insignificant in larger businesses where small efficiency increases can relate to large labour cost savings or where custom software offers a large efficiency boost.\n"
        },
        {
            "title": "Hybrid model",
            "paragraph1": "Particularly with modern cloud software, a hybrid model of custom software is possible in which the main focus is on the commercial off the shelf software - mainly the mismatch between its features, functions and the business requirements, preferences and expectations. The idea here is to buy a commercial off the shelf software which satisfies maximum number of requirement and develop custom software (extensions or add-ons) to fill the gaps left by it. This is the standard approach used when implementing SAP ERP, for example.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Mass_marketing",
        "https://en.wikipedia.org/wiki/Free_software",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Marketing",
        "https://en.wikipedia.org/wiki/Engineering",
        "https://en.wikipedia.org/wiki/Research_and_development",
        "https://en.wikipedia.org/wiki/Management",
        "https://en.wikipedia.org/wiki/Content_management",
        "https://en.wikipedia.org/wiki/Inventory_management",
        "https://en.wikipedia.org/wiki/Customer_management",
        "https://en.wikipedia.org/wiki/Human_resource_management",
        "https://en.wikipedia.org/wiki/Legacy_software",
        "https://en.wikipedia.org/wiki/BBC",
        "https://en.wikipedia.org/wiki/Digital_Media_Initiative",
        "https://en.wikipedia.org/wiki/Source_code",
        "https://en.wikipedia.org/wiki/Application_programming_interface",
        "https://en.wikipedia.org/wiki/Backward_compatibility",
        "https://en.wikipedia.org/wiki/FileMaker_Pro",
        "https://en.wikipedia.org/wiki/Electronic_health_record",
        "https://en.wikipedia.org/wiki/Blood_group",
        "https://en.wikipedia.org/wiki/Pharmacy",
        "https://en.wikipedia.org/wiki/Sampoorna",
        "https://en.wikipedia.org/wiki/Invoice",
        "https://en.wikipedia.org/wiki/Supermarket",
        "https://en.wikipedia.org/wiki/Wholesale",
        "https://en.wikipedia.org/wiki/Inventory",
        "https://en.wikipedia.org/wiki/List_of_failed_and_overbudget_custom_software_projects",
        "https://en.wikipedia.org/wiki/National_Programme_for_IT",
        "https://en.wikipedia.org/wiki/Rural_Payments_Agency",
        "https://en.wikipedia.org/wiki/Universal_Credit",
        "https://en.wikipedia.org/wiki/Microsoft_Excel",
        "https://en.wikipedia.org/wiki/Dynamic_systems_development_method",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/SAP_ERP",
        "https://en.wikipedia.org/wiki/Bespoke",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Custom_software",
        "https://en.wikipedia.org/wiki/Custom_software",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}