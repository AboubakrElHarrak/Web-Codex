{
    "url": "https://en.wikipedia.org/wiki/Computational_geometry",
    "title": "Computational geometry",
    "table_of_contents": [
        "1 Combinatorial computational geometry",
        "1.1 Problem classes",
        "1.1.1 Static problems",
        "1.1.2 Geometric query problems",
        "1.1.3 Dynamic problems",
        "1.1.4 Variations",
        "2 Numerical computational geometry",
        "3 See also",
        "4 References",
        "5 Further reading",
        "5.1 Journals",
        "5.1.1 Combinatorial/algorithmic computational geometry",
        "6 External links"
    ],
    "content": [
        {
            "paragraph1": "Computational geometry is a branch of computer science devoted to the study of algorithms which can be stated in terms of geometry. Some purely geometrical problems arise out of the study of computational geometric algorithms, and such problems are also considered to be part of computational geometry. While modern computational geometry is a recent development, it is one of the oldest fields of computing with a history stretching back to antiquity.\n",
            "paragraph2": "Computational complexity is central to computational geometry, with great practical significance if algorithms are used on very large datasets containing tens or hundreds of millions of points. For such sets, the difference between O(n2) and O(n log n) may be the difference between days and seconds of computation.\n",
            "paragraph3": "The main impetus for the development of computational geometry as a discipline was progress in computer graphics and computer-aided design and manufacturing (CAD/CAM), but many problems in computational geometry are classical in nature, and may come from mathematical visualization.\n",
            "paragraph4": "Other important applications of computational geometry include robotics (motion planning and visibility problems), geographic information systems (GIS) (geometrical location and search, route planning), integrated circuit design (IC geometry design and verification), computer-aided engineering (CAE) (mesh generation), and computer vision (3D reconstruction).\n",
            "paragraph5": "The main branches of computational geometry are:\n",
            "ul1": "Combinatorial computational geometry, also called algorithmic geometry, which deals with geometric objects as discrete entities. A groundlaying book in the subject by Preparata and Shamos dates the first use of the term \"computational geometry\" in this sense by 1975.[1]\nNumerical computational geometry, also called machine geometry, computer-aided geometric design (CAGD), or geometric modeling, which deals primarily with representing real-world objects in forms suitable for computer computations in CAD/CAM systems. This branch may be seen as a further development of descriptive geometry and is often considered a branch of computer graphics or CAD. The term \"computational geometry\" in this meaning has been in use since 1971.[2]\n",
            "paragraph6": "Although most algorithms of computational geometry have been developed (and are being developed) for electronic computers, some algorithms were developed for unconventional computers (e.g. optical computers )\n"
        },
        {
            "title": "Combinatorial computational geometry",
            "paragraph1": "The primary goal of research in combinatorial computational geometry is to develop efficient algorithms and data structures for solving problems stated in terms of basic geometrical objects: points, line segments, polygons, polyhedra, etc.\n",
            "paragraph2": "Some of these problems seem so simple that they were not regarded as problems at all until the advent of computers. Consider, for example, the Closest pair problem:\n",
            "ul1": "Given n points in the plane, find the two with the smallest distance from each other.\n",
            "paragraph3": "One could compute the distances between all the pairs of points, of which there are n(n-1)/2, then pick the pair with the smallest distance. This brute-force algorithm takes O(n2) time; i.e. its execution time is proportional to the square of the number of points. A classic result in computational geometry was the formulation of an algorithm that takes O(n log n). Randomized algorithms that take O(n) expected time, as well as a deterministic algorithm that takes O(n log log n) time, have also been discovered.\n",
            "subtitle1": "Problem classes",
            "paragraph4": "The core problems in computational geometry may be classified in different ways, according to various criteria. The following general classes may be distinguished.\n",
            "paragraph5": "In the problems of this category, some input is given and the corresponding output needs to be constructed or found. Some fundamental problems of this type are:\n",
            "ul2": "Convex hull: Given a set of points, find the smallest convex polyhedron/polygon containing all the points.\nLine segment intersection: Find the intersections between a given set of line segments.\nDelaunay triangulation\nVoronoi diagram: Given a set of points, partition the space according to which points are closest to the given points.\nLinear programming\nClosest pair of points: Given a set of points, find the two with the smallest distance from each other.\nFarthest pair of points\nLargest empty circle: Given a set of points, find a largest circle with its center inside of their convex hull and enclosing none of them.\nEuclidean shortest path: Connect two points in a Euclidean space (with polyhedral obstacles) by a shortest path.\nPolygon triangulation: Given a polygon, partition its interior into triangles\nMesh generation\nBoolean operations on polygons\n",
            "paragraph6": "The computational complexity for this class of problems is estimated by the time and space (computer memory) required to solve a given problem instance.\n",
            "paragraph7": "In geometric query problems, commonly known as geometric search problems, the input consists of two parts: the search space part and the query part, which varies over the problem instances. The search space typically needs to be preprocessed, in a way that multiple queries can be answered efficiently.\n",
            "paragraph8": "Some fundamental geometric query problems are:\n",
            "ul3": "Range searching: Preprocess a set of points, in order to efficiently count the number of points inside a query region.\nPoint location: Given a partitioning of the space into cells, produce a data structure that efficiently tells in which cell a query point is located.\nNearest neighbor: Preprocess a set of points, in order to efficiently find which point is closest to a query point.\nRay tracing: Given a set of objects in space, produce a data structure that efficiently tells which object a query ray intersects first.\n",
            "paragraph9": "If the search space is fixed, the computational complexity for this class of problems is usually estimated by:\n",
            "ul4": "the time and space required to construct the data structure to be searched in\nthe time (and sometimes an extra space) to answer queries.\n",
            "paragraph10": "For the case when the search space is allowed to vary, see \"Dynamic problems\".\n",
            "paragraph11": "Yet another major class is the dynamic problems, in which the goal is to find an efficient algorithm for finding a solution repeatedly after each incremental modification of the input data (addition or deletion input geometric elements). Algorithms for problems of this type typically involve dynamic data structures. Any of the computational geometric problems may be converted into a dynamic one, at the cost of increased processing time. For example, the range searching problem may be converted into the dynamic range searching problem by providing for addition and/or deletion of the points. The dynamic convex hull problem is to keep track of the convex hull, e.g., for the dynamically changing set of points, i.e., while the input points are inserted or deleted.\n",
            "paragraph12": "The computational complexity for this class of problems is estimated by:\n",
            "ul5": "the time and space required to construct the data structure to be searched in\nthe time and space to modify the searched data structure after an incremental change in the search space\nthe time (and sometimes an extra space) to answer a query.\n",
            "paragraph13": "Some problems may be treated as belonging to either of the categories, depending on the context. For example, consider the following problem.\n",
            "ul6": "Point in polygon: Decide whether a point is inside or outside a given polygon.\n",
            "paragraph14": "In many applications this problem is treated as a single-shot one, i.e., belonging to the first class. For example, in many applications of computer graphics a common problem is to find which area on the screen is clicked by a pointer. However, in some applications, the polygon in question is invariant, while the point represents a query. For example, the input polygon may represent a border of a country and a point is a position of an aircraft, and the problem is to determine whether the aircraft violated the border. Finally, in the previously mentioned example of computer graphics, in CAD applications the changing input data are often stored in dynamic data structures, which may be exploited to speed-up the point-in-polygon queries.\n",
            "paragraph15": "In some contexts of query problems there are reasonable expectations on the sequence of the queries, which may be exploited either for efficient data structures or for tighter computational complexity estimates. For example, in some cases it is important to know the worst case for the total time for the whole sequence of N queries, rather than for a single query. See also \"amortized analysis\".\n"
        },
        {
            "title": "Numerical computational geometry",
            "paragraph1": "This branch is also known as geometric modelling and computer-aided geometric design (CAGD).\n",
            "paragraph2": "Core problems are curve and surface modelling and representation.\n",
            "paragraph3": "The most important instruments here are parametric curves and parametric surfaces, such as Bézier curves, spline curves and surfaces. An important non-parametric approach is the level-set method.\n",
            "paragraph4": "Application areas of computational geometry include shipbuilding, aircraft, and automotive industries.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Geometry",
        "https://en.wikipedia.org/wiki/Algorithms",
        "https://en.wikipedia.org/wiki/Analysis_of_algorithms",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Mathematical_visualization",
        "https://en.wikipedia.org/wiki/Robotics",
        "https://en.wikipedia.org/wiki/Motion_planning",
        "https://en.wikipedia.org/wiki/Geographic_information_system",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/3D_reconstruction",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Michael_Ian_Shamos",
        "https://en.wikipedia.org/wiki/Descriptive_geometry",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Data_structure",
        "https://en.wikipedia.org/wiki/Polygon",
        "https://en.wikipedia.org/wiki/Polyhedron",
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Closest_pair_problem",
        "https://en.wikipedia.org/wiki/Big_O_notation",
        "https://en.wikipedia.org/wiki/Randomized_algorithm",
        "https://en.wikipedia.org/wiki/Convex_hull",
        "https://en.wikipedia.org/wiki/Line_segment_intersection",
        "https://en.wikipedia.org/wiki/Delaunay_triangulation",
        "https://en.wikipedia.org/wiki/Voronoi_diagram",
        "https://en.wikipedia.org/wiki/Linear_programming",
        "https://en.wikipedia.org/wiki/Closest_pair_of_points",
        "https://en.wikipedia.org/wiki/Largest_empty_circle",
        "https://en.wikipedia.org/wiki/Euclidean_shortest_path",
        "https://en.wikipedia.org/wiki/Polygon_triangulation",
        "https://en.wikipedia.org/wiki/Mesh_generation",
        "https://en.wikipedia.org/wiki/Boolean_operations_on_polygons",
        "https://en.wikipedia.org/wiki/Range_searching",
        "https://en.wikipedia.org/wiki/Point_location",
        "https://en.wikipedia.org/wiki/Nearest_neighbour_search",
        "https://en.wikipedia.org/wiki/Dynamic_data_structures",
        "https://en.wikipedia.org/wiki/Range_searching",
        "https://en.wikipedia.org/wiki/Dynamic_convex_hull",
        "https://en.wikipedia.org/wiki/Point_in_polygon",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Amortized_analysis",
        "https://en.wikipedia.org/wiki/Parametric_curve",
        "https://en.wikipedia.org/wiki/Parametric_surface",
        "https://en.wikipedia.org/wiki/List_of_combinatorial_computational_geometry_topics",
        "https://en.wikipedia.org/wiki/List_of_numerical_computational_geometry_topics",
        "https://en.wikipedia.org/wiki/List_of_geometric_algorithms",
        "https://en.wikipedia.org/wiki/Solid_modeling",
        "https://en.wikipedia.org/wiki/Computational_topology",
        "https://en.wikipedia.org/wiki/Computer_representation_of_surfaces",
        "https://en.wikipedia.org/wiki/Digital_geometry",
        "https://en.wikipedia.org/wiki/Discrete_geometry",
        "https://en.wikipedia.org/wiki/Space_partitioning",
        "https://en.wikipedia.org/wiki/Multicomplex_number",
        "https://en.wikipedia.org/wiki/Robust_geometric_computation",
        "https://en.wikipedia.org/wiki/Michael_Ian_Shamos",
        "https://en.wikipedia.org/wiki/PDF",
        "https://en.wikipedia.org/wiki/List_of_books_in_computational_geometry",
        "https://en.wikipedia.org/wiki/ACM_Computing_Surveys",
        "https://en.wikipedia.org/wiki/ACM_Transactions_on_Graphics",
        "https://en.wikipedia.org/wiki/Acta_Informatica",
        "https://en.wikipedia.org/wiki/Advances_in_Geometry",
        "https://en.wikipedia.org/wiki/Algorithmica",
        "https://en.wikipedia.org/wiki/Communications_of_the_ACM",
        "https://en.wikipedia.org/wiki/Geombinatorics",
        "https://en.wikipedia.org/wiki/Geometriae_Dedicata",
        "https://en.wikipedia.org/wiki/IEEE_Transactions_on_Computers",
        "https://en.wikipedia.org/wiki/IEEE_Transactions_on_Pattern_Analysis_and_Machine_Intelligence",
        "https://en.wikipedia.org/wiki/Information_Processing_Letters",
        "https://en.wikipedia.org/wiki/International_Journal_of_Computational_Geometry_and_Applications",
        "https://en.wikipedia.org/wiki/Journal_of_Combinatorial_Theory",
        "https://en.wikipedia.org/wiki/Journal_of_Computational_Geometry",
        "https://en.wikipedia.org/wiki/Journal_of_the_ACM",
        "https://en.wikipedia.org/wiki/Journal_of_Algorithms",
        "https://en.wikipedia.org/wiki/Journal_of_Computer_and_System_Sciences",
        "https://en.wikipedia.org/wiki/Pattern_Recognition_Letters",
        "https://en.wikipedia.org/wiki/SIAM_Journal_on_Computing",
        "https://en.wikipedia.org/wiki/SIGACT_News",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/ACM_Computing_Classification_System",
        "https://en.wikipedia.org/wiki/Computer_hardware",
        "https://en.wikipedia.org/wiki/Printed_circuit_board",
        "https://en.wikipedia.org/wiki/Peripheral",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Very_Large_Scale_Integration",
        "https://en.wikipedia.org/wiki/System_on_a_chip",
        "https://en.wikipedia.org/wiki/Green_computing",
        "https://en.wikipedia.org/wiki/Electronic_design_automation",
        "https://en.wikipedia.org/wiki/Hardware_acceleration",
        "https://en.wikipedia.org/wiki/Computer_architecture",
        "https://en.wikipedia.org/wiki/Embedded_system",
        "https://en.wikipedia.org/wiki/Dependability",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Network_architecture",
        "https://en.wikipedia.org/wiki/Network_protocol",
        "https://en.wikipedia.org/wiki/Networking_hardware",
        "https://en.wikipedia.org/wiki/Network_scheduler",
        "https://en.wikipedia.org/wiki/Network_performance",
        "https://en.wikipedia.org/wiki/Network_service",
        "https://en.wikipedia.org/wiki/Middleware",
        "https://en.wikipedia.org/wiki/Virtual_machine",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Software_quality",
        "https://en.wikipedia.org/wiki/Programming_language_theory",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Programming_paradigm",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Compiler_construction",
        "https://en.wikipedia.org/wiki/Modeling_language",
        "https://en.wikipedia.org/wiki/Software_framework",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_repository",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Programming_team",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Model_of_computation",
        "https://en.wikipedia.org/wiki/Formal_language",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Computability_theory",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Logic_in_computer_science",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Algorithm_design",
        "https://en.wikipedia.org/wiki/Analysis_of_algorithms",
        "https://en.wikipedia.org/wiki/Algorithmic_efficiency",
        "https://en.wikipedia.org/wiki/Randomized_algorithm",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Probability",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Mathematical_software",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Mathematical_analysis",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Theoretical_computer_science",
        "https://en.wikipedia.org/wiki/Information_system",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Computer_data_storage",
        "https://en.wikipedia.org/wiki/Enterprise_information_system",
        "https://en.wikipedia.org/wiki/Social_software",
        "https://en.wikipedia.org/wiki/Geographic_information_system",
        "https://en.wikipedia.org/wiki/Decision_support_system",
        "https://en.wikipedia.org/wiki/Process_control",
        "https://en.wikipedia.org/wiki/Multimedia_database",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Digital_library",
        "https://en.wikipedia.org/wiki/Computing_platform",
        "https://en.wikipedia.org/wiki/Digital_marketing",
        "https://en.wikipedia.org/wiki/World_Wide_Web",
        "https://en.wikipedia.org/wiki/Information_retrieval",
        "https://en.wikipedia.org/wiki/Computer_security",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Intrusion_detection_system",
        "https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure",
        "https://en.wikipedia.org/wiki/Network_security",
        "https://en.wikipedia.org/wiki/Information_security",
        "https://en.wikipedia.org/wiki/Application_security",
        "https://en.wikipedia.org/wiki/Interaction_design",
        "https://en.wikipedia.org/wiki/Social_computing",
        "https://en.wikipedia.org/wiki/Ubiquitous_computing",
        "https://en.wikipedia.org/wiki/Computer_accessibility",
        "https://en.wikipedia.org/wiki/Concurrent_computing",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Distributed_computing",
        "https://en.wikipedia.org/wiki/Multiprocessing",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Natural_language_processing",
        "https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/Automated_planning_and_scheduling",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Control_theory",
        "https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Distributed_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Unsupervised_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Computer_animation",
        "https://en.wikipedia.org/wiki/Photo_manipulation",
        "https://en.wikipedia.org/wiki/Graphics_processing_unit",
        "https://en.wikipedia.org/wiki/Mixed_reality",
        "https://en.wikipedia.org/wiki/Virtual_reality",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Solid_modeling",
        "https://en.wikipedia.org/wiki/Enterprise_software",
        "https://en.wikipedia.org/wiki/Computational_mathematics",
        "https://en.wikipedia.org/wiki/Computational_physics",
        "https://en.wikipedia.org/wiki/Computational_chemistry",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Computational_social_science",
        "https://en.wikipedia.org/wiki/Computational_engineering",
        "https://en.wikipedia.org/wiki/Health_informatics",
        "https://en.wikipedia.org/wiki/Digital_art",
        "https://en.wikipedia.org/wiki/Electronic_publishing",
        "https://en.wikipedia.org/wiki/Cyberwarfare",
        "https://en.wikipedia.org/wiki/Electronic_voting",
        "https://en.wikipedia.org/wiki/Video_game",
        "https://en.wikipedia.org/wiki/Word_processor",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Educational_technology",
        "https://en.wikipedia.org/wiki/Document_management_system",
        "https://en.wikipedia.org/wiki/Outline_of_computer_science",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}