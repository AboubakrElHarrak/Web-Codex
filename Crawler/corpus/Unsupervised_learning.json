{
    "url": "https://en.wikipedia.org/wiki/Unsupervised_learning",
    "title": "Unsupervised learning",
    "table_of_contents": [
        "1 Neural networks",
        "1.1 Tasks vs. Methods",
        "1.2 Training",
        "1.3 Energy",
        "1.4 Networks",
        "1.5 History",
        "1.6 Specific Networks",
        "1.7 Comparison of Networks",
        "2 Probabilistic methods",
        "2.1 Approaches",
        "2.2 Method of moments",
        "3 See also",
        "4 References",
        "5 Further reading"
    ],
    "content": [
        {
            "paragraph1": "Unsupervised learning  is a type of algorithm that learns patterns from untagged data. The hope is that through mimicry, which is an important mode of learning in people, the machine is forced to build a compact internal representation of its world and then generate imaginative content from it. In contrast to supervised learning where data is tagged by an expert, e.g. as a \"ball\" or \"fish\", unsupervised methods exhibit self-organization that captures patterns as probability densities  or a combination of neural feature preferences. The other levels in the supervision spectrum are reinforcement learning where the machine is given only a numerical performance score as guidance, and semi-supervised learning where a smaller portion of the data is tagged. Two broad methods in Unsupervised Learning are Neural Networks and Probabilistic Methods.\n"
        },
        {
            "title": "Neural networks",
            "subtitle1": "Tasks vs. Methods",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/9/90/Task-guidance.png",
                "caption": "\n\t\tTendency for a task to employ Supervised vs. Unsupervised methods.  Task names straddling circle boundaries is intentional.  It shows that the classical division of imaginative tasks (left) employing unsupervised methods is blurred in today's learning schemes.\n\t"
            },
            "paragraph1": "Neural network tasks are often categorized as discriminative (recognition) or generative (imagination).  Often but not always, discriminative tasks use supervised methods and generative tasks use unsupervised (see Venn diagram); however, the separation is very hazy.  For example, object recognition favors supervised learning but unsupervised learning can also cluster objects into groups.  Furthermore, as progress marches onward some tasks employ both methods, and some tasks swing from one to another.  For example, image recognition started off as heavily supervised, but became hybrid by employing unsupervised pre-training, and then moved towards supervision again with the advent of dropout, relu, and adaptive learning rates.\n",
            "subtitle2": "Training",
            "paragraph2": "During the learning phase, an unsupervised network tries to mimic the data it's given and uses the error in its mimicked output to correct itself (ie. correct its weights & biases). This resembles the mimicry behavior of children as they learn a language.  Sometimes the error is expressed as a low probability that the erroneous output occurs, or it might be express as an unstable high energy state in the network.\n",
            "paragraph3": "In contrast to Supervised method's dominant use of Backpropagation, Unsupervised Learning also employ other methods  including:  Hopfield learning rule, Boltzmann learning rule, Contrastive Divergence, Wake Sleep, Variational Inference, Maximum Likelihood, Maximum A Posteriori, Gibbs Sampling, and backpropagating reconstruction errors or hidden state reparameterizations.  See the table below for more details.\n",
            "subtitle3": "Energy",
            "paragraph4": "An energy function is a macroscopic measure of a network's activation state.  In Boltzmann machines, it plays the role of the Cost function.  This analogy with physics is inspired by Ludwig Boltzmann's analysis of a gas' macroscopic energy from the microscopic probabilities of particle motion p \n\n\n\n∝\n\n\n{\\displaystyle \\propto }\n\n eE/kT, where k is the Boltzmann constant and T is temperature. In the RBM network the relation is p = e−E / Z, where p & E vary over every possible activation pattern and Z = \n\n\n\n\n∑\n\nA\nl\nl\nP\na\nt\nt\ne\nr\nn\ns\n\n\n\n\n{\\displaystyle \\sum _{AllPatterns))\n\n e -E(pattern). To be more precise, p(a) = e-E(a) / Z, where a is an activation pattern of all neurons (visible and hidden). Hence, early neural networks bear the name Boltzmann Machine.  Paul Smolensky calls -E the Harmony. A network seeks low energy which is high Harmony.\n",
            "subtitle4": "Networks",
            "paragraph5": "This table shows connection diagrams of various unsupervised networks, the details of which will be given in the section Comparison of Network.  Of the networks bearing people's names, only Hopfield worked directly with neural networks.  Boltzmann and Helmholtz lived before the invention of artificial neural networks, but they did inspire the analytical methods that were used.\n",
            "subtitle5": "History",
            "subtitle6": "Specific Networks",
            "paragraph6": "Here, we highlight some characteristics of each networks. Ferromagnetism inspired Hopfield networks, Boltzmann machines, and RBMs. A neuron correspond to an iron domain with binary magnetic moments Up and Down, and neural connections correspond to the domain's influence on each other. Symmetric connections enables a global energy formulation. During inference the network updates each state using the standard activation step function. Symmetric weights guarantees convergence to a stable activation pattern.\n",
            "subtitle7": "Comparison of Networks",
            "paragraph7": "Hebbian Learning, ART, SOM\nThe classical example of unsupervised learning in the study of neural networks is Donald Hebb's principle, that is, neurons that fire together wire together. In Hebbian learning, the connection is reinforced irrespective of an error, but is exclusively a function of the coincidence between action potentials between the two neurons. A similar version that modifies synaptic weights takes into account the time between the action potentials (spike-timing-dependent plasticity or STDP). Hebbian Learning has been hypothesized to underlie a range of cognitive functions, such as pattern recognition and experiential learning.\n",
            "paragraph8": "Among neural network models, the self-organizing map (SOM) and adaptive resonance theory (ART) are commonly used in unsupervised learning algorithms. The SOM is a topographic organization in which nearby locations in the map represent inputs with similar properties. The ART model allows the number of clusters to vary with problem size and lets the user control the degree of similarity between members of the same clusters by means of a user-defined constant called the vigilance parameter. ART networks are used for many pattern recognition tasks, such as automatic target recognition and seismic signal processing.\n"
        },
        {
            "title": "Probabilistic methods",
            "paragraph1": "Two of the main methods used in unsupervised learning are principal component and cluster analysis. Cluster analysis is used in unsupervised learning to group, or segment, datasets with shared attributes in order to extrapolate algorithmic relationships. Cluster analysis is a branch of machine learning that groups the data that has not been labelled, classified or categorized. Instead of responding to feedback, cluster analysis identifies commonalities in the data and reacts based on the presence or absence of such commonalities in each new piece of data. This approach helps detect anomalous data points that do not fit into either group.\n",
            "paragraph2": "A central application of unsupervised learning is in the field of density estimation in statistics, though unsupervised learning encompasses many other domains involving summarizing and explaining data features. It can be contrasted with supervised learning by saying that whereas supervised learning intends to infer a conditional probability distribution  conditioned on the label  of input data; unsupervised learning intends to infer an a priori probability distribution .\n",
            "subtitle1": "Approaches",
            "paragraph3": "Some of the most common algorithms used in unsupervised learning include: (1) Clustering, (2) Anomaly detection, (3) Approaches for learning latent variable models. Each approach uses several methods as follows:\n",
            "ul1": "Clustering methods include: hierarchical clustering,[8] k-means,[9] mixture models, DBSCAN, and OPTICS algorithm\nAnomaly detection methods include: Local Outlier Factor, and Isolation Forest\nApproaches for learning latent variable models such as Expectation–maximization algorithm (EM), Method of moments, and Blind signal separation techniques (Principal component analysis, Independent component analysis, Non-negative matrix factorization, Singular value decomposition)\n",
            "subtitle2": "Method of moments",
            "paragraph4": "One of the statistical approaches for unsupervised learning is the method of moments. In the method of moments, the unknown parameters (of interest) in the model are related to the moments of one or more random variables, and thus, these unknown parameters can be estimated given the moments. The moments are usually estimated from samples empirically. The basic moments are first and second order moments. For a random vector, the first order moment is the mean vector, and the second order moment is the covariance matrix (when the mean is zero). Higher order moments are usually represented using tensors which are the generalization of matrices to higher orders as multi-dimensional arrays.\n",
            "paragraph5": "In particular, the method of moments is shown to be effective in learning the parameters of latent variable models. Latent variable models are statistical models where in addition to the observed variables, a set of latent variables also exists which is not observed. A highly practical example of latent variable models in machine learning is the topic modeling which is a statistical model for generating the words (observed variables) in the document based on the topic (latent variable) of the document. In the topic modeling, the words in the document are generated according to different statistical parameters when the topic of the document is changed. It is shown that method of moments (tensor decomposition techniques) consistently recover the parameters of a large class of latent variable models under some assumptions.\n",
            "paragraph6": "\nThe Expectation–maximization algorithm (EM) is also one of the most practical methods for learning latent variable models. However, it can get stuck in local optima, and it is not guaranteed that the algorithm will converge to the true unknown parameters of the model. In contrast, for the method of moments, the global convergence is guaranteed under some conditions."
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Statistical_classification",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Regression_analysis",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Data_Cleaning",
        "https://en.wikipedia.org/wiki/Automated_machine_learning",
        "https://en.wikipedia.org/wiki/Association_rule_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Structured_prediction",
        "https://en.wikipedia.org/wiki/Feature_engineering",
        "https://en.wikipedia.org/wiki/Feature_learning",
        "https://en.wikipedia.org/wiki/Online_machine_learning",
        "https://en.wikipedia.org/wiki/Learning_to_rank",
        "https://en.wikipedia.org/wiki/Grammar_induction",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Statistical_classification",
        "https://en.wikipedia.org/wiki/Regression_analysis",
        "https://en.wikipedia.org/wiki/Decision_tree_learning",
        "https://en.wikipedia.org/wiki/Ensemble_learning",
        "https://en.wikipedia.org/wiki/Bootstrap_aggregating",
        "https://en.wikipedia.org/wiki/Random_forest",
        "https://en.wikipedia.org/wiki/Linear_regression",
        "https://en.wikipedia.org/wiki/Naive_Bayes_classifier",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Logistic_regression",
        "https://en.wikipedia.org/wiki/Perceptron",
        "https://en.wikipedia.org/wiki/Relevance_vector_machine",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/BIRCH",
        "https://en.wikipedia.org/wiki/CURE_algorithm",
        "https://en.wikipedia.org/wiki/Hierarchical_clustering",
        "https://en.wikipedia.org/wiki/DBSCAN",
        "https://en.wikipedia.org/wiki/OPTICS_algorithm",
        "https://en.wikipedia.org/wiki/Mean_shift",
        "https://en.wikipedia.org/wiki/Dimensionality_reduction",
        "https://en.wikipedia.org/wiki/Factor_analysis",
        "https://en.wikipedia.org/wiki/Canonical_correlation",
        "https://en.wikipedia.org/wiki/Independent_component_analysis",
        "https://en.wikipedia.org/wiki/Linear_discriminant_analysis",
        "https://en.wikipedia.org/wiki/Principal_component_analysis",
        "https://en.wikipedia.org/wiki/Proper_generalized_decomposition",
        "https://en.wikipedia.org/wiki/Structured_prediction",
        "https://en.wikipedia.org/wiki/Graphical_model",
        "https://en.wikipedia.org/wiki/Bayesian_network",
        "https://en.wikipedia.org/wiki/Conditional_random_field",
        "https://en.wikipedia.org/wiki/Hidden_Markov_model",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Local_outlier_factor",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Autoencoder",
        "https://en.wikipedia.org/wiki/Cognitive_computing",
        "https://en.wikipedia.org/wiki/Deep_learning",
        "https://en.wikipedia.org/wiki/DeepDream",
        "https://en.wikipedia.org/wiki/Multilayer_perceptron",
        "https://en.wikipedia.org/wiki/Recurrent_neural_network",
        "https://en.wikipedia.org/wiki/Gated_recurrent_unit",
        "https://en.wikipedia.org/wiki/Echo_state_network",
        "https://en.wikipedia.org/wiki/Restricted_Boltzmann_machine",
        "https://en.wikipedia.org/wiki/Generative_adversarial_network",
        "https://en.wikipedia.org/wiki/Convolutional_neural_network",
        "https://en.wikipedia.org/wiki/Vision_transformer",
        "https://en.wikipedia.org/wiki/Spiking_neural_network",
        "https://en.wikipedia.org/wiki/Memtransistor",
        "https://en.wikipedia.org/wiki/Electrochemical_RAM",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Temporal_difference_learning",
        "https://en.wikipedia.org/wiki/Kernel_machines",
        "https://en.wikipedia.org/wiki/Computational_learning_theory",
        "https://en.wikipedia.org/wiki/Empirical_risk_minimization",
        "https://en.wikipedia.org/wiki/Occam_learning",
        "https://en.wikipedia.org/wiki/Probably_approximately_correct_learning",
        "https://en.wikipedia.org/wiki/Statistical_learning_theory",
        "https://en.wikipedia.org/wiki/Conference_on_Neural_Information_Processing_Systems",
        "https://en.wikipedia.org/wiki/International_Conference_on_Machine_Learning",
        "https://en.wikipedia.org/wiki/Journal_of_Machine_Learning_Research",
        "https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Outline_of_machine_learning",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Donald_Hebb",
        "https://en.wikipedia.org/wiki/Hebbian_learning",
        "https://en.wikipedia.org/wiki/Pattern_recognition",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Adaptive_resonance_theory",
        "https://en.wikipedia.org/wiki/Automatic_target_recognition",
        "https://en.wikipedia.org/wiki/Principal_component_analysis",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Labeled_data",
        "https://en.wikipedia.org/wiki/Density_estimation",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Conditional_probability_distribution",
        "https://en.wikipedia.org/wiki/A_priori_probability",
        "https://en.wikipedia.org/wiki/Data_clustering",
        "https://en.wikipedia.org/wiki/Hierarchical_clustering",
        "https://en.wikipedia.org/wiki/Mixture_models",
        "https://en.wikipedia.org/wiki/DBSCAN",
        "https://en.wikipedia.org/wiki/OPTICS_algorithm",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Local_Outlier_Factor",
        "https://en.wikipedia.org/wiki/Isolation_Forest",
        "https://en.wikipedia.org/wiki/Latent_variable_model",
        "https://en.wikipedia.org/wiki/Blind_signal_separation",
        "https://en.wikipedia.org/wiki/Principal_component_analysis",
        "https://en.wikipedia.org/wiki/Independent_component_analysis",
        "https://en.wikipedia.org/wiki/Singular_value_decomposition",
        "https://en.wikipedia.org/wiki/Mean",
        "https://en.wikipedia.org/wiki/Covariance_matrix",
        "https://en.wikipedia.org/wiki/Tensors",
        "https://en.wikipedia.org/wiki/Latent_variable_model",
        "https://en.wikipedia.org/wiki/Topic_modeling",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Statistical_classification",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Regression_analysis",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Data_Cleaning",
        "https://en.wikipedia.org/wiki/Automated_machine_learning",
        "https://en.wikipedia.org/wiki/Association_rule_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Structured_prediction",
        "https://en.wikipedia.org/wiki/Feature_engineering",
        "https://en.wikipedia.org/wiki/Feature_learning",
        "https://en.wikipedia.org/wiki/Online_machine_learning",
        "https://en.wikipedia.org/wiki/Learning_to_rank",
        "https://en.wikipedia.org/wiki/Grammar_induction",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Statistical_classification",
        "https://en.wikipedia.org/wiki/Regression_analysis",
        "https://en.wikipedia.org/wiki/Decision_tree_learning",
        "https://en.wikipedia.org/wiki/Ensemble_learning",
        "https://en.wikipedia.org/wiki/Bootstrap_aggregating",
        "https://en.wikipedia.org/wiki/Random_forest",
        "https://en.wikipedia.org/wiki/Linear_regression",
        "https://en.wikipedia.org/wiki/Naive_Bayes_classifier",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Logistic_regression",
        "https://en.wikipedia.org/wiki/Perceptron",
        "https://en.wikipedia.org/wiki/Relevance_vector_machine",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/BIRCH",
        "https://en.wikipedia.org/wiki/CURE_algorithm",
        "https://en.wikipedia.org/wiki/Hierarchical_clustering",
        "https://en.wikipedia.org/wiki/DBSCAN",
        "https://en.wikipedia.org/wiki/OPTICS_algorithm",
        "https://en.wikipedia.org/wiki/Mean_shift",
        "https://en.wikipedia.org/wiki/Dimensionality_reduction",
        "https://en.wikipedia.org/wiki/Factor_analysis",
        "https://en.wikipedia.org/wiki/Canonical_correlation",
        "https://en.wikipedia.org/wiki/Independent_component_analysis",
        "https://en.wikipedia.org/wiki/Linear_discriminant_analysis",
        "https://en.wikipedia.org/wiki/Principal_component_analysis",
        "https://en.wikipedia.org/wiki/Proper_generalized_decomposition",
        "https://en.wikipedia.org/wiki/Structured_prediction",
        "https://en.wikipedia.org/wiki/Graphical_model",
        "https://en.wikipedia.org/wiki/Bayesian_network",
        "https://en.wikipedia.org/wiki/Conditional_random_field",
        "https://en.wikipedia.org/wiki/Hidden_Markov_model",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Local_outlier_factor",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Autoencoder",
        "https://en.wikipedia.org/wiki/Cognitive_computing",
        "https://en.wikipedia.org/wiki/Deep_learning",
        "https://en.wikipedia.org/wiki/DeepDream",
        "https://en.wikipedia.org/wiki/Multilayer_perceptron",
        "https://en.wikipedia.org/wiki/Recurrent_neural_network",
        "https://en.wikipedia.org/wiki/Gated_recurrent_unit",
        "https://en.wikipedia.org/wiki/Echo_state_network",
        "https://en.wikipedia.org/wiki/Restricted_Boltzmann_machine",
        "https://en.wikipedia.org/wiki/Generative_adversarial_network",
        "https://en.wikipedia.org/wiki/Convolutional_neural_network",
        "https://en.wikipedia.org/wiki/Vision_transformer",
        "https://en.wikipedia.org/wiki/Spiking_neural_network",
        "https://en.wikipedia.org/wiki/Memtransistor",
        "https://en.wikipedia.org/wiki/Electrochemical_RAM",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Temporal_difference_learning",
        "https://en.wikipedia.org/wiki/Kernel_machines",
        "https://en.wikipedia.org/wiki/Computational_learning_theory",
        "https://en.wikipedia.org/wiki/Empirical_risk_minimization",
        "https://en.wikipedia.org/wiki/Occam_learning",
        "https://en.wikipedia.org/wiki/Probably_approximately_correct_learning",
        "https://en.wikipedia.org/wiki/Statistical_learning_theory",
        "https://en.wikipedia.org/wiki/Conference_on_Neural_Information_Processing_Systems",
        "https://en.wikipedia.org/wiki/International_Conference_on_Machine_Learning",
        "https://en.wikipedia.org/wiki/Journal_of_Machine_Learning_Research",
        "https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Outline_of_machine_learning",
        "https://en.wikipedia.org/wiki/Automated_machine_learning",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Anomaly_detection",
        "https://en.wikipedia.org/wiki/Generative_topographic_map",
        "https://en.wikipedia.org/wiki/Multivariate_analysis",
        "https://en.wikipedia.org/wiki/Radial_basis_function_network",
        "https://en.wikipedia.org/wiki/Weak_supervision",
        "https://en.wikipedia.org/wiki/Pattern_classification",
        "https://en.wikipedia.org/wiki/Geoffrey_Hinton",
        "https://en.wikipedia.org/wiki/MIT_Press",
        "https://en.wikipedia.org/wiki/Neural_network",
        "https://en.wikipedia.org/wiki/Differentiable_function",
        "https://en.wikipedia.org/wiki/Differentiable_programming",
        "https://en.wikipedia.org/wiki/Neural_Turing_machine",
        "https://en.wikipedia.org/wiki/Differentiable_neural_computer",
        "https://en.wikipedia.org/wiki/Automatic_differentiation",
        "https://en.wikipedia.org/wiki/Neuromorphic_engineering",
        "https://en.wikipedia.org/wiki/Cable_theory",
        "https://en.wikipedia.org/wiki/Pattern_recognition",
        "https://en.wikipedia.org/wiki/Computational_learning_theory",
        "https://en.wikipedia.org/wiki/Tensor_calculus",
        "https://en.wikipedia.org/wiki/Gradient_descent",
        "https://en.wikipedia.org/wiki/Stochastic_gradient_descent",
        "https://en.wikipedia.org/wiki/Cluster_analysis",
        "https://en.wikipedia.org/wiki/Regression_analysis",
        "https://en.wikipedia.org/wiki/Overfitting",
        "https://en.wikipedia.org/wiki/Adversarial_machine_learning",
        "https://en.wikipedia.org/wiki/Convolution",
        "https://en.wikipedia.org/wiki/Loss_functions_for_classification",
        "https://en.wikipedia.org/wiki/Backpropagation",
        "https://en.wikipedia.org/wiki/Batch_normalization",
        "https://en.wikipedia.org/wiki/Activation_function",
        "https://en.wikipedia.org/wiki/Softmax_function",
        "https://en.wikipedia.org/wiki/Sigmoid_function",
        "https://en.wikipedia.org/wiki/Data_augmentation",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Deep_learning",
        "https://en.wikipedia.org/wiki/Computational_science",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Graphcore",
        "https://en.wikipedia.org/wiki/Tensor_Processing_Unit",
        "https://en.wikipedia.org/wiki/Vision_processing_unit",
        "https://en.wikipedia.org/wiki/Memristor",
        "https://en.wikipedia.org/wiki/SpiNNaker",
        "https://en.wikipedia.org/wiki/TensorFlow",
        "https://en.wikipedia.org/wiki/PyTorch",
        "https://en.wikipedia.org/wiki/Keras",
        "https://en.wikipedia.org/wiki/AlexNet",
        "https://en.wikipedia.org/wiki/WaveNet",
        "https://en.wikipedia.org/wiki/Human_image_synthesis",
        "https://en.wikipedia.org/wiki/Handwriting_recognition",
        "https://en.wikipedia.org/wiki/Optical_character_recognition",
        "https://en.wikipedia.org/wiki/Speech_synthesis",
        "https://en.wikipedia.org/wiki/Speech_recognition",
        "https://en.wikipedia.org/wiki/Facial_recognition_system",
        "https://en.wikipedia.org/wiki/AlphaFold",
        "https://en.wikipedia.org/wiki/Word2vec",
        "https://en.wikipedia.org/wiki/Neural_machine_translation",
        "https://en.wikipedia.org/wiki/Project_Debater",
        "https://en.wikipedia.org/wiki/AlphaGo",
        "https://en.wikipedia.org/wiki/AlphaZero",
        "https://en.wikipedia.org/wiki/OpenAI_Five",
        "https://en.wikipedia.org/wiki/MuZero",
        "https://en.wikipedia.org/wiki/Action_selection",
        "https://en.wikipedia.org/wiki/Robot_control",
        "https://en.wikipedia.org/wiki/Ian_Goodfellow",
        "https://en.wikipedia.org/wiki/Yoshua_Bengio",
        "https://en.wikipedia.org/wiki/Geoffrey_Hinton",
        "https://en.wikipedia.org/wiki/Yann_LeCun",
        "https://en.wikipedia.org/wiki/Andrew_Ng",
        "https://en.wikipedia.org/wiki/Demis_Hassabis",
        "https://en.wikipedia.org/wiki/DeepMind",
        "https://en.wikipedia.org/wiki/OpenAI",
        "https://en.wikipedia.org/wiki/MIT_Computer_Science_and_Artificial_Intelligence_Laboratory",
        "https://en.wikipedia.org/wiki/Google_Brain",
        "https://en.wikipedia.org/wiki/Unsupervised_learning",
        "https://en.wikipedia.org/wiki/Unsupervised_learning",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}