{
    "url": "https://en.wikipedia.org/wiki/Requirements_analysis",
    "title": "Requirements analysis",
    "table_of_contents": [
        "1 Overview",
        "2 Requirements analysis topics",
        "2.1 Stakeholder identification",
        "2.2 Joint Requirements Development (JRD) Sessions",
        "2.3 Contract-style requirement lists",
        "2.3.1 Strengths",
        "2.3.2 Weaknesses",
        "2.3.3 Alternative to requirement lists",
        "2.4 Measurable goals",
        "2.5 Prototypes",
        "2.6 Use cases",
        "2.7 Requirements specification",
        "3 Types of requirements",
        "4 Requirements analysis issues",
        "4.1 Stakeholder issues",
        "4.2 Engineer/developer issues",
        "4.3 Attempted solutions",
        "5 See also",
        "6 References",
        "7 Bibliography",
        "8 External links"
    ],
    "content": [
        {
            "image3": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/a/a1/SE_Process.jpg/640px-SE_Process.jpg",
                "caption": "\n\t\tA systems engineering perspective on requirements analysis.[1]\n"
            },
            "paragraph1": "In systems engineering and software engineering, requirements analysis focuses on the tasks that determine the needs or conditions to meet the new or altered product or project, taking account of the possibly conflicting requirements of the various stakeholders, analyzing, documenting, validating and managing software or system requirements.\n",
            "paragraph2": "Requirements analysis is critical to the success or failure of a systems or software project. The requirements should be documented, actionable, measurable, testable, traceable, related to identified business needs or opportunities, and defined to a level of detail sufficient for system design.\n"
        },
        {
            "title": "Overview",
            "paragraph1": "Conceptually, requirements analysis includes three types of activities:[citation needed]\n",
            "ul1": "Eliciting requirements: (e.g. the project charter or definition), business process documentation, and stakeholder interviews. This is sometimes also called requirements gathering or requirements discovery.\nRecording requirements: Requirements may be documented in various forms, usually including a summary list and may include natural-language documents, use cases, user stories, process specifications and a variety of models including data models.\nAnalyzing requirements: determining whether the stated requirements are clear, complete, unduplicated, concise, valid, consistent and unambiguous, and resolving any apparent conflicts.  Analyzing can also include sizing requirements.\n",
            "paragraph2": "Requirements analysis can be a long and tiring process during which many delicate psychological skills are involved. New systems change the environment and relationships between people, so it is important to identify all the stakeholders, take into account all their needs and ensure they understand the implications of the new systems. Analysts can employ several techniques to elicit the requirements from the customer. These may include the development of scenarios (represented as user stories in agile methods), the identification of use cases, the use of workplace observation or ethnography,  holding interviews, or focus groups (more aptly named in this context as requirements workshops, or requirements review sessions) and creating requirements lists. Prototyping may be used to develop an example system that can be demonstrated to stakeholders.  Where necessary, the analyst will employ a combination of these methods to establish the exact requirements of the stakeholders, so that a system that meets the business needs is produced.[citation needed]  Requirements quality can be improved through these and other methods\n",
            "ul2": "Visualization. Using tools that promote better understanding of the desired end-product such as visualization and simulation.\nConsistent use of templates. Producing a consistent set of models and templates to document the requirements.\nDocumenting dependencies. Documenting dependencies and interrelationships among requirements, as well as any assumptions and congregations.\n"
        },
        {
            "title": "Requirements analysis topics",
            "subtitle1": "Stakeholder identification",
            "paragraph1": "See Stakeholder analysis for a discussion of people or organizations (legal entities such as companies, standards bodies) that have a valid interest in the system. They may be affected by it either directly or indirectly.\nA major new emphasis in the 1990s was a focus on the identification of stakeholders. It is increasingly recognized that stakeholders are not limited to the organization employing the analyst. Other stakeholders will include:\n",
            "ul1": "anyone who operates the system (normal and maintenance operators)\nanyone who benefits from the system (functional, political, financial and social beneficiaries)\nanyone involved in purchasing or procuring the system. In a mass-market product organization, product management, marketing and sometimes sales act as surrogate consumers (mass-market customers) to guide development of the product.\norganizations which regulate aspects of the system (financial, safety, and other regulators)\npeople or organizations opposed to the system (negative stakeholders; see also Misuse case)\norganizations responsible for systems which interface with the system under design.\nthose organizations who integrate horizontally with the organization for whom the analyst is designing the system.\n",
            "subtitle2": "Joint Requirements Development (JRD) Sessions",
            "paragraph2": "Requirements often have cross-functional implications that are unknown to individual stakeholders and often missed or incompletely defined during stakeholder interviews. These cross-functional implications can be elicited by conducting JRD sessions in a controlled environment, facilitated by a trained facilitator (Business Analyst), wherein stakeholders participate in discussions to elicit requirements, analyze their details and uncover cross-functional implications. A dedicated scribe should be present to document the discussion, freeing up the Business Analyst to lead the discussion in a direction that generates appropriate requirements which meet the session objective.\n",
            "paragraph3": "JRD Sessions are analogous to Joint Application Design Sessions. In the former, the sessions elicit requirements that guide design, whereas the latter elicit the specific design features to be implemented in satisfaction of elicited requirements.\n",
            "subtitle3": "Contract-style requirement lists",
            "paragraph4": "One traditional way of documenting requirements has been contract style requirement lists. In a complex system such requirements lists can run to hundreds of pages long.\n",
            "paragraph5": "An appropriate metaphor would be an extremely long shopping list. Such lists are very much out of favour in modern analysis; as they have proved spectacularly unsuccessful at achieving their aims[citation needed]; but they are still seen to this day.\n",
            "ul2": "Provides a checklist of requirements.\nProvide a contract between the project sponsor(s) and developers.\nFor a large system can provide a high level description from which lower-level requirements can be derived.\n",
            "ul3": "Such lists can run to hundreds of pages. They are not intended to serve as a reader-friendly description of the desired application.\nSuch requirements lists abstract all the requirements and so there is little context.  The Business Analyst may include context for requirements in accompanying design documentation.\nThis abstraction is not intended to describe how the requirements fit or work together.\nThe list may not reflect relationships and dependencies between requirements. While a list does make it easy to prioritize each individual item, removing one item out of context can render an entire use case or business requirement useless.\nThe list doesn't supplant the need to review requirements carefully with stakeholders in order to gain a better shared understanding of the implications for the design of the desired system / application.\nThis abstraction is not intended to describe how the requirements fit or work together.\nThe list may not reflect relationships and dependencies between requirements. While a list does make it easy to prioritize each individual item, removing one item out of context can render an entire use case or business requirement useless.\nThe list doesn't supplant the need to review requirements carefully with stakeholders in order to gain a better shared understanding of the implications for the design of the desired system / application.\nSimply creating a list does not guarantee its completeness. The Business Analyst must make a good faith effort to discover and collect a substantially comprehensive list, and rely on stakeholders to point out missing requirements.\nThese lists can create a false sense of mutual understanding between the stakeholders and developers; Business Analysts are critical to the translation process.\nIt is almost impossible to uncover all the functional requirements before the process of development and testing begins. If these lists are treated as an immutable contract, then requirements that emerge in the Development process may generate a controversial change request.\n",
            "paragraph6": "As an alternative to requirement lists, Agile Software Development uses User stories to suggest requirements in everyday language.\n",
            "subtitle4": "Measurable goals",
            "paragraph7": "Best practices take the composed list of requirements merely as clues and repeatedly ask \"why?\" until the actual business purposes are discovered. Stakeholders and developers can then devise tests to measure what level of each goal has been achieved thus far.  Such goals change more slowly than the long list of specific but unmeasured requirements. Once a small set of critical, measured goals has been established, rapid prototyping and short iterative development phases may proceed to deliver actual stakeholder value long before the project is half over.\n",
            "subtitle5": "Prototypes",
            "paragraph8": "A prototype is a computer program that exhibits a part of the properties of another computer program, allowing users to visualize an application that has not yet been constructed. A popular form of prototype is a mockup, which helps future users and other stakeholders to get an idea of what the system will look like. Prototypes make it easier to make design decisions, because aspects of the application can be seen and shared before the application is built. Major improvements in communication between users and developers were often seen with the introduction of prototypes. Early views of applications led to fewer changes later and hence reduced overall costs considerably.[citation needed]\n",
            "paragraph9": "Prototypes can be flat diagrams (often referred to as wireframes) or working applications using synthesized functionality. Wireframes are made in a variety of graphic design documents, and often remove all color from the design (i.e. use a greyscale color palette) in instances where the final software is expected to have graphic design applied to it. This helps to prevent confusion as to whether the prototype represents the final visual look and feel of the application.[citation needed]\n",
            "subtitle6": "Use cases",
            "paragraph10": "A use case is a structure for documenting the functional requirements for a system, usually involving software, whether that is new or being changed.  Each use case provides a set of scenarios that convey how the system should interact with a human user or another system, to achieve a specific business goal.  Use cases typically avoid technical jargon, preferring instead the language of the end-user or domain expert.  Use cases are often co-authored by requirements engineers and stakeholders.\n",
            "paragraph11": "Use cases are deceptively simple tools for describing the behavior of software or systems. A use case contains a textual description of the ways in which users are intended to work with the software or system. Use cases should not describe internal workings of the system, nor should they explain how that system will be implemented. Instead, they show the steps needed to perform a task without sequential assumptions.\n",
            "subtitle7": "Requirements specification",
            "paragraph12": "Requirements specification is the synthesis of discovery findings regarding current state business needs and the assessment of these needs to determine, and specify, what is required to meet the needs within the solution scope in  focus. Discovery, analysis and specification move the understanding from a current as-is state to a future to-be state. Requirements specification can cover the full breadth and depth of the future state to be realized, or it could target specific gaps to fill, such as priority software system bugs to fix and enhancements to make. Given that any large business process almost always employs software and data systems and technology, requirements specification is often associated with software system builds, purchases, cloud computing strategies, embedded software in products or devices, or other technologies. The broader definition of requirements specification includes or focuses on any solution strategy or component, such as training, documentation guides, personnel, marketing strategies, equipment, supplies, etc.\n"
        },
        {
            "title": "Types of requirements",
            "paragraph1": "Requirements are categorized in several ways. The following are common categorizations of requirements that relate to technical management:\n",
            "paragraph2": "Well-known requirements categorization models include FURPS and FURPS+, developed at Hewlett-Packard.\n"
        },
        {
            "title": "Requirements analysis issues",
            "subtitle1": "Stakeholder issues",
            "paragraph1": "Steve McConnell, in his book Rapid Development, details a number of ways users can inhibit requirements gathering:\n",
            "ul1": "Users do not understand what they want or users don't have a clear idea of their requirements\nUsers will not commit to a set of written requirements\nUsers insist on new requirements after the cost and schedule have been fixed\nCommunication with users is slow\nUsers often do not participate in reviews or are incapable of doing so\nUsers are technically unsophisticated\nUsers do not understand the development process\nUsers do not know about present technology\n",
            "paragraph2": "This may lead to the situation where user requirements keep changing even when system or product development has been started.\n",
            "subtitle2": "Engineer/developer issues",
            "paragraph3": "Possible problems caused by engineers and developers during requirements analysis are:\n",
            "ul2": "A natural inclination towards writing code can lead to implementation beginning before the requirements analysis is complete, potentially resulting in code changes to meet actual requirements once they are known.\nTechnical personnel and end-users may have different vocabularies. Consequently, they may wrongly believe they are in perfect agreement until the finished product is supplied.\nEngineers and developers may try to make the requirements fit an existing system or model, rather than develop a system specific to the needs of the client.\n",
            "subtitle3": "Attempted solutions",
            "paragraph4": "One attempted solution to communications problems has been to employ specialists in business or system analysis.\n",
            "paragraph5": "Techniques introduced in the 1990s like prototyping, Unified Modeling Language (UML), use cases, and agile software development are also intended as solutions to problems encountered with previous methods.\n",
            "paragraph6": "Also, a new class of application simulation or application definition tools have entered the market. These tools are designed to bridge the communication gap between business users and the IT organization — and also to allow applications to be 'test marketed' before any code is produced. The best of these tools offer:\n",
            "ul3": "electronic whiteboards to sketch application flows and test alternatives\nability to capture business logic and data needs\nability to generate high fidelity prototypes that closely imitate the final application\ninteractivity\ncapability to add contextual requirements and other comments\nability for remote and distributed users to run and interact with the simulation\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Requirements_engineering",
        "https://en.wikipedia.org/wiki/Systems_engineering",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_testing",
        "https://en.wikipedia.org/wiki/Debugging",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Cleanroom_software_engineering",
        "https://en.wikipedia.org/wiki/Incremental_build_model",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Spiral_model",
        "https://en.wikipedia.org/wiki/Waterfall_model",
        "https://en.wikipedia.org/wiki/Software_development_methodology",
        "https://en.wikipedia.org/wiki/Adaptive_software_development",
        "https://en.wikipedia.org/wiki/DevOps",
        "https://en.wikipedia.org/wiki/Disciplined_agile_delivery",
        "https://en.wikipedia.org/wiki/Dynamic_systems_development_method",
        "https://en.wikipedia.org/wiki/Iterative_and_incremental_development",
        "https://en.wikipedia.org/wiki/Lean_software_development",
        "https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework",
        "https://en.wikipedia.org/wiki/Personal_software_process",
        "https://en.wikipedia.org/wiki/Rapid_application_development",
        "https://en.wikipedia.org/wiki/Rational_Unified_Process",
        "https://en.wikipedia.org/wiki/Scaled_agile_framework",
        "https://en.wikipedia.org/wiki/SEMAT",
        "https://en.wikipedia.org/wiki/Team_software_process",
        "https://en.wikipedia.org/wiki/OpenUP",
        "https://en.wikipedia.org/wiki/Unified_Process",
        "https://en.wikipedia.org/wiki/Extreme_programming",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_documentation",
        "https://en.wikipedia.org/wiki/Software_quality_assurance",
        "https://en.wikipedia.org/wiki/Software_project_management",
        "https://en.wikipedia.org/wiki/User_experience",
        "https://en.wikipedia.org/wiki/Continuous_integration",
        "https://en.wikipedia.org/wiki/Continuous_delivery",
        "https://en.wikipedia.org/wiki/Pair_programming",
        "https://en.wikipedia.org/wiki/Specification_by_example",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Debugger",
        "https://en.wikipedia.org/wiki/Graphical_user_interface_builder",
        "https://en.wikipedia.org/wiki/UML_tool",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Build_automation",
        "https://en.wikipedia.org/wiki/Infrastructure_as_code",
        "https://en.wikipedia.org/wiki/A_Guide_to_the_Business_Analysis_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration",
        "https://en.wikipedia.org/wiki/IEEE_Standards_Association",
        "https://en.wikipedia.org/wiki/ISO_9001",
        "https://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/ITIL",
        "https://en.wikipedia.org/wiki/International_Requirements_Engineering_Board",
        "https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Glossary_of_computer_science",
        "https://en.wikipedia.org/wiki/Glossary_of_electrical_and_electronics_engineering",
        "https://en.wikipedia.org/wiki/Outline_of_software_development",
        "https://en.wikipedia.org/wiki/Systems_engineering",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Requirement",
        "https://en.wikipedia.org/wiki/Software_project_management",
        "https://en.wikipedia.org/wiki/Requirements_elicitation",
        "https://en.wikipedia.org/wiki/Use_case",
        "https://en.wikipedia.org/wiki/User_story",
        "https://en.wikipedia.org/wiki/User_story",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Use_case",
        "https://en.wikipedia.org/wiki/Ethnography",
        "https://en.wikipedia.org/wiki/Interview",
        "https://en.wikipedia.org/wiki/Focus_group",
        "https://en.wikipedia.org/wiki/Prototyping",
        "https://en.wikipedia.org/wiki/Stakeholder_analysis",
        "https://en.wikipedia.org/wiki/Misuse_case",
        "https://en.wikipedia.org/wiki/Horizontal_integration",
        "https://en.wikipedia.org/wiki/Facilitator",
        "https://en.wikipedia.org/wiki/Joint_application_design",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/User_stories",
        "https://en.wikipedia.org/wiki/Goal_modeling",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Mockup",
        "https://en.wikipedia.org/wiki/Graphic_design",
        "https://en.wikipedia.org/wiki/Use_case",
        "https://en.wikipedia.org/wiki/Domain_expert",
        "https://en.wikipedia.org/wiki/Software_requirements_specification",
        "https://en.wikipedia.org/wiki/Requirement",
        "https://en.wikipedia.org/wiki/Categorization",
        "https://en.wikipedia.org/wiki/Systems_architecture",
        "https://en.wikipedia.org/wiki/System",
        "https://en.wikipedia.org/wiki/Structure",
        "https://en.wikipedia.org/wiki/Behavior",
        "https://en.wikipedia.org/wiki/Functional_requirement",
        "https://en.wikipedia.org/wiki/FURPS",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Unified_Modeling_Language",
        "https://en.wikipedia.org/wiki/Use_case",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Application_Simulation_Software",
        "https://en.wikipedia.org/wiki/Electronic_whiteboard",
        "https://en.wikipedia.org/wiki/Business_analysis",
        "https://en.wikipedia.org/wiki/Business_Analysis_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Business_process_reengineering",
        "https://en.wikipedia.org/wiki/Creative_brief",
        "https://en.wikipedia.org/wiki/Data_modeling",
        "https://en.wikipedia.org/wiki/Design_brief",
        "https://en.wikipedia.org/wiki/Functional_requirements",
        "https://en.wikipedia.org/wiki/Information_technology",
        "https://en.wikipedia.org/wiki/Model_Transformation_Language",
        "https://en.wikipedia.org/wiki/Process_architecture",
        "https://en.wikipedia.org/wiki/Process_modeling",
        "https://en.wikipedia.org/wiki/Product_fit_analysis",
        "https://en.wikipedia.org/wiki/Requirements_elicitation",
        "https://en.wikipedia.org/wiki/Requirements_Engineering_Specialist_Group",
        "https://en.wikipedia.org/wiki/Requirements_management",
        "https://en.wikipedia.org/wiki/Requirements_Traceability",
        "https://en.wikipedia.org/wiki/Search_Based_Software_Engineering",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Software_requirements",
        "https://en.wikipedia.org/wiki/Software_Requirements_Specification",
        "https://en.wikipedia.org/wiki/Systems_analysis",
        "https://en.wikipedia.org/wiki/System_requirements",
        "https://en.wikipedia.org/wiki/System_requirements_specification",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/International_Conference_on_Software_Engineering",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/ACM_Computing_Classification_System",
        "https://en.wikipedia.org/wiki/Computer_hardware",
        "https://en.wikipedia.org/wiki/Printed_circuit_board",
        "https://en.wikipedia.org/wiki/Peripheral",
        "https://en.wikipedia.org/wiki/Integrated_circuit",
        "https://en.wikipedia.org/wiki/Very_Large_Scale_Integration",
        "https://en.wikipedia.org/wiki/System_on_a_chip",
        "https://en.wikipedia.org/wiki/Green_computing",
        "https://en.wikipedia.org/wiki/Electronic_design_automation",
        "https://en.wikipedia.org/wiki/Hardware_acceleration",
        "https://en.wikipedia.org/wiki/Computer_architecture",
        "https://en.wikipedia.org/wiki/Embedded_system",
        "https://en.wikipedia.org/wiki/Dependability",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Network_architecture",
        "https://en.wikipedia.org/wiki/Network_protocol",
        "https://en.wikipedia.org/wiki/Networking_hardware",
        "https://en.wikipedia.org/wiki/Network_scheduler",
        "https://en.wikipedia.org/wiki/Network_performance",
        "https://en.wikipedia.org/wiki/Network_service",
        "https://en.wikipedia.org/wiki/Middleware",
        "https://en.wikipedia.org/wiki/Virtual_machine",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Software_quality",
        "https://en.wikipedia.org/wiki/Programming_language_theory",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Programming_paradigm",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Compiler_construction",
        "https://en.wikipedia.org/wiki/Modeling_language",
        "https://en.wikipedia.org/wiki/Software_framework",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_repository",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Programming_team",
        "https://en.wikipedia.org/wiki/Theory_of_computation",
        "https://en.wikipedia.org/wiki/Model_of_computation",
        "https://en.wikipedia.org/wiki/Formal_language",
        "https://en.wikipedia.org/wiki/Automata_theory",
        "https://en.wikipedia.org/wiki/Computability_theory",
        "https://en.wikipedia.org/wiki/Computational_complexity_theory",
        "https://en.wikipedia.org/wiki/Logic_in_computer_science",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Algorithm_design",
        "https://en.wikipedia.org/wiki/Analysis_of_algorithms",
        "https://en.wikipedia.org/wiki/Algorithmic_efficiency",
        "https://en.wikipedia.org/wiki/Randomized_algorithm",
        "https://en.wikipedia.org/wiki/Computational_geometry",
        "https://en.wikipedia.org/wiki/Discrete_mathematics",
        "https://en.wikipedia.org/wiki/Probability",
        "https://en.wikipedia.org/wiki/Statistics",
        "https://en.wikipedia.org/wiki/Mathematical_software",
        "https://en.wikipedia.org/wiki/Information_theory",
        "https://en.wikipedia.org/wiki/Mathematical_analysis",
        "https://en.wikipedia.org/wiki/Numerical_analysis",
        "https://en.wikipedia.org/wiki/Theoretical_computer_science",
        "https://en.wikipedia.org/wiki/Information_system",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Computer_data_storage",
        "https://en.wikipedia.org/wiki/Enterprise_information_system",
        "https://en.wikipedia.org/wiki/Social_software",
        "https://en.wikipedia.org/wiki/Geographic_information_system",
        "https://en.wikipedia.org/wiki/Decision_support_system",
        "https://en.wikipedia.org/wiki/Process_control",
        "https://en.wikipedia.org/wiki/Multimedia_database",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Digital_library",
        "https://en.wikipedia.org/wiki/Computing_platform",
        "https://en.wikipedia.org/wiki/Digital_marketing",
        "https://en.wikipedia.org/wiki/World_Wide_Web",
        "https://en.wikipedia.org/wiki/Information_retrieval",
        "https://en.wikipedia.org/wiki/Computer_security",
        "https://en.wikipedia.org/wiki/Cryptography",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Intrusion_detection_system",
        "https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure",
        "https://en.wikipedia.org/wiki/Network_security",
        "https://en.wikipedia.org/wiki/Information_security",
        "https://en.wikipedia.org/wiki/Application_security",
        "https://en.wikipedia.org/wiki/Interaction_design",
        "https://en.wikipedia.org/wiki/Social_computing",
        "https://en.wikipedia.org/wiki/Ubiquitous_computing",
        "https://en.wikipedia.org/wiki/Computer_accessibility",
        "https://en.wikipedia.org/wiki/Concurrent_computing",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Distributed_computing",
        "https://en.wikipedia.org/wiki/Multiprocessing",
        "https://en.wikipedia.org/wiki/Artificial_intelligence",
        "https://en.wikipedia.org/wiki/Natural_language_processing",
        "https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning",
        "https://en.wikipedia.org/wiki/Computer_vision",
        "https://en.wikipedia.org/wiki/Automated_planning_and_scheduling",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Control_theory",
        "https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Distributed_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Machine_learning",
        "https://en.wikipedia.org/wiki/Supervised_learning",
        "https://en.wikipedia.org/wiki/Unsupervised_learning",
        "https://en.wikipedia.org/wiki/Reinforcement_learning",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/Computer_animation",
        "https://en.wikipedia.org/wiki/Photo_manipulation",
        "https://en.wikipedia.org/wiki/Graphics_processing_unit",
        "https://en.wikipedia.org/wiki/Mixed_reality",
        "https://en.wikipedia.org/wiki/Virtual_reality",
        "https://en.wikipedia.org/wiki/Image_compression",
        "https://en.wikipedia.org/wiki/Solid_modeling",
        "https://en.wikipedia.org/wiki/Enterprise_software",
        "https://en.wikipedia.org/wiki/Computational_mathematics",
        "https://en.wikipedia.org/wiki/Computational_physics",
        "https://en.wikipedia.org/wiki/Computational_chemistry",
        "https://en.wikipedia.org/wiki/Computational_biology",
        "https://en.wikipedia.org/wiki/Computational_social_science",
        "https://en.wikipedia.org/wiki/Computational_engineering",
        "https://en.wikipedia.org/wiki/Health_informatics",
        "https://en.wikipedia.org/wiki/Digital_art",
        "https://en.wikipedia.org/wiki/Electronic_publishing",
        "https://en.wikipedia.org/wiki/Cyberwarfare",
        "https://en.wikipedia.org/wiki/Electronic_voting",
        "https://en.wikipedia.org/wiki/Video_game",
        "https://en.wikipedia.org/wiki/Word_processor",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Educational_technology",
        "https://en.wikipedia.org/wiki/Document_management_system",
        "https://en.wikipedia.org/wiki/Outline_of_computer_science",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Computer_programming",
        "https://en.wikipedia.org/wiki/DevOps",
        "https://en.wikipedia.org/wiki/Requirements_engineering",
        "https://en.wikipedia.org/wiki/Site_reliability_engineering",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Software_testing",
        "https://en.wikipedia.org/wiki/Systems_analysis",
        "https://en.wikipedia.org/wiki/Formal_methods",
        "https://en.wikipedia.org/wiki/Data_modeling",
        "https://en.wikipedia.org/wiki/Enterprise_architecture",
        "https://en.wikipedia.org/wiki/Functional_specification",
        "https://en.wikipedia.org/wiki/Modeling_language",
        "https://en.wikipedia.org/wiki/Programming_paradigm",
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Software_archaeology",
        "https://en.wikipedia.org/wiki/Software_architecture",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Software_quality",
        "https://en.wikipedia.org/wiki/Software_quality_assurance",
        "https://en.wikipedia.org/wiki/Software_verification_and_validation",
        "https://en.wikipedia.org/wiki/Structured_analysis",
        "https://en.wikipedia.org/wiki/Essential_Systems_Analysis",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Systems_development_life_cycle",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Enterprise_Unified_Process",
        "https://en.wikipedia.org/wiki/Executable_UML",
        "https://en.wikipedia.org/wiki/Incremental_build_model",
        "https://en.wikipedia.org/wiki/Iterative_and_incremental_development",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Rapid_application_development",
        "https://en.wikipedia.org/wiki/Unified_Process",
        "https://en.wikipedia.org/wiki/Spiral_model",
        "https://en.wikipedia.org/wiki/Waterfall_model",
        "https://en.wikipedia.org/wiki/Extreme_programming",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration",
        "https://en.wikipedia.org/wiki/Data_model",
        "https://en.wikipedia.org/wiki/Function_model",
        "https://en.wikipedia.org/wiki/Information_model",
        "https://en.wikipedia.org/wiki/Metamodeling",
        "https://en.wikipedia.org/wiki/Object_model",
        "https://en.wikipedia.org/wiki/Systems_modeling",
        "https://en.wikipedia.org/wiki/View_model",
        "https://en.wikipedia.org/wiki/IDEF",
        "https://en.wikipedia.org/wiki/Unified_Modeling_Language",
        "https://en.wikipedia.org/wiki/Universal_Systems_Language",
        "https://en.wikipedia.org/wiki/Systems_Modeling_Language",
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Computer_engineering",
        "https://en.wikipedia.org/wiki/Information_science",
        "https://en.wikipedia.org/wiki/Project_management",
        "https://en.wikipedia.org/wiki/Risk_management",
        "https://en.wikipedia.org/wiki/Systems_engineering",
        "https://en.wikipedia.org/wiki/Systems_engineering",
        "https://en.wikipedia.org/wiki/Aerospace_engineering",
        "https://en.wikipedia.org/wiki/Biological_systems_engineering",
        "https://en.wikipedia.org/wiki/Configuration_management",
        "https://en.wikipedia.org/wiki/Earth_systems_engineering_and_management",
        "https://en.wikipedia.org/wiki/Electrical_engineering",
        "https://en.wikipedia.org/wiki/Enterprise_systems_engineering",
        "https://en.wikipedia.org/wiki/Performance_engineering",
        "https://en.wikipedia.org/wiki/Reliability_engineering",
        "https://en.wikipedia.org/wiki/Safety_engineering",
        "https://en.wikipedia.org/wiki/Requirements_engineering",
        "https://en.wikipedia.org/wiki/Functional_specification",
        "https://en.wikipedia.org/wiki/System_integration",
        "https://en.wikipedia.org/wiki/Verification_and_validation",
        "https://en.wikipedia.org/wiki/Design_review",
        "https://en.wikipedia.org/wiki/Business_process",
        "https://en.wikipedia.org/wiki/System",
        "https://en.wikipedia.org/wiki/System_lifecycle",
        "https://en.wikipedia.org/wiki/Systems_development_life_cycle",
        "https://en.wikipedia.org/wiki/Function_model",
        "https://en.wikipedia.org/wiki/IDEF",
        "https://en.wikipedia.org/wiki/Mathematical_optimization",
        "https://en.wikipedia.org/wiki/Quality_function_deployment",
        "https://en.wikipedia.org/wiki/System_dynamics",
        "https://en.wikipedia.org/wiki/Systems_Modeling_Language",
        "https://en.wikipedia.org/wiki/Systems_analysis",
        "https://en.wikipedia.org/wiki/Systems_modeling",
        "https://en.wikipedia.org/wiki/Work_breakdown_structure",
        "https://en.wikipedia.org/wiki/Ruzena_Bajcsy",
        "https://en.wikipedia.org/wiki/Wernher_von_Braun",
        "https://en.wikipedia.org/wiki/Kathleen_Carley",
        "https://en.wikipedia.org/wiki/Harold_Chestnut",
        "https://en.wikipedia.org/wiki/Wolt_Fabrycky",
        "https://en.wikipedia.org/wiki/Barbara_Grosz",
        "https://en.wikipedia.org/wiki/Arthur_David_Hall_III",
        "https://en.wikipedia.org/wiki/Derek_Hitchins",
        "https://en.wikipedia.org/wiki/Radhika_Nagpal",
        "https://en.wikipedia.org/wiki/Simon_Ramo",
        "https://en.wikipedia.org/wiki/Joseph_Francis_Shea",
        "https://en.wikipedia.org/wiki/Katia_Sycara",
        "https://en.wikipedia.org/wiki/Control_engineering",
        "https://en.wikipedia.org/wiki/Computer_engineering",
        "https://en.wikipedia.org/wiki/Industrial_engineering",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Project_management",
        "https://en.wikipedia.org/wiki/Quality_management",
        "https://en.wikipedia.org/wiki/Risk_management",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}