{
    "url": "https://en.wikipedia.org/wiki/Fuzzy_systems",
    "title": "Fuzzy control system",
    "table_of_contents": [
        "1 Overview",
        "2 History and applications",
        "3 Fuzzy sets",
        "3.1 Fuzzy control in detail",
        "3.2 Building a fuzzy controller",
        "4 Antilock brakes",
        "5 Logical interpretation of fuzzy control",
        "6 Fuzzy qualitative simulation",
        "7 Applications",
        "8 See also",
        "9 References",
        "10 Further reading",
        "11 External links"
    ],
    "content": [
        {
            "paragraph1": "A fuzzy control system is a control system based on fuzzy logicâ€”a mathematical system that analyzes analog input values in terms of  logical variables that take on continuous values between 0 and 1, in contrast to classical or digital logic, which operates on discrete values of either 1 or 0 (true or false, respectively).\n"
        },
        {
            "title": "Overview",
            "paragraph1": "Fuzzy logic is widely used in machine control. The term  \"fuzzy\" refers to the fact that the logic involved can deal with concepts that cannot be expressed as the \"true\" or \"false\" but rather as \"partially true\".  Although alternative approaches such as genetic algorithms and neural networks can perform just as well as fuzzy logic in many cases, fuzzy logic has the advantage that the solution to the problem can be cast in terms that human operators can understand, so that their experience can be used in the design of the controller.  This makes it easier to mechanize tasks that are already successfully performed by humans.\n"
        },
        {
            "title": "History and applications",
            "paragraph1": "Fuzzy logic was proposed by Lotfi A. Zadeh of the University of California at Berkeley in a 1965 paper. He elaborated on his ideas in a 1973 paper that introduced the concept of \"linguistic variables\", which in this article equates to a variable defined as a fuzzy set. Other research followed, with the first industrial application, a cement kiln built in Denmark, coming on line in 1975.\n",
            "paragraph2": "Fuzzy systems were initially implemented in Japan.\n",
            "ul1": "Interest in fuzzy systems was sparked by Seiji Yasunobu and Soji Miyamoto of Hitachi, who in 1985 provided simulations that demonstrated the feasibility of fuzzy control systems for the Sendai Subway. Their ideas were adopted, and fuzzy systems were used to control accelerating, braking, and stopping when the Namboku Line opened in 1987.\nIn 1987, Takeshi Yamakawa demonstrated the use of fuzzy control, through a set of simple dedicated fuzzy logic chips, in an \"inverted pendulum\" experiment. This is a classic control problem, in which a vehicle tries to keep a pole mounted on its top by a hinge upright by moving back and forth. Yamakawa subsequently made the demonstration more sophisticated by mounting a wine glass containing water and even a live mouse to the top of the pendulum: the system maintained stability in both cases. Yamakawa eventually went on to organize his own fuzzy-systems research lab to help exploit his patents in the field.\nJapanese engineers subsequently developed a wide range of fuzzy systems for both industrial and consumer applications. In 1988 Japan established the Laboratory for International Fuzzy Engineering (LIFE), a cooperative arrangement between 48 companies to pursue fuzzy research. The automotive company Volkswagen was the only foreign corporate member of LIFE, dispatching a researcher for a duration of three years.\nJapanese consumer goods often incorporate fuzzy systems. Matsushita vacuum cleaners use microcontrollers running fuzzy algorithms to interrogate dust sensors and adjust suction power accordingly. Hitachi washing machines use fuzzy controllers to load-weight, fabric-mix, and dirt sensors and automatically set the wash cycle for the best use of power, water, and detergent.\nCanon developed an autofocusing camera that uses a charge-coupled device (CCD) to measure the clarity of the image in six regions of its field of view and use the information provided to determine if the image is in focus. It also tracks the rate of change of lens movement during focusing, and controls its speed to prevent overshoot. The camera's fuzzy control system uses 12 inputs: 6 to obtain the current clarity data provided by the CCD and 6 to measure the rate of change of lens movement. The output is the position of the lens. The fuzzy control system uses 13 rules and requires 1.1 kilobytes of memory.\nAn industrial air conditioner designed by Mitsubishi uses 25 heating rules and 25 cooling rules. A temperature sensor provides input, with control outputs fed to an inverter, a compressor valve, and a fan motor. Compared to the previous design, the fuzzy controller heats and cools five times faster, reduces power consumption by 24%, increases temperature stability by a factor of two, and uses fewer sensors.\nOther applications investigated or implemented include: character and handwriting recognition; optical fuzzy systems; robots, including one for making Japanese flower arrangements; voice-controlled robot helicopters (hovering is a \"balancing act\" rather similar to the inverted pendulum problem); rehabilitation robotics to provide patient-specific solutions (e.g. to control heart rate and blood pressure [4]); control of flow of powders in film manufacture; elevator systems; and so on.\n",
            "paragraph3": "Work on fuzzy systems is also proceeding in the North America and Europe, although on a less extensive scale than in Japan.\n",
            "ul2": "The US Environmental Protection Agency has investigated fuzzy control for energy-efficient motors, and NASA has studied fuzzy control for automated space docking: simulations show that a fuzzy control system can greatly reduce fuel consumption.\nFirms such as Boeing, General Motors, Allen-Bradley, Chrysler, Eaton, and Whirlpool have worked on fuzzy logic for use in low-power refrigerators, improved automotive transmissions, and energy-efficient electric motors.\nIn 1995 Maytag introduced an \"intelligent\" dishwasher based on a fuzzy controller and a \"one-stop sensing module\" that combines a thermistor, for temperature measurement; a conductivity sensor, to measure detergent level from the ions present in the wash; a turbidity sensor that measures scattered and transmitted light to measure the soiling of the wash; and a magnetostrictive sensor to read spin rate. The system determines the optimum wash cycle for any load to obtain the best results with the least amount of energy, detergent, and water. It even adjusts for dried-on foods by tracking the last time the door was opened, and estimates the number of dishes by the number of times the door was opened.\nIn 2017 Xiera Technologies Inc. developed the first auto-tuner for the fuzzy logic controller's knowledge base known as edeX. This technology was tested by Mohawk College and was able to solve non-linear 2x2 and 3x3 multi-input multi-output problems.[5]\n",
            "paragraph4": "Research and development is also continuing on fuzzy applications in software, as opposed to firmware, design, including fuzzy expert systems and integration of fuzzy logic with neural-network and so-called adaptive \"genetic\" software systems, with the ultimate goal of building \"self-learning\" fuzzy-control systems. These systems can be employed to control complex, nonlinear dynamic plants, for example, human body.\n"
        },
        {
            "title": "Fuzzy sets",
            "paragraph1": "The input variables in a fuzzy control system are in general mapped by sets of membership functions similar to this, known as \"fuzzy sets\". The process of converting a crisp input value to a fuzzy value is called \"fuzzification\". The fuzzy logic based approach had been considered by designing two fuzzy systems, one for error heading angle and the other for velocity control.\n",
            "paragraph2": "A control system may also have various types of switch, or \"ON-OFF\", inputs along with its analog inputs, and such switch inputs of course will always have a truth value equal to either 1 or 0, but the scheme can deal with them as simplified fuzzy functions that happen to be either one value or another.\n",
            "paragraph3": "Given \"mappings\" of input variables into membership functions and truth values, the microcontroller then makes decisions for what action to take, based on a set of \"rules\", each of the form:\n",
            "paragraph4": "In this example, the two input variables are \"brake temperature\" and \"speed\" that have values defined as fuzzy sets. The output variable, \"brake pressure\" is also defined by a fuzzy set that can have values like \"static\" or \"slightly increased\" or \"slightly decreased\" etc.\n",
            "subtitle1": "Fuzzy control in detail",
            "paragraph5": "Fuzzy controllers are very simple conceptually. They consist of an input stage, a processing stage, and an output stage. The input stage maps sensor or other inputs, such as switches, thumbwheels, and so on, to the appropriate membership functions and truth values. The processing stage invokes each appropriate rule and generates a result for each, then combines the results of the rules. Finally, the output stage converts the combined result back into a specific control output value.\n",
            "paragraph6": "The most common shape of membership functions is triangular, although trapezoidal and bell curves are also used, but the shape is generally less important than the number of curves and their placement. From three to seven curves are generally appropriate to cover the required range of an input value, or the \"universe of discourse\" in fuzzy jargon.\n",
            "paragraph7": "As discussed earlier, the processing stage is based on a collection of logic rules in the form of IF-THEN statements, where the IF part is called the \"antecedent\" and the THEN part is called the \"consequent\". Typical fuzzy control systems have dozens of rules.\n",
            "paragraph8": "Consider a rule for a thermostat:\n",
            "paragraph9": "This rule uses the truth value of the \"temperature\" input, which is some truth value of \"cold\", to generate a result in the fuzzy set for the \"heater\" output, which is some value of \"high\". This result is used with the results of other rules to finally generate the crisp composite output. Obviously, the greater the truth value of \"cold\", the higher the truth value of \"high\", though this does not necessarily mean that the output itself will be set to \"high\" since this is only one rule among many. \nIn some cases, the membership functions can be modified by \"hedges\" that are equivalent to adverbs. Common hedges include \"about\", \"near\", \"close to\", \"approximately\", \"very\", \"slightly\", \"too\", \"extremely\", and \"somewhat\". These operations may have precise definitions, though the definitions can vary considerably between different implementations. \"Very\", for one example, squares membership functions; since the membership values are always less than 1, this narrows the membership function. \"Extremely\" cubes the values to give greater narrowing, while \"somewhat\" broadens the function by taking the square root.\n",
            "paragraph10": "In practice, the fuzzy rule sets usually have several antecedents that are combined using fuzzy operators, such as AND, OR, and NOT, though again the definitions tend to vary: AND, in one popular definition, simply uses the minimum weight of all the antecedents, while OR uses the maximum value. There is also a NOT operator that subtracts a membership function from 1 to give the \"complementary\" function.\n",
            "paragraph11": "There are several ways to define the result of a rule, but one of the most common and simplest is the \"max-min\" inference method, in which the output membership function is given the truth value generated by the premise.\n",
            "paragraph12": "Rules can be solved in parallel in hardware, or sequentially in software. The results of all the rules that have fired are \"defuzzified\" to a crisp value by one of several methods. There are dozens, in theory, each with various advantages or drawbacks.\n",
            "paragraph13": "The \"centroid\" method is very popular, in which the \"center of mass\" of the result provides the crisp value. Another approach is the \"height\" method, which takes the value of the biggest contributor. The centroid method favors the rule with the output of greatest area, while the height method obviously favors the rule with the greatest output value.\n",
            "paragraph14": "The diagram below demonstrates max-min inferencing and centroid defuzzification for a system with input variables \"x\", \"y\", and \"z\" and an output variable \"n\". Note that \"mu\" is standard fuzzy-logic nomenclature for \"truth value\":\n",
            "paragraph15": "",
            "image1": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/e/e3/Fuzzy_control_-_centroid_defuzzification_using_max-min_inferencing.png",
                "caption": "\n"
            },
            "paragraph16": "",
            "paragraph17": "Notice how each rule provides a result as a truth value of a particular membership function for the output variable. In centroid defuzzification the values are OR'd, that is, the maximum value is used and values are not added, and the results are then combined using a centroid calculation.\n",
            "paragraph18": "Fuzzy control system design is based on empirical methods, basically a methodical approach to trial-and-error. The general process is as follows:\n",
            "ul1": "Document the system's operational specifications and inputs and outputs.\nDocument the fuzzy sets for the inputs.\nDocument the rule set.\nDetermine the defuzzification method.\nRun through test suite to validate system, adjust details as required.\nComplete document and release to production.\n",
            "paragraph19": "As a general example, consider the design of a fuzzy controller for a steam turbine. The block diagram of this control system appears as follows:\n",
            "paragraph20": "\nThe input and output variables map into the following fuzzy set:\n",
            "paragraph21": "",
            "image2": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/4/47/Fuzzy_control_-_input_and_output_variables_mapped_into_a_fuzzy_set.png",
                "caption": "\n"
            },
            "paragraph22": "",
            "paragraph23": "The rule set includes such rules as:\n",
            "paragraph24": "In practice, the controller accepts the inputs and maps them into their membership functions and truth values. These mappings are then fed into the rules. If the rule specifies an AND relationship between the mappings of the two input variables, as the examples above do, the minimum of the two is used as the combined truth value; if an OR is specified, the maximum is used. The appropriate output state is selected and assigned a membership value at the truth level of the premise. The truth values are then defuzzified. \nFor example, assume the temperature is in the \"cool\" state, and the pressure is in the \"low\" and \"ok\" states. The pressure values ensure that only rules 2 and 3 fire:\n",
            "paragraph25": "",
            "image3": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/6/6e/Fuzzy_control_-_Rule_2_evaluation.png",
                "caption": "\n"
            },
            "paragraph26": "",
            "paragraph27": "",
            "image4": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/4/41/Fuzzy_control_-_Rule_3_evaluation.png",
                "caption": "\n"
            },
            "paragraph28": "",
            "paragraph29": "The two outputs are then defuzzified through centroid defuzzification: \n",
            "paragraph30": "The output value will adjust the throttle and then the control cycle will begin again to generate the next value .\n",
            "subtitle2": "Building a fuzzy controller",
            "paragraph31": "Consider implementing with a microcontroller chip a simple feedback controller:\n",
            "paragraph32": "",
            "image5": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/3/33/Fuzzy_control_system-feedback_controller.png",
                "caption": "\n"
            },
            "paragraph33": "",
            "paragraph34": "A fuzzy set is defined for the input error variable \"e\", and the derived change in error, \"delta\", as well as the \"output\", as follows:\n",
            "paragraph35": "If the error ranges from -1 to +1, with the analog-to-digital converter used having a resolution of 0.25, then the input variable's fuzzy set (which, in this case, also applies to the output variable) can be described very simply as a table, with the error / delta / output values in the top row and the truth values for each membership function arranged in rows beneath:\n",
            "paragraph36": "Suppose this fuzzy system has the following rule base:\n",
            "paragraph37": "These rules are typical for control applications in that the antecedents consist of the logical combination of the error and error-delta signals, while the consequent is a control command output. \nThe rule outputs can be defuzzified using a discrete centroid computation:\n",
            "paragraph38": "Now, suppose that at a given time: \n",
            "paragraph39": "Then this gives:\n",
            "paragraph40": "Plugging this into rule 1 gives:\n",
            "paragraph41": "-- where:\n",
            "ul2": "mu(1): Truth value of the result membership function for rule 1. In terms of a centroid calculation, this is the \"mass\" of this result for this discrete case.\noutput(1):  Value (for rule 1) where the result membership function (ZE) is maximum over the output variable fuzzy set range. That is, in terms of a centroid calculation, the location of the \"center of mass\" for this individual result. This value is independent of the value of \"mu\". It simply identifies the location of ZE along the output range.\n",
            "paragraph42": "The other rules give:\n",
            "paragraph43": "The centroid computation yields:\n",
            "paragraph44": "If you have problems figuring out the centroid equation, remember that a centroid is defined by summing all the moments (location times mass) around the center of gravity and equating the sum to zero. So if \n\n\n\n\nX\n\n0\n\n\n\n\n{\\displaystyle X_{0))\n\n is the center of gravity, \n\n\n\n\nX\n\ni\n\n\n\n\n{\\displaystyle X_{i))\n\n is the location of each mass, and \n\n\n\n\nM\n\ni\n\n\n\n\n{\\displaystyle M_{i))\n\n is each mass, this gives:\n",
            "paragraph45": "In our example, the values of mu correspond to the masses, and the values of X to location of the masses  \n(mu, however, only 'corresponds to the masses' if the initial 'mass' of the output functions are all the same/equivalent. If they are not the same, i.e. some are narrow triangles, while others maybe wide trapezoids or shouldered triangles, then the mass or area of the output function must be known or calculated. It is this mass that is then scaled by mu and multiplied by its location X_i).\n",
            "paragraph46": "This system can be implemented on a standard microprocessor, but dedicated fuzzy chips are now available. For example, Adaptive Logic INC of San Jose, California, sells a \"fuzzy chip\", the AL220, that can accept four analog inputs and generate four analog outputs. A block diagram of the chip is shown below:\n"
        },
        {
            "title": "Antilock brakes",
            "paragraph1": "As an example, consider an anti-lock braking system, directed by a microcontroller chip. The microcontroller has to make decisions based on brake temperature, speed, and other variables in the system.\n",
            "paragraph2": "The variable \"temperature\" in this system can be subdivided into a range of \"states\": \"cold\", \"cool\", \"moderate\", \"warm\", \"hot\", \"very hot\". The transition from one state to the next is hard to define.\n",
            "paragraph3": "An arbitrary static threshold might be set to divide \"warm\" from \"hot\". For example, at exactly 90 degrees, warm ends and hot begins. But this would result in a discontinuous change when the input value passed over that threshold. The transition wouldn't be smooth, as would be required in braking situations.\n",
            "paragraph4": "The way around this is to make the states fuzzy. That is, allow them to change gradually from one state to the next. In order to do this, there must be a dynamic relationship established between different factors.\n",
            "paragraph5": "Start by defining the input temperature states using \"membership functions\":\n",
            "paragraph6": "",
            "image1": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/1/1b/Fuzzy_control_-_definition_of_input_temperature_states_using_membership_functions.png",
                "caption": "\n"
            },
            "paragraph7": "",
            "paragraph8": "With this scheme, the input variable's state no longer jumps abruptly from one state to the next. Instead, as the temperature changes, it loses value in one membership function while gaining value in the next. In other words, its ranking in the category of cold decreases as it becomes more highly ranked in the warmer category.\n",
            "paragraph9": "At any sampled timeframe, the \"truth value\" of the brake temperature will almost always be in some degree part of two membership functions: i.e.: '0.6 nominal and 0.4 warm', or '0.7 nominal and 0.3 cool', and so on.\n",
            "paragraph10": "The above example demonstrates a simple application, using the abstraction of values from multiple values. This only represents one kind of data, however, in this case, temperature.\n",
            "paragraph11": "Adding additional sophistication to this braking system, could be done by additional factors such as traction, speed, inertia, set up in dynamic functions, according to the designed fuzzy system.\n"
        },
        {
            "title": "Logical interpretation of fuzzy control",
            "paragraph1": "In spite of the appearance there are several difficulties to give a rigorous logical interpretation of the IF-THEN rules. As an example, interpret a rule as  IF (temperature is \"cold\") THEN (heater is \"high\") by the first order formula Cold(x)â†’High(y) and assume that r is an input such that Cold(r) is false. Then the formula Cold(r)â†’High(t) is true for any t and therefore any t gives a correct control given r. A rigorous logical justification of fuzzy control is given in HÃ¡jek's book (see Chapter 7) where fuzzy control is represented as a theory of HÃ¡jek's basic logic.\n",
            "paragraph2": "In Gerla 2005  another logical approach to fuzzy control is proposed based on fuzzy logic programming: Denote by f the fuzzy function arising of an IF-THEN systems of rules. Then this system can be translated into a fuzzy program P containing a series of rules whose head is \"Good(x,y)\". The interpretation of this predicate in the least fuzzy Herbrand model of P coincides with f. This gives further useful tools to fuzzy control.\n"
        },
        {
            "title": "Fuzzy qualitative simulation",
            "paragraph1": "Before an Artificial Intelligence system is able to plan the action sequence, some kind of model is needed. For video games, the model is equal to the game rules. From the programming perspective, the game rules are implemented as a Physics engine which accepts an action from a player and calculates, if the action is valid. After the action was executed, the game is in follow up state. If the aim isn't only to play mathematical games but determine the actions for real world applications, the most obvious bottleneck is, that no game rules are available. The first step is to model the domain. System identification can be realized with precise mathematical equations or with Fuzzy rules.\n",
            "paragraph2": "Using Fuzzy logic and ANFIS systems (Adaptive network based fuzzy inference system) for creating the forward model for a domain has many disadvantages. A qualitative simulation isn't able to determine the correct follow up state, but the system will only guess what will happen if the action was taken. The Fuzzy qualitative simulation can't predict the exact numerical values, but it's using imprecise natural language to speculate about the future. It takes the current situation plus the actions from the past and generates the expected follow up state of the game.\n",
            "paragraph3": "The output of the ANFIS system isn't providing correct information, but only a Fuzzy set notation, for example [0,0.2,0.4,0]. After converting the set notation back into numerical values the accuracy get worse. This makes Fuzzy qualitative simulation a bad choice for practical applications.\n"
        },
        {
            "title": "Applications",
            "paragraph1": "Fuzzy control systems are suitable when the process complexity is high including uncertainty and nonlinear behavior, and there are no precise mathematical models available. Successful applications of fuzzy control systems have been reported worldwide mainly in Japan with pioneering solutions since 80s.\n",
            "paragraph2": "Some applications reported in the literature are:\n",
            "ul1": "Air conditioners[15]\nAutomatic focus systems in cameras[16]\nDomestic appliances (refrigerators, washing machines...)[17]\nControl and optimization of industrial processes and system[18][19][20][21][22]\nWriting systems[23]\nFuel efficiency in engines[24]\nEnvironment[25]\nExpert systems[26]\nDecision trees[27]\nRobotics[28][29]\nAutonomous vehicles[30][31][32]\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Control_system",
        "https://en.wikipedia.org/wiki/Fuzzy_logic",
        "https://en.wikipedia.org/wiki/Mathematics",
        "https://en.wikipedia.org/wiki/Analog_signal",
        "https://en.wikipedia.org/wiki/Mathematical_logic",
        "https://en.wikipedia.org/wiki/Digital_data",
        "https://en.wikipedia.org/wiki/Kiln",
        "https://en.wikipedia.org/wiki/Japan",
        "https://en.wikipedia.org/wiki/Hitachi",
        "https://en.wikipedia.org/wiki/Sendai_Subway",
        "https://en.wikipedia.org/wiki/Sendai_Subway_Namboku_Line",
        "https://en.wikipedia.org/wiki/Inverted_pendulum",
        "https://en.wikipedia.org/wiki/Suction_power",
        "https://en.wikipedia.org/wiki/Autofocus",
        "https://en.wikipedia.org/wiki/Air_conditioner",
        "https://en.wikipedia.org/wiki/Handwriting_recognition",
        "https://en.wikipedia.org/wiki/Voice_control",
        "https://en.wikipedia.org/wiki/US_Environmental_Protection_Agency",
        "https://en.wikipedia.org/wiki/Efficient_energy_use",
        "https://en.wikipedia.org/wiki/NASA",
        "https://en.wikipedia.org/wiki/Boeing",
        "https://en.wikipedia.org/wiki/General_Motors",
        "https://en.wikipedia.org/wiki/Chrysler",
        "https://en.wikipedia.org/wiki/Eaton_Corporation",
        "https://en.wikipedia.org/wiki/Whirlpool_Corporation",
        "https://en.wikipedia.org/wiki/Maytag",
        "https://en.wikipedia.org/wiki/Dishwasher",
        "https://en.wikipedia.org/wiki/Thermistor",
        "https://en.wikipedia.org/wiki/Firmware",
        "https://en.wikipedia.org/wiki/Expert_system",
        "https://en.wikipedia.org/wiki/Artificial_neural_network",
        "https://en.wikipedia.org/wiki/Genetic_algorithm",
        "https://en.wikipedia.org/wiki/Fuzzy_set",
        "https://en.wikipedia.org/wiki/Switch",
        "https://en.wikipedia.org/wiki/Truth_value",
        "https://en.wikipedia.org/wiki/Microcontroller",
        "https://en.wikipedia.org/wiki/Decision_making",
        "https://en.wikipedia.org/wiki/Universe_of_discourse",
        "https://en.wikipedia.org/wiki/Inference",
        "https://en.wikipedia.org/wiki/Temperature",
        "https://en.wikipedia.org/wiki/Speed",
        "https://en.wikipedia.org/wiki/Abstraction",
        "https://en.wikipedia.org/wiki/Inertia",
        "https://en.wikipedia.org/wiki/Herbrand_model",
        "https://en.wikipedia.org/wiki/Mathematical_model",
        "https://en.wikipedia.org/wiki/Physics_engine",
        "https://en.wikipedia.org/wiki/Mathematical_game",
        "https://en.wikipedia.org/wiki/System_identification",
        "https://en.wikipedia.org/wiki/Fuzzy_rule",
        "https://en.wikipedia.org/wiki/Adaptive_neuro_fuzzy_inference_system",
        "https://en.wikipedia.org/wiki/Natural_language",
        "https://en.wikipedia.org/wiki/Fuzzy_set",
        "https://en.wikipedia.org/wiki/Bayesian_inference",
        "https://en.wikipedia.org/wiki/Function_approximation",
        "https://en.wikipedia.org/wiki/Fuzzy_concept",
        "https://en.wikipedia.org/wiki/Fuzzy_markup_language",
        "https://en.wikipedia.org/wiki/Hysteresis",
        "https://en.wikipedia.org/wiki/Neural_networks",
        "https://en.wikipedia.org/wiki/Fuzzy_control_language",
        "https://en.wikipedia.org/wiki/Information_and_Computation",
        "https://en.wikipedia.org/wiki/Fuzzy_control_system",
        "https://en.wikipedia.org/wiki/Fuzzy_control_system",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}