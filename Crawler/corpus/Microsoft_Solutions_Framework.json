{
    "url": "https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework",
    "title": "Microsoft Solutions Framework",
    "table_of_contents": [
        "1 History",
        "2 Components",
        "3 References",
        "4 External links"
    ],
    "content": [
        {
            "paragraph1": "Microsoft Solutions Framework (MSF) is a set of principles, models, disciplines, concepts, and guidelines for delivering information technology services from Microsoft. MSF is not limited to developing applications only; it is also applicable to other IT projects like deployment, networking or infrastructure projects. MSF does not force the developer to use a specific methodology (such as the waterfall model or agile software development).\n"
        },
        {
            "title": "History",
            "paragraph1": "MSF was first introduced by Microsoft as version 1.0 in 1993, and a version 2.0 was released in 1997.\n",
            "paragraph2": "In 2002, MSF version 3.0 was released. It modified version 2.0 in the following ways:\n",
            "ul1": "Combined previously separate models into unified Team and Process models designed for application across a variety of project types including deployment, enterprise software integration, and development projects.\nFolded the Application Development and Infrastructure Deployment models into a single Process Model consisting of five phases.\nAdded Project Management and Readiness Management Disciplines.\nMade changes to the Risk Management Discipline.\nAdded links between MSF and the Microsoft Operations Framework (MOF).\nAdded an MSF Practitioner Program designed to train individuals to lead or participate in MSF projects.[1]\n",
            "paragraph3": "MSF version 4.0 was released in 2005. The release was a major refresh of the Process Model (now called the Governance Model) and the Team Model. MSF 4.0 included techniques for two separate methodologies: MSF for Agile Software Development (MSF Agile) and MSF for CMMI Process Improvement (MSF4CMMI).\n"
        },
        {
            "title": "Components",
            "paragraph1": "MSF 4.0 is a combination of a metamodel which can be used as a base for prescriptive software engineering processes, and two customizable and scalable software engineering processes.  The MSF metamodel consists of foundational principles, a team model and cycles and iterations.\n",
            "paragraph2": "MSF 4.0 provides a higher-level framework of guidance and principles which can be mapped to a variety of prescriptive process templates. It is structured in both descriptive and prescriptive methodologies. The descriptive component is called the MSF 4.0 metamodel, which is a theoretical description of the SDLC best practices for creating SDLC methodologies. Microsoft is of the opinion that organizations have diverging dynamics and contrary priorities during their software development; some organizations need a responsive and adaptable software development environment, while others need a standardized, repeatable and more controlled environment. To fulfill these needs, Microsoft represents the metamodel of MSF 4.0 in two prescriptive methodology templates that provide specific process guidance, for agile software development (MSF4ASD) and  for the Capability Maturity Model (MSF4CMMI). These software engineering processes can be modified and customized to the preferences of organization, customer and project team.\n",
            "paragraph3": "The MSF philosophy holds that there is no single structure or process that optimally applies to the requirements and environments for all sorts of projects. Therefore, MSF supports multiple process approaches, so it can be adapted to support any project, regardless of size or complexity. This flexibility means that it can support a wide degree of variation in the implementation of software engineering processes while retaining a set of core principles and mindsets.\n",
            "paragraph4": "The MSF process model consists of series of short development cycles and iterations. This model embraces rapid iterative development with continuous learning and refinement, due to progressive understanding of the business and project of the stakeholders. Identifying requirements, product development, and testing occur in overlapping iterations resulting in incremental completion to ensure a flow of value of the project. Each iteration has a different focus and result in a stable portion of the overall system.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_testing",
        "https://en.wikipedia.org/wiki/Debugging",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Cleanroom_software_engineering",
        "https://en.wikipedia.org/wiki/Incremental_build_model",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Spiral_model",
        "https://en.wikipedia.org/wiki/Waterfall_model",
        "https://en.wikipedia.org/wiki/Software_development_methodology",
        "https://en.wikipedia.org/wiki/Adaptive_software_development",
        "https://en.wikipedia.org/wiki/DevOps",
        "https://en.wikipedia.org/wiki/Disciplined_agile_delivery",
        "https://en.wikipedia.org/wiki/Dynamic_systems_development_method",
        "https://en.wikipedia.org/wiki/Iterative_and_incremental_development",
        "https://en.wikipedia.org/wiki/Lean_software_development",
        "https://en.wikipedia.org/wiki/Personal_software_process",
        "https://en.wikipedia.org/wiki/Rapid_application_development",
        "https://en.wikipedia.org/wiki/Rational_Unified_Process",
        "https://en.wikipedia.org/wiki/Scaled_agile_framework",
        "https://en.wikipedia.org/wiki/SEMAT",
        "https://en.wikipedia.org/wiki/Team_software_process",
        "https://en.wikipedia.org/wiki/OpenUP",
        "https://en.wikipedia.org/wiki/Unified_Process",
        "https://en.wikipedia.org/wiki/Extreme_programming",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_documentation",
        "https://en.wikipedia.org/wiki/Software_quality_assurance",
        "https://en.wikipedia.org/wiki/Software_project_management",
        "https://en.wikipedia.org/wiki/User_experience",
        "https://en.wikipedia.org/wiki/Continuous_integration",
        "https://en.wikipedia.org/wiki/Continuous_delivery",
        "https://en.wikipedia.org/wiki/Pair_programming",
        "https://en.wikipedia.org/wiki/Specification_by_example",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Debugger",
        "https://en.wikipedia.org/wiki/Graphical_user_interface_builder",
        "https://en.wikipedia.org/wiki/UML_tool",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Build_automation",
        "https://en.wikipedia.org/wiki/Infrastructure_as_code",
        "https://en.wikipedia.org/wiki/A_Guide_to_the_Business_Analysis_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration",
        "https://en.wikipedia.org/wiki/IEEE_Standards_Association",
        "https://en.wikipedia.org/wiki/ISO_9001",
        "https://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/ITIL",
        "https://en.wikipedia.org/wiki/International_Requirements_Engineering_Board",
        "https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Glossary_of_computer_science",
        "https://en.wikipedia.org/wiki/Glossary_of_electrical_and_electronics_engineering",
        "https://en.wikipedia.org/wiki/Outline_of_software_development",
        "https://en.wikipedia.org/wiki/Information_technology",
        "https://en.wikipedia.org/wiki/Microsoft",
        "https://en.wikipedia.org/wiki/Methodology",
        "https://en.wikipedia.org/wiki/Waterfall_model",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration",
        "https://en.wikipedia.org/wiki/Prescription_and_description",
        "https://en.wikipedia.org/wiki/Methodology",
        "https://en.wikipedia.org/wiki/Metamodeling",
        "https://en.wikipedia.org/wiki/Systems_development_life_cycle",
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model",
        "https://en.wikipedia.org/wiki/Iterative_and_incremental_development",
        "https://en.wikipedia.org/wiki/Project_stakeholder",
        "https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework",
        "https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}