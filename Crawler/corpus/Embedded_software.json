{
    "url": "https://en.wikipedia.org/wiki/Embedded_software",
    "title": "Embedded software",
    "table_of_contents": [
        "1 Operating systems",
        "2 Differences from application software",
        "3 Communication protocols",
        "4 See also",
        "5 Notes",
        "6 References"
    ],
    "content": [
        {
            "paragraph1": "Embedded software is computer software, written to control machines or devices that are not typically thought of as computers, commonly known as embedded systems. It is typically specialized for the particular hardware that it runs on and has time and memory constraints. This term is sometimes used interchangeably with firmware.\n",
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/8/82/SMSC_LAN91C110_ethernet_chip.jpg/440px-SMSC_LAN91C110_ethernet_chip.jpg",
                "caption": "\n\t\tA close-up of the SMSC LAN91C110 (SMSC 91x) chip, an embedded Ethernet chip\n\t"
            },
            "paragraph2": "A precise and stable characteristic feature is that no or not all functions of embedded software are initiated/controlled via a human interface, but through machine-interfaces instead.\n",
            "paragraph3": "Manufacturers build embedded software into the electronics of cars, telephones, modems, robots, appliances, toys, security systems, pacemakers, televisions and set-top boxes, and digital watches, for example. This software can be very simple, such as lighting controls running on an 8-bit microcontroller with a few kilobytes of memory with the suitable level of processing complexity determined with a Probably Approximately Correct Computation framework (a methodology based on randomized algorithms). However, embedded software can become very sophisticated in applications such as routers, optical network elements，airplanes, missiles, and process control systems.\n"
        },
        {
            "title": "Operating systems",
            "paragraph1": "Unlike standard computers that generally use an operating systems such as macOS, Windows or Linux, embedded software may use no operating system. When they do use one, a wide variety of operating systems can be chosen from, typically a real-time operating system. Code for embedded software is typically written in C or C++, but various high-level programming languages, such as Java, Python and JavaScript, are now also in common use to target microcontrollers and embedded systems. Assembly languages are often used too, especially in booting and interrupt handling. Ada is used in some military and aviation projects.\n"
        },
        {
            "title": "Differences from application software",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/a/a1/MicroVGA_TUI_demoapp.jpg/440px-MicroVGA_TUI_demoapp.jpg",
                "caption": "\n\t\tEmbedded system text user interface using MicroVGA[nb 1]\n"
            },
            "paragraph1": "Most consumers are familiar with application software that provide functionality on a computer. However embedded software is often less visible, but no less complicated. Unlike application software, embedded software has fixed hardware requirements and capabilities, and addition of third-party hardware or software is strictly controlled.\n",
            "paragraph2": "Embedded software needs to include all needed device drivers at manufacturing time, and the device drivers are written for the various hardware devices. These device drivers, called BSP (Board support package), form the layer of software containing hardware-specific drivers and other routines that allow a particular operating system (traditionally a real-time operating system, or RTOS) to function in a particular hardware environment (a computer or CPU card), integrated with the RTOS itself. The software is highly dependent on the CPU and specific chips chosen. Most embedded software engineers have at least a passing knowledge of reading schematics, and reading data sheets for components to determine usage of registers and communication system. Conversion between decimal, hexadecimal and binary is useful as well as using bit manipulation.\n",
            "paragraph3": "Web applications are often used for managing hardware, although XML files and other output may be passed to a computer for display. File systems with folders are typically used, however SQL databases are often absent.\n",
            "paragraph4": "Software development requires use of a cross compiler, which runs on a computer but produces executable code for the target device. Debugging requires use of an in-circuit emulator, and debugging hardware such as JTAG or SWD debuggers. Software developers often have access to the complete kernel (OS) source code.\n",
            "paragraph5": "Size of the storage memory and RAM can vary significantly. Some systems run in 16 KB of Flash and 4 KB of RAM with a CPU operating at 8 MHz, other systems can rival contemporary computers. These space requirements lead to more work being done in C or embedded C++, instead of C++. Interpreted languages like BASIC (while e.g. Parallax Propeller can use compiled BASIC) and Java (Java ME Embedded 8.3 is available for e.g.  ARM Cortex-M4, Cortex-M7 microcontrollers and older ARM11 used in Raspberry Pi and Intel Galileo Gen. 2) are not commonly used; while an implementation of the interpreted Python 3 language –  MicroPython –  is however available expressly for microcontroller use, e.g. 32-bit ARM-based (such as BBC micro:bit) and 16-bit PIC microcontrollers.\n"
        },
        {
            "title": "Communication protocols",
            "paragraph1": "Communications between processors and between one processor and other components are essential. Besides direct memory addressing, hardware level common protocols include I²C, SPI, serial ports, 1-Wires, Ethernets, and USB.\n",
            "paragraph2": "Communications protocols designed for use in embedded systems are available as closed source from companies including InterNiche Technologies and CMX Systems. Open-source protocols stem from uIP, lwip, and others.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/Embedded_systems",
        "https://en.wikipedia.org/wiki/Electronic_hardware",
        "https://en.wikipedia.org/wiki/Firmware",
        "https://en.wikipedia.org/wiki/Ethernet",
        "https://en.wikipedia.org/wiki/Cars",
        "https://en.wikipedia.org/wiki/Robot",
        "https://en.wikipedia.org/wiki/Pacemaker",
        "https://en.wikipedia.org/wiki/Digital_watches",
        "https://en.wikipedia.org/wiki/Microcontroller",
        "https://en.wikipedia.org/wiki/Kilobytes",
        "https://en.wikipedia.org/wiki/Randomized_algorithm",
        "https://en.wikipedia.org/wiki/Airplane",
        "https://en.wikipedia.org/wiki/Missile",
        "https://en.wikipedia.org/wiki/Process_control",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/Linux",
        "https://en.wikipedia.org/wiki/JavaScript",
        "https://en.wikipedia.org/wiki/Assembly_language",
        "https://en.wikipedia.org/wiki/Interrupt",
        "https://en.wikipedia.org/wiki/Text_user_interface",
        "https://en.wikipedia.org/wiki/Application_software",
        "https://en.wikipedia.org/wiki/Device_driver",
        "https://en.wikipedia.org/wiki/Board_support_package",
        "https://en.wikipedia.org/wiki/Schematic",
        "https://en.wikipedia.org/wiki/Decimal",
        "https://en.wikipedia.org/wiki/Hexadecimal",
        "https://en.wikipedia.org/wiki/Binary_numeral_system",
        "https://en.wikipedia.org/wiki/Bit_manipulation",
        "https://en.wikipedia.org/wiki/Cross_compiler",
        "https://en.wikipedia.org/wiki/JTAG",
        "https://en.wikipedia.org/wiki/BASIC",
        "https://en.wikipedia.org/wiki/Java_programming_language",
        "https://en.wikipedia.org/wiki/ARM11",
        "https://en.wikipedia.org/wiki/Raspberry_Pi",
        "https://en.wikipedia.org/wiki/Intel_Galileo",
        "https://en.wikipedia.org/wiki/MicroPython",
        "https://en.wikipedia.org/wiki/Micro_Bit",
        "https://en.wikipedia.org/wiki/PIC_microcontroller",
        "https://en.wikipedia.org/wiki/Memory_address",
        "https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus",
        "https://en.wikipedia.org/wiki/Serial_port",
        "https://en.wikipedia.org/wiki/Ethernet",
        "https://en.wikipedia.org/wiki/Universal_Serial_Bus",
        "https://en.wikipedia.org/wiki/Embedded_systems",
        "https://en.wikipedia.org/wiki/Closed_source",
        "https://en.wikipedia.org/wiki/CMX_Systems",
        "https://en.wikipedia.org/wiki/LwIP",
        "https://en.wikipedia.org/wiki/Embedded_system",
        "https://en.wikipedia.org/wiki/Embedded_system",
        "https://en.wikipedia.org/wiki/Board_support_package",
        "https://en.wikipedia.org/wiki/Bootloader",
        "https://en.wikipedia.org/wiki/Consumer_electronics",
        "https://en.wikipedia.org/wiki/Cross_compiler",
        "https://en.wikipedia.org/wiki/Embedded_database",
        "https://en.wikipedia.org/wiki/Embedded_hypervisor",
        "https://en.wikipedia.org/wiki/Embedded_operating_system",
        "https://en.wikipedia.org/wiki/Internet_of_things",
        "https://en.wikipedia.org/wiki/Memory_footprint",
        "https://en.wikipedia.org/wiki/Microcontroller",
        "https://en.wikipedia.org/wiki/Raspberry_Pi",
        "https://en.wikipedia.org/wiki/System_on_a_chip",
        "https://en.wikipedia.org/wiki/Firmware",
        "https://en.wikipedia.org/wiki/Closed_platform",
        "https://en.wikipedia.org/wiki/Crippleware",
        "https://en.wikipedia.org/wiki/Custom_firmware",
        "https://en.wikipedia.org/wiki/Defective_by_Design",
        "https://en.wikipedia.org/wiki/Hacking_of_consumer_electronics",
        "https://en.wikipedia.org/wiki/IOS_jailbreaking",
        "https://en.wikipedia.org/wiki/PlayStation_3_Jailbreak",
        "https://en.wikipedia.org/wiki/Proprietary_firmware",
        "https://en.wikipedia.org/wiki/Booting",
        "https://en.wikipedia.org/wiki/Barebox",
        "https://en.wikipedia.org/wiki/UClibc",
        "https://en.wikipedia.org/wiki/Dietlibc",
        "https://en.wikipedia.org/wiki/Embedded_GLIBC",
        "https://en.wikipedia.org/wiki/LwIP",
        "https://en.wikipedia.org/wiki/Musl",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Almquist_shell",
        "https://en.wikipedia.org/wiki/BitBake",
        "https://en.wikipedia.org/wiki/Buildroot",
        "https://en.wikipedia.org/wiki/BusyBox",
        "https://en.wikipedia.org/wiki/OpenEmbedded",
        "https://en.wikipedia.org/wiki/Toybox",
        "https://en.wikipedia.org/wiki/Yocto_Project",
        "https://en.wikipedia.org/wiki/Embedded_operating_system",
        "https://en.wikipedia.org/wiki/Linux_on_embedded_systems",
        "https://en.wikipedia.org/wiki/Linux_for_mobile_devices",
        "https://en.wikipedia.org/wiki/Windows_IoT",
        "https://en.wikipedia.org/wiki/Windows_Embedded_Compact",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Assembly_language",
        "https://en.wikipedia.org/wiki/Embedded_C",
        "https://en.wikipedia.org/wiki/Embedded_Java",
        "https://en.wikipedia.org/wiki/MISRA_C",
        "https://en.wikipedia.org/wiki/Comparison_of_lightweight_web_browsers",
        "https://en.wikipedia.org/wiki/Embedded_software",
        "https://en.wikipedia.org/wiki/Embedded_software",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}