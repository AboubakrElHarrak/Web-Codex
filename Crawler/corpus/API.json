{
    "url": "https://en.wikipedia.org/wiki/Application_programming_interface",
    "title": "API",
    "table_of_contents": [
        "1 Purpose",
        "2 History of the term",
        "2.1 1940s and 1950s",
        "2.2 1960s and 1970s",
        "2.3 1990s",
        "2.4 2000s",
        "3 Usage",
        "3.1 Libraries and frameworks",
        "3.2 Operating systems",
        "3.3 Remote APIs",
        "3.4 Web APIs",
        "4 Design",
        "5 Release policies",
        "5.1 Public API implications",
        "6 Documentation",
        "7 Dispute over copyright protection for APIs",
        "8 Examples",
        "9 See also",
        "10 References",
        "11 Further reading",
        "12 External links"
    ],
    "content": [
        {
            "paragraph1": "An application programming interface (API) is a connection between computers or between computer programs. It is a type of software interface, offering a service to other pieces of software. A document or standard that describes how to build or use such a connection or interface is called an API specification. A computer system that meets this standard is said to implement or expose an API. The term API may refer either to the specification or to the implementation.\n",
            "paragraph2": "In contrast to a user interface, which connects a computer to a person, an application programming interface connects computers or pieces of software to each other. It is not intended to be used directly by a person (the end user) other than a computer programmer who is incorporating it into software. An API is often made up of different parts which act as tools or services that are available to the programmer. A program or a programmer that uses one of these parts is said to call that portion of the API. The calls that make up the API are also known as subroutines, methods, requests, or endpoints. An API specification defines these calls, meaning that it explains how to use or implement them.\n",
            "paragraph3": "One purpose of APIs is to hide the internal details of how a system works, exposing only those parts a programmer will find useful and keeping them consistent even if the internal details later change. An API may be custom-built for a particular pair of systems, or it may be a shared standard allowing interoperability among many systems.\n",
            "paragraph4": "The term API is often used to refer to web APIs, which allow communication between computers that are joined by the internet. There are also APIs for programming languages, software libraries, computer operating systems, and computer hardware. APIs originated in the 1940s, though the term did not emerge until the 1960s and 1970s.\n"
        },
        {
            "title": "Purpose",
            "paragraph1": "In building applications, an API (application programming interface) simplifies programming by abstracting the underlying implementation and only exposing objects or actions the developer needs. While a graphical interface for an email client might provide a user with a button that performs all the steps for fetching and highlighting new emails, an API for file input/output might give the developer a function that copies a file from one location to another without requiring that the developer understand the file system operations occurring behind the scenes.\n"
        },
        {
            "title": "History of the term",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/4/41/Database_management_system_diagram_from_1978_workshop.png/440px-Database_management_system_diagram_from_1978_workshop.png",
                "caption": "\n\t\tA diagram from 1978 proposing the expansion of the idea of the API to become a general programming interface, beyond application programs alone.[4]\n"
            },
            "paragraph1": "The term API initially described an interface only for end-user-facing programs, known as application programs. This origin is still reflected in the name \"application programming interface.\" Today, the term is broader, including also utility software and even hardware interfaces.\n",
            "subtitle1": "1940s and 1950s",
            "paragraph2": "The idea of the API is much older than the term itself. British computer scientists Maurice Wilkes and David Wheeler worked on a modular software library in the 1940s for EDSAC, an early computer. The subroutines in this library were stored on punched paper tape organized in a filing cabinet. This cabinet also contained what Wilkes and Wheeler called a \"library catalog\" of notes about each subroutine and how to incorporate it into a program. Today, such a catalog would be called an API (or an API specification or API documentation) because it instructs a programmer on how to use (or \"call\") each subroutine that the programmer needs.\n",
            "paragraph3": "Wilkes and Wheeler's 1951 book The Preparation of Programs for an Electronic Digital Computer contains the first published API specification. Joshua Bloch considers that Wilkes and Wheeler \"latently invented\" the API, because it is more of a concept that is discovered than invented.\n",
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/8/85/Univac_1108_Census_Bureau.jpg/600px-Univac_1108_Census_Bureau.jpg",
                "caption": "\n\t\tAlthough the people who coined the term API were implementing software on a Univac 1108, the goal of their API was to make hardware independent programs possible.[6]\n"
            },
            "subtitle2": "1960s and 1970s",
            "paragraph4": "The term \"application program interface\" (without an -ing suffix) is first recorded in a paper called Data structures and techniques for remote computer graphics presented at an AFIPS conference in 1968. The authors of this paper use the term to describe the interaction of an application—a graphics program in this case—with the rest of the computer system. A consistent application interface (consisting of Fortran subroutine calls) was intended to free the programmer from dealing with idiosyncrasies of the graphics display device, and to provide hardware independence if the computer or the display were replaced.\n",
            "paragraph5": "The term was introduced to the field of databases by C. J. Date in a 1974 paper called The Relational and Network Approaches: Comparison of the Application Programming Interface. An API became a part of the ANSI/SPARC framework for database management systems. This framework treated the application programming interface separately from other interfaces, such as the query interface. Database professionals in the 1970s observed these different interfaces could be combined; a sufficiently rich application interface could support the other interfaces as well.\n",
            "paragraph6": "This observation led to APIs that supported all types of programming, not just application programming.\n",
            "subtitle3": "1990s",
            "paragraph7": "By 1990, the API was defined simply as \"a set of services available to a programmer for performing certain tasks\" by technologist Carl Malamud.\n",
            "paragraph8": "The idea of the API was expanded again with the dawn of remote procedure calls and web APIs. As computer networks became common in the 1970s and 1980s, programmers wanted to call libraries located not only on their local computers, but on computers located elsewhere. These remote procedure calls were well supported by the Java language in particular. In the 1990s, with the spread of the internet, standards like CORBA, COM, and DCOM competed to become the most common way to expose API services.\n",
            "subtitle4": "2000s",
            "paragraph9": "Roy Fielding's dissertation Architectural Styles and the Design of Network-based Software Architectures at UC Irvine in 2000 outlined Representational state transfer (REST) and described the idea of a \"network-based Application Programming Interface\" that Fielding contrasted with traditional \"library-based\" APIs. XML and JSON web APIs saw widespread commercial adoption beginning in 2000 and continuing as of 2021. The web API is now the most common meaning of the term API.\n",
            "paragraph10": "The Semantic Web proposed by Tim Berners-Lee in 2001 included \"semantic APIs\" that recast the API as an open, distributed data interface rather than a software behavior interface. Proprietary interfaces and agents became more widespread than open ones, but the idea of the API as a data interface took hold. Because web APIs are widely used to exchange data of all kinds online, API has become a broad term describing much of the communication on the internet. When used in this way, the term API has overlap in meaning with the term communication protocol.\n"
        },
        {
            "title": "Usage",
            "subtitle1": "Libraries and frameworks",
            "paragraph1": "The interface to a software library is one type of API. The API describes and prescribes the \"expected behavior\" (a specification) while the library is an \"actual implementation\" of this set of rules.\n",
            "paragraph2": "A single API can have multiple implementations (or none, being abstract) in the form of different libraries that share the same programming interface.\n",
            "paragraph3": "The separation of the API from its implementation can allow programs written in one language to use a library written in another. For example, because Scala and Java compile to compatible bytecode, Scala developers can take advantage of any Java API.\n",
            "paragraph4": "API use can vary depending on the type of programming language involved.\nAn API for a procedural language such as Lua could consist primarily of basic routines to execute code, manipulate data or handle errors while an API for an object-oriented language, such as Java, would provide a specification of classes and its class methods. Hyrum's law  states that \"With a sufficient number of users of an API,  it does not matter what you promise in the contract:  all observable behaviors of your system  will be depended on by somebody.\" Meanwhile, several studies show that most applications that use an API tend to use a small part of the API. API use actually varies depending on the number of users, as well as on the popularity of the API.\n",
            "paragraph5": "Language binding are also APIs. By mapping the features and capabilities of one language to an interface implemented in another language, a language binding allows a library or service written in one language to be used when developing in another language.\n",
            "paragraph6": "Tools such as SWIG and F2PY, a Fortran-to-Python interface generator, facilitate the creation of such interfaces.\n",
            "paragraph7": "An API can also be related to a software framework: a framework can be based on several libraries implementing several APIs, but unlike the normal use of an API, the access to the behavior built into the framework is mediated by extending its content with new classes plugged into the framework itself.\n",
            "paragraph8": "Moreover, the overall program flow of control can be out of the control of the caller and in the framework's hands by inversion of control or a similar mechanism.\n",
            "subtitle2": "Operating systems",
            "paragraph9": "An API can specify the interface between an application and the operating system. POSIX, for example, specifies a set of common APIs that aim to enable an application written for a POSIX conformant operating system to be compiled for another POSIX conformant operating system.\n",
            "paragraph10": "Linux and Berkeley Software Distribution are examples of operating systems that implement the POSIX APIs.\n",
            "paragraph11": "Microsoft has shown a strong commitment to a backward-compatible API, particularly within its Windows API (Win32) library, so older applications may run on newer versions of Windows using an executable-specific setting called \"Compatibility Mode\".\n",
            "paragraph12": "An API differs from an application binary interface (ABI) in that an API is source code based while an ABI is binary based. For instance, POSIX provides APIs while the Linux Standard Base provides an ABI.\n",
            "subtitle3": "Remote APIs",
            "paragraph13": "Remote APIs allow developers to manipulate remote resources through protocols, specific standards for communication that allow different technologies to work together, regardless of language or platform.\nFor example, the Java Database Connectivity API allows developers to query many different types of databases with the same set of functions, while the Java remote method invocation API uses the Java Remote Method Protocol to allow invocation of functions that operate remotely, but appear local to the developer.\n",
            "paragraph14": "Therefore, remote APIs are useful in maintaining the object abstraction in object-oriented programming; a method call, executed locally on a proxy object, invokes the corresponding method on the remote object, using the remoting protocol, and acquires the result to be used locally as a return value.\n",
            "paragraph15": "A modification of the proxy object will also result in a corresponding modification of the remote object.\n",
            "subtitle4": "Web APIs",
            "paragraph16": "Web APIs are the defined interfaces through which interactions happen between an enterprise and applications that use its assets, which also is a service-level agreement (SLA) to specify the functional provider and expose the service path or URL for its API users. An API approach is an architectural approach that revolves around providing a program interface to a set of services to different applications serving different types of consumers.\n",
            "paragraph17": "When used in the context of web development, an API is typically defined as a set of specifications, such as Hypertext Transfer Protocol (HTTP) request messages, along with a definition of the structure of response messages, usually in an Extensible Markup Language (XML) or JavaScript Object Notation (JSON) format. An example might be a shipping company API that can be added to an eCommerce-focused website to facilitate ordering shipping services and automatically include current shipping rates, without the site developer having to enter the shipper's rate table into a web database. While \"web API\" historically has been virtually synonymous with web service, the recent trend (so-called Web 2.0) has been moving away from Simple Object Access Protocol (SOAP) based web services and service-oriented architecture (SOA) towards more direct representational state transfer (REST) style web resources and resource-oriented architecture (ROA). Part of this trend is related to the Semantic Web movement toward Resource Description Framework (RDF), a concept to promote web-based ontology engineering technologies. Web APIs allow the combination of multiple APIs into new applications known as mashups.\nIn the social media space, web APIs have allowed web communities to facilitate sharing content and data between communities and applications. In this way, content that is created in one place dynamically can be posted and updated to multiple locations on the web. For example, Twitter's REST API allows developers to access core Twitter data and the Search API provides methods for developers to interact with Twitter Search and trends data.\n"
        },
        {
            "title": "Design",
            "paragraph1": "The design of an API has significant impact on its usage. The principle of information hiding describes the role of programming interfaces as enabling modular programming by hiding the implementation details of the modules so that users of modules need not understand the complexities inside the modules. Thus, the design of an API attempts to provide only the tools a user would expect. The design of programming interfaces represents an important part of software architecture, the organization of a complex piece of software.\n"
        },
        {
            "title": "Release policies",
            "paragraph1": "APIs are one of the more common ways technology companies integrate. Those that provide and use APIs are considered as being members of a business ecosystem.\n",
            "paragraph2": "The main policies for releasing an API are:\n",
            "ul1": "Private: The API is for internal company use only.\nPartner: Only specific business partners can use the API. For example, vehicle for hire companies such as Uber and Lyft allow approved third-party developers to directly order rides from within their apps. This allows the companies to exercise quality control by curating which apps have access to the API, and provides them with an additional revenue stream.[41]\nPublic: The API is available for use by the public. For example, Microsoft makes the Windows API public, and Apple releases its API Cocoa, so that software can be written for their platforms. Not all public APIs are generally accessible by everybody. For example, Internet service providers like Cloudflare or Voxility, use RESTful APIs to allow customers and resellers access to their infrastructure information, DDoS stats, network performance or dashboard controls.[42] Access to such APIs is granted either by \"API tokens\", or customer status validations.[43]\n",
            "subtitle1": "Public API implications",
            "paragraph3": "An important factor when an API becomes public is its \"interface stability\". Changes to the API—for example adding new parameters to a function call—could break compatibility with the clients that depend on that API.\n",
            "paragraph4": "When parts of a publicly presented API are subject to change and thus not stable, such parts of a particular API should be documented explicitly as \"unstable\". For example, in the Google Guava library, the parts that are considered unstable, and that might change soon, are marked with the Java annotation @Beta.\n",
            "paragraph5": "A public API can sometimes declare parts of itself as deprecated or rescinded. This usually means that part of the API should be considered a candidate for being removed, or modified in a backward incompatible way. Therefore, these changes allow developers to transition away from parts of the API that will be removed or not supported in the future.\n",
            "paragraph6": "Client code may contain innovative or opportunistic usages that were not intended by the API designers. In other words, for a library with a significant user base, when an element becomes part of the public API, it may be used in diverse ways.\nOn February 19, 2020, Akamai published their annual \"State of the Internet\" report, showcasing the growing trend of cybercriminals targeting public API platforms at financial services worldwide. From December 2017 through November 2019, Akamai witnessed 85.42 billion credential violation attacks. About 20%, or 16.55 billion, were against hostnames defined as API endpoints. Of these, 473.5 million have targeted financial services sector organizations.\n"
        },
        {
            "title": "Documentation",
            "paragraph1": "API documentation describes the services an API offers and how to use those services, aiming to cover everything a client would need to know for practical purposes.\n",
            "paragraph2": "Documentation is crucial for the development and maintenance of applications using the API.\nAPI documentation is traditionally found in documentation files but can also be found in social media such as blogs, forums, and Q&A websites.\n",
            "paragraph3": "Traditional documentation files are often presented via a documentation system, such as Javadoc or Pydoc, that has a consistent appearance and structure.\nHowever, the types of content included in the documentation differs from API to API.\n",
            "paragraph4": "In the interest of clarity, API documentation may include a description of classes and methods in the API as well as \"typical usage scenarios, code snippets, design rationales, performance discussions, and contracts\", but implementation details of the API services themselves are usually omitted.\n",
            "paragraph5": "Restrictions and limitations on how the API can be used are also covered by the documentation. For instance, documentation for an API function could note that its parameters cannot be null, that the function itself is not thread safe. Because API documentation tends to be comprehensive, it is a challenge for writers to keep the documentation updated and for users to read it carefully, potentially yielding bugs.\n",
            "paragraph6": "API documentation can be enriched with metadata information like Java annotations. This metadata can be used by the compiler, tools, and by the run-time environment to implement custom behaviors or custom handling.\n",
            "paragraph7": "It is possible to generate API documentation in a data-driven manner. By observing many programs that use a given API, it is possible to infer the typical usages, as well the required contracts and directives. Then, templates can be used to generate natural language from the mined data.\n"
        },
        {
            "title": "Dispute over copyright protection for APIs",
            "paragraph1": "In 2010, Oracle Corporation sued Google for having distributed a new implementation of Java embedded in the Android operating system. Google had not acquired any permission to reproduce the Java API, although permission had been given to the similar OpenJDK project. Judge William Alsup ruled in the Oracle v. Google case that APIs cannot be copyrighted in the U.S and that a victory for Oracle would have widely expanded copyright protection to a \"functional set of symbols\" and allowed the copyrighting of simple software commands:\n",
            "paragraph2": "Alsup's ruling was overturned in 2014 on appeal  to the Court of Appeals for the Federal Circuit, though the question of whether such use of APIs constitutes fair use was left unresolved.\n",
            "paragraph3": "In 2016, following a two-week trial, a jury determined that Google's reimplementation of the Java API constituted fair use, but Oracle vowed to appeal the decision. Oracle won on its appeal, with the Court of Appeals for the Federal Circuit ruling that Google's use of the APIs did not qualify for fair use. In 2019, Google appealed to the Supreme Court of the United States over both the copyrightability and fair use rulings, and the Supreme Court granted review. Due to the COVID-19 pandemic, the oral hearings in the case were delayed until October 2020.\n",
            "paragraph4": "The case was decided by the Supreme Court in Google's favor.\n"
        },
        {
            "title": "Examples"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Computer_program",
        "https://en.wikipedia.org/wiki/Software",
        "https://en.wikipedia.org/wiki/User_interface",
        "https://en.wikipedia.org/wiki/End_user",
        "https://en.wikipedia.org/wiki/Computer_programmer",
        "https://en.wikipedia.org/wiki/Subroutine",
        "https://en.wikipedia.org/wiki/Communication_endpoint",
        "https://en.wikipedia.org/wiki/Information_hiding",
        "https://en.wikipedia.org/wiki/Interoperability",
        "https://en.wikipedia.org/wiki/Web_API",
        "https://en.wikipedia.org/wiki/Internet",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Computer_hardware",
        "https://en.wikipedia.org/wiki/Email_client",
        "https://en.wikipedia.org/wiki/Subroutine",
        "https://en.wikipedia.org/wiki/Journaling_file_system",
        "https://en.wikipedia.org/wiki/Application_program",
        "https://en.wikipedia.org/wiki/Application_program",
        "https://en.wikipedia.org/wiki/Utility_software",
        "https://en.wikipedia.org/wiki/Hardware_interface_design",
        "https://en.wikipedia.org/wiki/Maurice_Wilkes",
        "https://en.wikipedia.org/wiki/Software_library",
        "https://en.wikipedia.org/wiki/EDSAC",
        "https://en.wikipedia.org/wiki/Subroutine",
        "https://en.wikipedia.org/wiki/Punched_paper_tape",
        "https://en.wikipedia.org/wiki/Filing_cabinet",
        "https://en.wikipedia.org/wiki/The_Preparation_of_Programs_for_an_Electronic_Digital_Computer",
        "https://en.wikipedia.org/wiki/Joshua_Bloch",
        "https://en.wikipedia.org/wiki/Hardware_independent",
        "https://en.wikipedia.org/wiki/Computer_graphics",
        "https://en.wikipedia.org/wiki/AFIPS",
        "https://en.wikipedia.org/wiki/Fortran",
        "https://en.wikipedia.org/wiki/Hardware_independence",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Relational_database",
        "https://en.wikipedia.org/wiki/Network_model",
        "https://en.wikipedia.org/wiki/Database_management_system",
        "https://en.wikipedia.org/wiki/Carl_Malamud",
        "https://en.wikipedia.org/wiki/Remote_procedure_calls",
        "https://en.wikipedia.org/wiki/Web_API",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Internet",
        "https://en.wikipedia.org/wiki/CORBA",
        "https://en.wikipedia.org/wiki/Component_Object_Model",
        "https://en.wikipedia.org/wiki/Distributed_Component_Object_Model",
        "https://en.wikipedia.org/wiki/Roy_Fielding",
        "https://en.wikipedia.org/wiki/UC_Irvine",
        "https://en.wikipedia.org/wiki/Representational_state_transfer",
        "https://en.wikipedia.org/wiki/XML",
        "https://en.wikipedia.org/wiki/JSON",
        "https://en.wikipedia.org/wiki/Semantic_Web",
        "https://en.wikipedia.org/wiki/Open_innovation",
        "https://en.wikipedia.org/wiki/Proprietary_software",
        "https://en.wikipedia.org/wiki/Communication_protocol",
        "https://en.wikipedia.org/wiki/Bytecode",
        "https://en.wikipedia.org/wiki/Procedural_programming",
        "https://en.wikipedia.org/wiki/Class_method",
        "https://en.wikipedia.org/wiki/Language_binding",
        "https://en.wikipedia.org/wiki/SWIG",
        "https://en.wikipedia.org/wiki/Fortran",
        "https://en.wikipedia.org/wiki/Inversion_of_control",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/POSIX",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Linux",
        "https://en.wikipedia.org/wiki/Berkeley_Software_Distribution",
        "https://en.wikipedia.org/wiki/Microsoft",
        "https://en.wikipedia.org/wiki/Windows_API",
        "https://en.wikipedia.org/wiki/Application_binary_interface",
        "https://en.wikipedia.org/wiki/Binary_file",
        "https://en.wikipedia.org/wiki/POSIX",
        "https://en.wikipedia.org/wiki/Linux_Standard_Base",
        "https://en.wikipedia.org/wiki/Communications_protocol",
        "https://en.wikipedia.org/wiki/Database",
        "https://en.wikipedia.org/wiki/Java_remote_method_invocation",
        "https://en.wikipedia.org/wiki/Remote_procedure_call",
        "https://en.wikipedia.org/wiki/Method_call",
        "https://en.wikipedia.org/wiki/Proxy_pattern",
        "https://en.wikipedia.org/wiki/Web_API",
        "https://en.wikipedia.org/wiki/Web_development_tools",
        "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol",
        "https://en.wikipedia.org/wiki/XML",
        "https://en.wikipedia.org/wiki/JSON",
        "https://en.wikipedia.org/wiki/Web_service",
        "https://en.wikipedia.org/wiki/SOAP",
        "https://en.wikipedia.org/wiki/Representational_state_transfer",
        "https://en.wikipedia.org/wiki/Web_resource",
        "https://en.wikipedia.org/wiki/Semantic_Web",
        "https://en.wikipedia.org/wiki/Resource_Description_Framework",
        "https://en.wikipedia.org/wiki/Ontology_engineering",
        "https://en.wikipedia.org/wiki/Information_hiding",
        "https://en.wikipedia.org/wiki/Modular_programming",
        "https://en.wikipedia.org/wiki/Software_architecture",
        "https://en.wikipedia.org/wiki/Vehicle_for_hire",
        "https://en.wikipedia.org/wiki/Uber",
        "https://en.wikipedia.org/wiki/Lyft",
        "https://en.wikipedia.org/wiki/Microsoft",
        "https://en.wikipedia.org/wiki/Windows_API",
        "https://en.wikipedia.org/wiki/Computing_platform",
        "https://en.wikipedia.org/wiki/RESTful",
        "https://en.wikipedia.org/wiki/Google_Guava",
        "https://en.wikipedia.org/wiki/Java_annotation",
        "https://en.wikipedia.org/wiki/Akamai_Technologies",
        "https://en.wikipedia.org/wiki/Thread_safety",
        "https://en.wikipedia.org/wiki/Java_annotation",
        "https://en.wikipedia.org/wiki/William_Alsup",
        "https://en.wikipedia.org/wiki/Copyrighted",
        "https://en.wikipedia.org/wiki/United_States_Court_of_Appeals_for_the_Federal_Circuit",
        "https://en.wikipedia.org/wiki/Fair_use",
        "https://en.wikipedia.org/wiki/Fair_use",
        "https://en.wikipedia.org/wiki/Supreme_Court_of_the_United_States",
        "https://en.wikipedia.org/wiki/Advanced_SCSI_programming_interface",
        "https://en.wikipedia.org/wiki/SCSI",
        "https://en.wikipedia.org/wiki/Macintosh",
        "https://en.wikipedia.org/wiki/DirectX",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/EHLLAPI",
        "https://en.wikipedia.org/wiki/List_of_Java_APIs",
        "https://en.wikipedia.org/wiki/Open_Database_Connectivity",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/OpenAL",
        "https://en.wikipedia.org/wiki/OpenCL",
        "https://en.wikipedia.org/wiki/OpenGL",
        "https://en.wikipedia.org/wiki/OpenMP",
        "https://en.wikipedia.org/wiki/Server_Application_Programming_Interface",
        "https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer",
        "https://en.wikipedia.org/wiki/API_testing",
        "https://en.wikipedia.org/wiki/API_writer",
        "https://en.wikipedia.org/wiki/Augmented_web",
        "https://en.wikipedia.org/wiki/Calling_convention",
        "https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture",
        "https://en.wikipedia.org/wiki/Comparison_of_application_virtual_machines",
        "https://en.wikipedia.org/wiki/Document_Object_Model",
        "https://en.wikipedia.org/wiki/Foreign_function_interface",
        "https://en.wikipedia.org/wiki/Front_and_back_ends",
        "https://en.wikipedia.org/wiki/Interface_control_document",
        "https://en.wikipedia.org/wiki/List_of_3D_graphics_APIs",
        "https://en.wikipedia.org/wiki/Microservices",
        "https://en.wikipedia.org/wiki/Name_mangling",
        "https://en.wikipedia.org/wiki/Open_API",
        "https://en.wikipedia.org/wiki/Open_Service_Interface_Definitions",
        "https://en.wikipedia.org/wiki/Parsing",
        "https://en.wikipedia.org/wiki/Software_development_kit",
        "https://en.wikipedia.org/wiki/Web_API",
        "https://en.wikipedia.org/wiki/Web_content_vendor",
        "https://en.wikipedia.org/wiki/XPCOM",
        "https://en.wikipedia.org/wiki/Joshua_Bloch",
        "https://en.wikipedia.org/wiki/Oxford_English_Dictionary",
        "https://en.wikipedia.org/wiki/Oxford_University_Press",
        "https://en.wikipedia.org/wiki/Carl_Malamud",
        "https://en.wikipedia.org/wiki/Roberto_Ierusalimschy",
        "https://en.wikipedia.org/wiki/JavaWorld",
        "https://en.wikipedia.org/wiki/USENIX",
        "https://en.wikipedia.org/wiki/JavaWorld",
        "https://en.wikipedia.org/wiki/Sun_Microsystems",
        "https://en.wikipedia.org/wiki/Bloomberg_Businessweek",
        "https://en.wikipedia.org/wiki/Ars_Technica",
        "https://en.wikipedia.org/wiki/Court_opinion",
        "https://en.wikipedia.org/wiki/Computer_code",
        "https://en.wikipedia.org/wiki/Application_Program_Interface",
        "https://en.wikipedia.org/wiki/Computer_code",
        "https://en.wikipedia.org/wiki/Recipe",
        "https://en.wikipedia.org/wiki/Computer",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Operating_system_advocacy",
        "https://en.wikipedia.org/wiki/Comparison_of_operating_systems",
        "https://en.wikipedia.org/wiki/Forensic_software_engineering",
        "https://en.wikipedia.org/wiki/History_of_operating_systems",
        "https://en.wikipedia.org/wiki/List_of_operating_systems",
        "https://en.wikipedia.org/wiki/Timeline_of_operating_systems",
        "https://en.wikipedia.org/wiki/Usage_share_of_operating_systems",
        "https://en.wikipedia.org/wiki/Comparison_of_user_features_of_operating_systems",
        "https://en.wikipedia.org/wiki/Disk_operating_system",
        "https://en.wikipedia.org/wiki/Distributed_operating_system",
        "https://en.wikipedia.org/wiki/Embedded_operating_system",
        "https://en.wikipedia.org/wiki/Hobbyist_operating_system",
        "https://en.wikipedia.org/wiki/Just_enough_operating_system",
        "https://en.wikipedia.org/wiki/Mobile_operating_system",
        "https://en.wikipedia.org/wiki/Network_operating_system",
        "https://en.wikipedia.org/wiki/Supercomputer_operating_system",
        "https://en.wikipedia.org/wiki/Computer_architecture",
        "https://en.wikipedia.org/wiki/Exokernel",
        "https://en.wikipedia.org/wiki/Hybrid_kernel",
        "https://en.wikipedia.org/wiki/Microkernel",
        "https://en.wikipedia.org/wiki/Monolithic_kernel",
        "https://en.wikipedia.org/wiki/Vkernel",
        "https://en.wikipedia.org/wiki/Rump_kernel",
        "https://en.wikipedia.org/wiki/Unikernel",
        "https://en.wikipedia.org/wiki/Device_driver",
        "https://en.wikipedia.org/wiki/Loadable_kernel_module",
        "https://en.wikipedia.org/wiki/User_space",
        "https://en.wikipedia.org/wiki/Computer_multitasking",
        "https://en.wikipedia.org/wiki/Cooperative_multitasking",
        "https://en.wikipedia.org/wiki/Context_switch",
        "https://en.wikipedia.org/wiki/Interrupt",
        "https://en.wikipedia.org/wiki/Process_control_block",
        "https://en.wikipedia.org/wiki/Multilevel_feedback_queue",
        "https://en.wikipedia.org/wiki/Shortest_job_next",
        "https://en.wikipedia.org/wiki/Memory_management",
        "https://en.wikipedia.org/wiki/System_resource",
        "https://en.wikipedia.org/wiki/Bus_error",
        "https://en.wikipedia.org/wiki/General_protection_fault",
        "https://en.wikipedia.org/wiki/Memory_protection",
        "https://en.wikipedia.org/wiki/Paging",
        "https://en.wikipedia.org/wiki/Protection_ring",
        "https://en.wikipedia.org/wiki/Segmentation_fault",
        "https://en.wikipedia.org/wiki/Virtual_memory",
        "https://en.wikipedia.org/wiki/File_system",
        "https://en.wikipedia.org/wiki/Defragmentation",
        "https://en.wikipedia.org/wiki/Device_file",
        "https://en.wikipedia.org/wiki/File_attribute",
        "https://en.wikipedia.org/wiki/Inode",
        "https://en.wikipedia.org/wiki/Journaling_file_system",
        "https://en.wikipedia.org/wiki/Disk_partitioning",
        "https://en.wikipedia.org/wiki/Virtual_file_system",
        "https://en.wikipedia.org/wiki/Virtual_tape_library",
        "https://en.wikipedia.org/wiki/Application_programming_interface",
        "https://en.wikipedia.org/wiki/Computer_network",
        "https://en.wikipedia.org/wiki/Hardware_abstraction",
        "https://en.wikipedia.org/wiki/Live_CD",
        "https://en.wikipedia.org/wiki/Live_USB",
        "https://en.wikipedia.org/wiki/Graphical_user_interface",
        "https://en.wikipedia.org/wiki/Natural_user_interface",
        "https://en.wikipedia.org/wiki/Voice_user_interface",
        "https://en.wikipedia.org/wiki/Zooming_user_interface",
        "https://en.wikipedia.org/wiki/Preboot_Execution_Environment",
        "https://en.wikipedia.org/wiki/API",
        "https://en.wikipedia.org/wiki/API",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}