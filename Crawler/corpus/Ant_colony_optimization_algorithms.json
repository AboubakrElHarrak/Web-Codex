{
    "url": "https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms",
    "title": "Ant colony optimization algorithms",
    "table_of_contents": [
        "1 Overview",
        "1.1 Ambient networks of intelligent objects",
        "1.2 Artificial pheromone system",
        "2 Algorithm and formula",
        "2.1 Edge selection",
        "2.2 Pheromone update",
        "3 Common extensions",
        "3.1 Ant system (AS)",
        "3.2 Ant colony system (ACS)",
        "3.3 Elitist ant system",
        "3.4 Max-min ant system (MMAS)",
        "3.5 Rank-based ant system (ASrank)",
        "3.6 Continuous orthogonal ant colony (COAC)",
        "3.7 Recursive ant colony optimization",
        "4 Convergence",
        "5 Applications",
        "5.1 Scheduling problem",
        "5.2 Vehicle routing problem",
        "5.3 Assignment problem",
        "5.4 Set problem",
        "5.5 Device sizing problem in nanoelectronics physical design",
        "5.6 Antennas optimization and synthesis",
        "5.7 Image processing",
        "5.8 Other applications",
        "6 Definition difficulty",
        "7 Stigmergy algorithms",
        "8 Related methods",
        "9 History",
        "10 References",
        "11 Publications (selected)",
        "12 External links"
    ],
    "content": [
        {
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/3/34/Safari_ants.jpg/440px-Safari_ants.jpg",
                "caption": "\n\t\tAnt behavior was the inspiration for the metaheuristic optimization technique\n\t"
            },
            "image3": {
                "url": "//upload.wikimedia.org/wikipedia/commons/9/95/Artificial_ants.jpg",
                "caption": "\n\t\tWhen a colony of ants is confronted with the choice of reaching their food via two different routes of which one is much shorter than the other, their choice is entirely random. However, those who use the shorter route reach the food faster and therefore go back and forth more often between the anthill and the food.[1]\n"
            },
            "paragraph1": "In computer science and operations research, the ant colony optimization algorithm (ACO) is a probabilistic technique for solving computational problems which can be reduced to finding good paths through graphs. Artificial ants stand for multi-agent methods inspired by the behavior of real ants. \nThe pheromone-based communication of biological ants is often the predominant paradigm used.   Combinations of artificial ants and local search algorithms have become a method of choice for numerous optimization tasks involving some sort of graph, e.g., vehicle routing and internet routing.\n",
            "paragraph2": "As an example, ant colony optimization  is a class of optimization algorithms modeled on the actions of an ant colony.  Artificial 'ants' (e.g. simulation agents) locate optimal solutions by moving through a parameter space representing all possible solutions.  Real ants lay down pheromones directing each other to resources while exploring their environment.  The simulated 'ants' similarly record their positions and the quality of their solutions, so that in later simulation iterations more ants locate better solutions.  One variation on this approach is the bees algorithm, which is more analogous to the foraging patterns of the honey bee, another social insect.\n",
            "paragraph3": "This algorithm is a member of the ant colony algorithms family, in swarm intelligence methods, and it constitutes some metaheuristic optimizations. Initially proposed by Marco Dorigo in 1992 in his PhD thesis, the first algorithm was aiming to search for an optimal path in a graph, based on the behavior of ants seeking a path between their colony and a source of food. The original idea has since diversified to solve a wider class of numerical problems, and as a result, several problems have emerged, drawing on various aspects of the behavior of ants. From a broader perspective, ACO performs a model-based search and shares some similarities with estimation of distribution algorithms.\n"
        },
        {
            "title": "Overview",
            "paragraph1": "In the natural world, ants of some species (initially) wander randomly,  and upon finding food return to their colony while laying down pheromone trails. If other ants find such a path, they are likely not to keep travelling at random, but instead to follow the trail, returning and reinforcing it if they eventually find food (see Ant communication).\n",
            "paragraph2": "Over time, however, the pheromone trail starts to evaporate, thus reducing its attractive strength. The more time it takes for an ant to travel down the path and back again, the more time the pheromones have to evaporate. A short path, by comparison, gets marched over more frequently, and thus the pheromone density becomes higher on shorter paths than longer ones. Pheromone evaporation also has the advantage of avoiding the convergence to a locally optimal solution. If there were no evaporation at all, the paths chosen by the first ants would tend to be excessively attractive to the following ones. In that case, the exploration of the solution space would be constrained. The influence of pheromone evaporation in real ant systems is unclear, but it is very important in artificial systems.\n",
            "paragraph3": "The overall result is that when one ant finds a good (i.e., short) path from the colony to a food source, other ants are more likely to follow that path, and positive feedback eventually leads to many ants following a single path. The idea of the ant colony algorithm is to mimic this behavior with \"simulated ants\" walking around the graph representing the problem to solve.\n",
            "subtitle1": "Ambient networks of intelligent objects",
            "paragraph4": "New concepts are required since “intelligence” is no longer centralized but can be found throughout all minuscule objects. Anthropocentric concepts have been known to lead to the production of IT systems in which data processing, control units and calculating forces are centralized. These centralized units have continually increased their performance and can be compared to the human brain. The model of the brain has become the ultimate vision of computers. Ambient networks of intelligent objects and, sooner or later, a new generation of information systems which are even more diffused and based on nanotechnology, will profoundly change this concept. Small devices that can be compared to insects do not dispose of a high intelligence on their own. Indeed, their intelligence can be classed as fairly limited. It is, for example, impossible to integrate a high performance calculator with the power to solve any kind of mathematical problem into a biochip that is implanted into the human body or integrated in an intelligent tag which is designed to trace commercial articles. However, once those objects are interconnected they dispose of a form of intelligence that can be compared to a colony of ants or bees. In the case of certain problems, this type of intelligence can be superior to the reasoning of a centralized system similar to the brain.\n",
            "paragraph5": "Nature offers several examples of how minuscule organisms, if they all follow the same basic rule, can create a form of collective intelligence on the macroscopic level. Colonies of social insects perfectly illustrate this model which greatly differs from human societies. This model is based on the co-operation of independent units with simple and unpredictable behavior. They move through their surrounding area to carry out certain tasks and only possess a very limited amount of information to do so. A colony of ants, for example, represents numerous qualities that can also be applied to a network of ambient objects. Colonies of ants have a very high capacity to adapt themselves to changes in the environment as well as an enormous strength in dealing with situations where one individual fails to carry out a given task. This kind of flexibility would also be very useful for mobile networks of objects which are perpetually developing. Parcels of information that move from a computer to a digital object behave in the same way as ants would do. They move through the network and pass from one knot to the next with the objective of arriving at their final destination as quickly as possible.\n",
            "subtitle2": "Artificial pheromone system",
            "paragraph6": "Pheromone-based communication is one of the most effective ways of communication which is widely observed in nature. Pheromone is used by social insects such as\nbees, ants and termites; both for inter-agent and agent-swarm communications. Due to its feasibility, artificial pheromones have been adopted in multi-robot and swarm robotic systems. Pheromone-based communication was implemented by different means such as chemical  or physical (RFID tags, light, sound) ways. However, those implementations were not able to replicate all the aspects of pheromones as seen in nature.\n",
            "paragraph7": "Using projected light was presented in an 2007 IEEE paper by Garnier, Simon, et al. as an experimental setup to study pheromone-based communication with micro autonomous robots. Another study presented a system in which pheromones were implemented via a horizontal LCD screen on which the robots moved, with the robots having downward facing light sensors to register the patterns beneath them.\n"
        },
        {
            "title": "Algorithm and formula",
            "paragraph1": "In the ant colony optimization algorithms, an artificial ant is a simple computational agent that searches for good solutions to a given optimization problem. To apply an ant colony algorithm, the optimization problem needs to be converted into the problem of finding the shortest path on a weighted graph. In the first step of each iteration, each ant stochastically constructs a solution, i.e. the order in which the edges in the graph should be followed. In the second step, the paths found by the different ants are compared.  The last step consists of updating the pheromone levels on each edge.\n",
            "subtitle1": "Edge selection",
            "paragraph2": "Each ant needs to construct a solution to move through the graph.  To select the next edge in its tour, an ant will consider the length of each edge available from its current position, as well as the corresponding pheromone level. At each step of the algorithm, each ant moves from a state \n\n\n\nx\n\n\n{\\displaystyle x}\n\n to state \n\n\n\ny\n\n\n{\\displaystyle y}\n\n, corresponding to a more complete intermediate solution. Thus, each ant \n\n\n\nk\n\n\n{\\displaystyle k}\n\n computes a set \n\n\n\n\nA\n\nk\n\n\n(\nx\n)\n\n\n{\\displaystyle A_{k}(x)}\n\n of feasible expansions to its current state in each iteration, and moves to one of these in probability. For ant \n\n\n\nk\n\n\n{\\displaystyle k}\n\n, the probability \n\n\n\n\np\n\nx\ny\n\n\nk\n\n\n\n\n{\\displaystyle p_{xy}^{k))\n\n of moving from state \n\n\n\nx\n\n\n{\\displaystyle x}\n\n to state \n\n\n\ny\n\n\n{\\displaystyle y}\n\n depends on the combination of two values, the attractiveness \n\n\n\n\nη\n\nx\ny\n\n\n\n\n{\\displaystyle \\eta _{xy))\n\n of the move, as computed by some heuristic indicating the a priori desirability of that move and the trail level \n\n\n\n\nτ\n\nx\ny\n\n\n\n\n{\\displaystyle \\tau _{xy))\n\n of the move, indicating how proficient it has been in the past to make that particular move. The trail level represents a posteriori indication of the desirability of that move.\n",
            "paragraph3": "In general, the \n\n\n\nk\n\n\n{\\displaystyle k}\n\nth ant moves from state \n\n\n\nx\n\n\n{\\displaystyle x}\n\n to state \n\n\n\ny\n\n\n{\\displaystyle y}\n\n with probability\n",
            "paragraph4": "where \n\n\n\n\nτ\n\nx\ny\n\n\n\n\n{\\displaystyle \\tau _{xy))\n\n is the amount of pheromone deposited for transition from state \n\n\n\nx\n\n\n{\\displaystyle x}\n\n to \n\n\n\ny\n\n\n{\\displaystyle y}\n\n, 0 ≤ \n\n\n\nα\n\n\n{\\displaystyle \\alpha }\n\n is a parameter to control the influence of \n\n\n\n\nτ\n\nx\ny\n\n\n\n\n{\\displaystyle \\tau _{xy))\n\n, \n\n\n\n\nη\n\nx\ny\n\n\n\n\n{\\displaystyle \\eta _{xy))\n\n is the desirability of state transition \n\n\n\nx\ny\n\n\n{\\displaystyle xy}\n\n (a priori knowledge, typically \n\n\n\n1\n\n/\n\n\nd\n\nx\ny\n\n\n\n\n{\\displaystyle 1/d_{xy))\n\n, where \n\n\n\nd\n\n\n{\\displaystyle d}\n\n is the distance) and \n\n\n\nβ\n\n\n{\\displaystyle \\beta }\n\n ≥ 1 is a parameter to control the influence of \n\n\n\n\nη\n\nx\ny\n\n\n\n\n{\\displaystyle \\eta _{xy))\n\n. \n\n\n\n\nτ\n\nx\nz\n\n\n\n\n{\\displaystyle \\tau _{xz))\n\n and \n\n\n\n\nη\n\nx\nz\n\n\n\n\n{\\displaystyle \\eta _{xz))\n\n represent the trail level and attractiveness for the other possible state transitions.\n",
            "subtitle2": "Pheromone update",
            "paragraph5": "Trails are usually updated when all ants have completed their solution, increasing or decreasing the level of trails corresponding to moves that were part of \"good\" or \"bad\" solutions, respectively. An example of a global pheromone updating rule is\n",
            "paragraph6": "where \n\n\n\n\nτ\n\nx\ny\n\n\n\n\n{\\displaystyle \\tau _{xy))\n\n is the amount of pheromone deposited for a state transition \n\n\n\nx\ny\n\n\n{\\displaystyle xy}\n\n, \n\n\n\nρ\n\n\n{\\displaystyle \\rho }\n\n is the pheromone evaporation coefficient, \n\n\n\nm\n\n\n{\\displaystyle m}\n\n is the number of ants and \n\n\n\nΔ\n\nτ\n\nx\ny\n\n\nk\n\n\n\n\n{\\displaystyle \\Delta \\tau _{xy}^{k))\n\n is the amount of pheromone deposited by \n\n\n\nk\n\n\n{\\displaystyle k}\n\nth ant, typically given for a TSP problem (with moves corresponding to arcs of the graph) by\n",
            "paragraph7": "where \n\n\n\n\nL\n\nk\n\n\n\n\n{\\displaystyle L_{k))\n\n is the cost of the \n\n\n\nk\n\n\n{\\displaystyle k}\n\nth ant's tour (typically length) and \n\n\n\nQ\n\n\n{\\displaystyle Q}\n\n is a constant.\n"
        },
        {
            "title": "Common extensions",
            "paragraph1": "Here are some of the most popular variations of ACO algorithms.\n",
            "subtitle1": "Ant system (AS)",
            "paragraph2": "The ant system is the first ACO algorithm. This algorithm corresponds to the one presented above. It was developed by Dorigo.\n",
            "subtitle2": "Ant colony system (ACS)",
            "paragraph3": "In the ant colony system algorithm, the original ant system was modified in three aspects: \n",
            "ol1": "1 - The edge selection is biased towards exploitation (i.e. favoring the probability of selecting the shortest edges with a large amount of pheromone);\n2 - While building a solution, ants change the pheromone level of the edges they are selecting by applying a local pheromone updating rule;\n3 - At the end of each iteration, only the best ant is allowed to update the trails by applying a modified global pheromone updating rule.[27]\n",
            "subtitle3": "Elitist ant system",
            "paragraph4": "In this algorithm, the global best solution deposits pheromone on its trail after every iteration (even if this trail has not been revisited), along with all the other ants. The elitist strategy has as its objective directing the search of all ants to construct a solution to contain links of the current best route.\n",
            "subtitle4": "Max-min ant system (MMAS)",
            "paragraph5": "This algorithm controls the maximum and minimum pheromone amounts on each trail. Only the global best tour or the iteration best tour are allowed to add pheromone to its trail. To avoid stagnation of the search algorithm, the range of possible pheromone amounts on each trail is limited to an interval [τmax,τmin]. All edges are initialized to τmax to force a higher exploration of solutions.  The trails are reinitialized to τmax when nearing stagnation.\n",
            "subtitle5": "Rank-based ant system (ASrank)",
            "paragraph6": "All solutions are ranked according to their length. Only a fixed number of the best ants in this iteration are allowed to update their trials. The amount of pheromone deposited is weighted for each solution, such that solutions with shorter paths deposit more pheromone than the solutions with longer paths.\n",
            "subtitle6": "Continuous orthogonal ant colony (COAC)",
            "paragraph7": "The pheromone deposit mechanism of COAC is to enable ants to search for solutions collaboratively and effectively. By using an orthogonal design method, ants in the feasible domain can explore their chosen regions rapidly and efficiently, with enhanced global search capability and accuracy. The orthogonal design method and the adaptive radius adjustment method can also be extended to other optimization algorithms for delivering wider advantages in solving practical problems.\n",
            "subtitle7": "Recursive ant colony optimization",
            "paragraph8": "It is a recursive form of ant system which divides the whole search domain into several sub-domains and solves the objective on these subdomains. The results from all the subdomains are compared and the best few of them are promoted for the next level. The subdomains corresponding to the selected results are further subdivided and the process is repeated until an output of desired precision is obtained. This method has been tested on ill-posed geophysical inversion problems and works well.\n"
        },
        {
            "title": "Convergence",
            "paragraph1": "For some versions of the algorithm, it is possible to prove that it is convergent (i.e., it is able to find the global optimum in finite time). The first evidence of convergence for an ant colony algorithm was made in 2000, the graph-based ant system algorithm, and later on for the ACS and MMAS algorithms. Like most metaheuristics, it is very difficult to estimate the theoretical speed of convergence. A performance analysis of a continuous ant colony algorithm with respect to its various parameters (edge selection strategy, distance measure metric, and pheromone evaporation rate) showed that its performance and rate of convergence are sensitive to the chosen parameter values, and especially to the value of the pheromone evaporation rate. In 2004, Zlochin and his colleagues showed that COAC-type algorithms could be assimilated methods of stochastic gradient descent, on the cross-entropy and estimation of distribution algorithm. They proposed these metaheuristics as a \"research-based model\".\n"
        },
        {
            "title": "Applications",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Knapsack_ants.svg/440px-Knapsack_ants.svg.png",
                "caption": "\nKnapsack problem: The ants prefer the smaller drop of honey over the more abundant, but less nutritious, sugar\n\t"
            },
            "paragraph1": "Ant colony optimization algorithms have been applied to many combinatorial optimization problems, ranging from quadratic assignment to protein folding or routing vehicles and a lot of derived methods have been adapted to dynamic problems in real variables, stochastic problems, multi-targets and parallel implementations.\nIt has also been used to produce near-optimal solutions to the travelling salesman problem. They have an advantage over simulated annealing and genetic algorithm approaches of similar problems when the graph may change dynamically; the ant colony algorithm can be run continuously and adapt to changes in real time. This is of interest in network routing and urban transportation systems.\n",
            "paragraph2": "The first ACO algorithm was called the ant system and it was aimed to solve the travelling salesman problem, in which the goal is to find the shortest round-trip to link a series of cities. The general algorithm is relatively simple and based on a set of ants, each making one of the possible round-trips along the cities. At each stage, the ant chooses to move from one city to another according to some rules:\n",
            "ol1": "1 - It must visit each city exactly once;\n2 - A distant city has less chance of being chosen (the visibility);\n3 - The more intense the pheromone trail laid out on an edge between two cities, the greater the probability that that edge will be chosen;\n4 - Having completed its journey, the ant deposits more pheromones on all edges it traversed, if the journey is short;\n5 - After each iteration, trails of pheromones evaporate.\n",
            "image2": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Aco_TSP.svg/1200px-Aco_TSP.svg.png",
                "caption": "\n"
            },
            "subtitle1": "Scheduling problem",
            "ul1": "Sequential ordering problem (SOP) [34]\nJob-shop scheduling problem (JSP)[35]\nOpen-shop scheduling problem (OSP)[36][37]\nPermutation flow shop problem (PFSP)[38]\nSingle machine total tardiness problem (SMTTP)[39]\nSingle machine total weighted tardiness problem (SMTWTP)[40][41][42]\nResource-constrained project scheduling problem (RCPSP)[43]\nGroup-shop scheduling problem (GSP)[44]\nSingle-machine total tardiness problem with sequence dependent setup times (SMTTPDST)[45]\nMultistage flowshop scheduling problem (MFSP) with sequence dependent setup/changeover times[46]\n",
            "subtitle2": "Vehicle routing problem",
            "ul2": "Capacitated vehicle routing problem (CVRP)[47][48][49]\nMulti-depot vehicle routing problem (MDVRP)[50]\nPeriod vehicle routing problem (PVRP)[51]\nSplit delivery vehicle routing problem (SDVRP)[52]\nStochastic vehicle routing problem (SVRP)[53]\nVehicle routing problem with pick-up and delivery (VRPPD)[54][55]\nVehicle routing problem with time windows (VRPTW)[56][57][58][59]\nTime dependent vehicle routing problem with time windows (TDVRPTW)[60]\nVehicle routing problem with time windows and multiple service workers (VRPTWMS)\n",
            "subtitle3": "Assignment problem",
            "ul3": "Quadratic assignment problem (QAP)[61]\nGeneralized assignment problem (GAP)[62][63]\nFrequency assignment problem (FAP)[64]\nRedundancy allocation problem (RAP)[65]\n",
            "subtitle4": "Set problem",
            "ul4": "Set cover problem (SCP)[66][67]\nPartition problem (SPP)[68]\nWeight constrained graph tree partition problem (WCGTPP)[69]\nArc-weighted l-cardinality tree problem (AWlCTP)[70]\nMultiple knapsack problem (MKP)[71]\nMaximum independent set problem (MIS)[72]\n",
            "subtitle5": "Device sizing problem in nanoelectronics physical design",
            "ul5": "Ant colony optimization (ACO) based optimization of 45 nm CMOS-based sense amplifier circuit could converge to optimal solutions in very minimal time.[73]\nAnt colony optimization (ACO) based reversible circuit synthesis could improve efficiency significantly.[74]\n",
            "subtitle6": "Antennas optimization and synthesis",
            "image3": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/b/bd/ANT_Antenna_1.jpg/440px-ANT_Antenna_1.jpg",
                "caption": "\n\t\tLoopback vibrators 10×10, synthesized by means of ACO algorithm[75]\n"
            },
            "image4": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/7/75/ANT_antenna_2.jpg/440px-ANT_antenna_2.jpg",
                "caption": "\n\t\tUnloopback vibrators 10×10, synthesized by means of ACO algorithm[75]\n"
            },
            "paragraph3": "To optimize the form of antennas, ant colony algorithms can be used. As example can be considered antennas RFID-tags based on ant colony algorithms (ACO), loopback and unloopback vibrators 10×10\n",
            "subtitle7": "Image processing",
            "paragraph4": "The ACO algorithm is used in image processing for image edge detection and edge linking.\n",
            "ul6": "Edge detection:\n",
            "paragraph5": "The graph here is the 2-D image and the ants traverse from one pixel depositing pheromone. The movement of ants from one pixel to another is directed by the local variation of the image's intensity values. This movement causes the highest density of the pheromone to be deposited at the edges.\n",
            "paragraph6": "The following are the steps involved in edge detection using ACO:\n",
            "paragraph7": "Step 1: Initialization. Randomly place \n\n\n\nK\n\n\n{\\displaystyle K}\n\n ants on the image \n\n\n\n\nI\n\n\nM\n\n1\n\n\n\nM\n\n2\n\n\n\n\n\n\n{\\displaystyle I_{M_{1}M_{2))}\n\n where \n\n\n\nK\n=\n(\n\nM\n\n1\n\n\n∗\n\nM\n\n2\n\n\n\n)\n\n\n\n1\n2\n\n\n\n\n\n\n{\\displaystyle K=(M_{1}*M_{2})^{\\tfrac {1}{2))}\n\n . Pheromone matrix \n\n\n\n\nτ\n\n(\ni\n,\nj\n)\n\n\n\n\n{\\displaystyle \\tau _{(i,j)))\n\n are initialized with a random value. The major challenge in the initialization process is determining the heuristic matrix.\n",
            "paragraph8": "There are various methods to determine the heuristic matrix. For the below example the heuristic matrix was calculated based on the local statistics:\nthe local statistics at the pixel position \n\n\n\n(\ni\n,\nj\n)\n\n\n{\\displaystyle (i,j)}\n\n.\n",
            "paragraph9": "where \n\n\n\nI\n\n\n{\\displaystyle I}\n\n is the image of size \n\n\n\n\nM\n\n1\n\n\n∗\n\nM\n\n2\n\n\n\n\n{\\displaystyle M_{1}*M_{2))\n\n,\n",
            "paragraph10": "is a normalization factor, and\n",
            "paragraph11": "\n\n\n\nf\n(\n⋅\n)\n\n\n{\\displaystyle f(\\cdot )}\n\n can be calculated using the following functions:\n",
            "paragraph12": "The parameter \n\n\n\nλ\n\n\n{\\displaystyle \\lambda }\n\n in each of above functions adjusts the functions’ respective shapes.\n",
            "paragraph13": "Step 2: Construction process. The ant's movement is based on 4-connected pixels or 8-connected pixels. The probability with which the ant moves is given by the probability equation \n\n\n\n\nP\n\nx\n,\ny\n\n\n\n\n{\\displaystyle P_{x,y))\n\n\n",
            "paragraph14": "Step 3 and Step 5: Update process. The pheromone matrix is updated twice. in step 3 the trail of the ant (given by \n\n\n\n\nτ\n\n(\nx\n,\ny\n)\n\n\n\n\n{\\displaystyle \\tau _{(x,y)))\n\n ) is updated where as in step 5 the evaporation rate of the trail is updated which is given by:\n",
            "paragraph15": "where \n\n\n\nψ\n\n\n{\\displaystyle \\psi }\n\n is the pheromone decay coefficient \n\n\n\n0\n<\nτ\n<\n1\n\n\n{\\displaystyle 0<\\tau <1}\n\n\n",
            "paragraph16": "Step 7: Decision process. Once the K ants have moved a fixed distance L for N iteration, the decision whether it is an edge or not is based on the threshold T on the pheromone matrixτ. Threshold for the below example is calculated based on Otsu's method.\n",
            "paragraph17": "Image edge detected using ACO: The images below are generated using different functions given by the equation (1) to (4).\n",
            "image5": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/e/ee/%28a%29Original_Image_%28b%29Image_Generated_using_equation%281%29_%28c%29Image_generated_using_equation%282%29_%28d%29_Image_generated_using_equation%283%29_%28e%29Image_generated_using_equation%284%29.jpg/440px-thumbnail.jpg",
                "caption": "\n"
            },
            "ul7": "Edge linking:[83] ACO has also proven effective in edge linking algorithms.\n",
            "subtitle8": "Other applications",
            "ul8": "Bankruptcy prediction[84]\nClassification[85]\nConnection-oriented network routing[86]\nConnectionless network routing[87][88]\nData mining[85][89][90][91]\nDiscounted cash flows in project scheduling[92]\nDistributed information retrieval[93][94]\nEnergy and electricity network design[95]\nGrid workflow scheduling problem[96]\nInhibitory peptide design for protein protein interactions[97]\nIntelligent testing system[98]\nPower electronic circuit design[99]\nProtein folding[100][101][102]\nSystem identification[103][104]\n"
        },
        {
            "title": "Definition difficulty",
            "image1": {
                "url": "//upload.wikimedia.org/wikipedia/commons/thumb/1/17/Aco_shortpath.svg/440px-Aco_shortpath.svg.png",
                "caption": "\n"
            },
            "paragraph1": "With an ACO algorithm, the shortest path in a graph, between two points A and B, is built from a combination of several paths. It is not easy to give a precise definition of what algorithm is or is not an ant colony, because the definition may vary according to the authors and uses. Broadly speaking, ant colony algorithms are regarded as populated metaheuristics with each solution represented by an ant moving in the search space. Ants mark the best solutions and take account of previous markings to optimize their search. They can be seen as probabilistic multi-agent algorithms using a probability distribution to make the transition between each iteration. In their versions for combinatorial problems, they use an iterative construction of solutions. According to some authors, the thing which distinguishes ACO algorithms from other relatives (such as algorithms to estimate the distribution or particle swarm optimization) is precisely their constructive aspect. In combinatorial problems, it is possible that the best solution eventually be found, even though no ant would prove effective. Thus, in the example of the Travelling salesman problem, it is not necessary that an ant actually travels the shortest route: the shortest route can be built from the strongest segments of the best solutions. However, this definition can be problematic in the case of problems in real variables, where no structure of 'neighbours' exists. The collective behaviour of social insects remains a source of inspiration for researchers. The wide variety of algorithms (for optimization or not) seeking self-organization in biological systems has led to the concept of \"swarm intelligence\", which is a very general framework in which ant colony algorithms fit.\n"
        },
        {
            "title": "Stigmergy algorithms",
            "paragraph1": "There is in practice a large number of algorithms claiming to be \"ant colonies\", without always sharing the general framework of optimization by canonical ant colonies. In practice, the use of an exchange of information between ants via the environment (a principle called \"stigmergy\") is deemed enough for an algorithm to belong to the class of ant colony algorithms. This principle has led some authors to create the term \"value\" to organize methods and behavior based on search of food, sorting larvae, division of labour and cooperative transportation.\n"
        },
        {
            "title": "Related methods"
        },
        {
            "title": "History",
            "paragraph1": "Chronology of ant colony optimization algorithms.\n",
            "ul1": "1959, Pierre-Paul Grassé invented the theory of stigmergy to explain the behavior of nest building in termites;[115]\n1983, Deneubourg and his colleagues studied the collective behavior of ants;[116]\n1988, and Moyson Manderick have an article on self-organization among ants;[117]\n1989, the work of Goss, Aron, Deneubourg and Pasteels on the collective behavior of Argentine ants, which will give the idea of ant colony optimization algorithms;[118]\n1989, implementation of a model of behavior for food by Ebling and his colleagues;[119]\n1991, M. Dorigo proposed the ant system in his doctoral thesis (which was published in 1992[7]). A technical report extracted from the thesis and co-authored by V. Maniezzo and A. Colorni[120] was published five years later;[26]\n1994, Appleby and Steward of British Telecommunications Plc published the first application to telecommunications networks[121]\n1995, Gambardella and Dorigo proposed ant-q,[122] the preliminary version of ant colony system as first estension of ant system;.[26]\n1996, Gambardella and Dorigo proposed ant colony system [123]\n1996, publication of the article on ant system;[26]\n2000, Hoos and Stützle invent the max-min ant system;[28]\n1997, Dorigo and Gambardella proposed ant colony system hybridized with local search;[27]\n1997, Schoonderwoerd and his colleagues published an improved application to telecommunication networks;[124]\n1998, Dorigo launches first conference dedicated to the ACO algorithms;[125]\n1998, Stützle proposes initial parallel implementations;[126]\n1999, Gambardella, Taillard and Agazzi proposed  macs-vrptw, first multi ant colony system applied to vehicle routing problems with time windows,[56]\n1999, Bonabeau, Dorigo and Theraulaz publish a book dealing mainly with artificial ants[127]\n2000, special issue of the Future Generation Computer Systems journal on ant algorithms[128]\n2000, first applications to the scheduling, scheduling sequence and the satisfaction of constraints;\n2000, Gutjahr provides the first evidence of convergence for an algorithm of ant colonies[129]\n2001, the first use of COA algorithms by companies (Eurobios and AntOptima);\n2001, Iredi and his colleagues published the first multi-objective algorithm[130]\n2002, first applications in the design of schedule, Bayesian networks;\n2002, Bianchi and her colleagues suggested the first algorithm for stochastic problem;[131]\n2004, Dorigo and Stützle publish the Ant Colony Optimization book with MIT Press [132]\n2004, Zlochin and Dorigo show that some algorithms are equivalent to the stochastic gradient descent, the cross-entropy method and algorithms to estimate distribution[33]\n2005, first applications to protein folding problems.\n2012, Prabhakar and colleagues publish research relating to the operation of individual ants communicating in tandem without pheromones, mirroring the principles of computer network organization. The communication model has been compared to the Transmission Control Protocol.[133]\n2016, first application to peptide sequence design.[97]\n2017, successful integration of the multi-criteria decision-making method PROMETHEE into the ACO algorithm (HUMANT algorithm).[134]\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Computer_science",
        "https://en.wikipedia.org/wiki/Operations_research",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Probability",
        "https://en.wikipedia.org/wiki/Ant",
        "https://en.wikipedia.org/wiki/Vehicle_routing_problem",
        "https://en.wikipedia.org/wiki/Routing",
        "https://en.wikipedia.org/wiki/Algorithm",
        "https://en.wikipedia.org/wiki/Ant_colony",
        "https://en.wikipedia.org/wiki/Parameter_space",
        "https://en.wikipedia.org/wiki/Pheromone",
        "https://en.wikipedia.org/wiki/Bees_algorithm",
        "https://en.wikipedia.org/wiki/Honey_bee",
        "https://en.wikipedia.org/wiki/Swarm_intelligence",
        "https://en.wikipedia.org/wiki/Metaheuristic",
        "https://en.wikipedia.org/wiki/Marco_Dorigo",
        "https://en.wikipedia.org/wiki/Ants",
        "https://en.wikipedia.org/wiki/Ant_colony",
        "https://en.wikipedia.org/wiki/Estimation_of_distribution_algorithm",
        "https://en.wikipedia.org/wiki/Random",
        "https://en.wikipedia.org/wiki/Pheromone",
        "https://en.wikipedia.org/wiki/Positive_feedback",
        "https://en.wikipedia.org/wiki/Ambient_networks",
        "https://en.wikipedia.org/wiki/Collective_intelligence",
        "https://en.wikipedia.org/wiki/Shortest_path_problem",
        "https://en.wikipedia.org/wiki/Travelling_salesman_problem",
        "https://en.wikipedia.org/wiki/Metaheuristic",
        "https://en.wikipedia.org/wiki/Stochastic_gradient_descent",
        "https://en.wikipedia.org/wiki/Estimation_of_distribution_algorithm",
        "https://en.wikipedia.org/wiki/Metaheuristic",
        "https://en.wikipedia.org/wiki/Knapsack_problem",
        "https://en.wikipedia.org/wiki/Combinatorial_optimization",
        "https://en.wikipedia.org/wiki/Protein",
        "https://en.wikipedia.org/wiki/Vehicle_routing_problem",
        "https://en.wikipedia.org/wiki/Parallel_computing",
        "https://en.wikipedia.org/wiki/Travelling_salesman_problem",
        "https://en.wikipedia.org/wiki/Simulated_annealing",
        "https://en.wikipedia.org/wiki/Genetic_algorithm",
        "https://en.wikipedia.org/wiki/Network_routing",
        "https://en.wikipedia.org/wiki/Quadratic_assignment_problem",
        "https://en.wikipedia.org/wiki/Generalized_assignment_problem",
        "https://en.wikipedia.org/wiki/Set_cover_problem",
        "https://en.wikipedia.org/wiki/Partition_problem",
        "https://en.wikipedia.org/wiki/Pixel",
        "https://en.wikipedia.org/wiki/Pixel",
        "https://en.wikipedia.org/wiki/Bankruptcy_prediction",
        "https://en.wikipedia.org/wiki/Classification",
        "https://en.wikipedia.org/wiki/Network_routing",
        "https://en.wikipedia.org/wiki/Data_mining",
        "https://en.wikipedia.org/wiki/Distributed_computing",
        "https://en.wikipedia.org/wiki/Information_retrieval",
        "https://en.wikipedia.org/wiki/Protein_protein_interaction",
        "https://en.wikipedia.org/wiki/Electronic_circuit_design",
        "https://en.wikipedia.org/wiki/Protein_folding",
        "https://en.wikipedia.org/wiki/People",
        "https://en.wikipedia.org/wiki/Metaheuristics",
        "https://en.wikipedia.org/wiki/Probabilistic",
        "https://en.wikipedia.org/wiki/Probability_distribution",
        "https://en.wikipedia.org/wiki/Iteration",
        "https://en.wikipedia.org/wiki/Social_insects",
        "https://en.wikipedia.org/wiki/Swarm_intelligence",
        "https://en.wikipedia.org/wiki/Stigmergy",
        "https://en.wikipedia.org/wiki/Genetic_algorithm",
        "https://en.wikipedia.org/wiki/Estimation_of_distribution_algorithm",
        "https://en.wikipedia.org/wiki/Evolutionary_algorithm",
        "https://en.wikipedia.org/wiki/Simulated_annealing",
        "https://en.wikipedia.org/wiki/Tabu_search",
        "https://en.wikipedia.org/wiki/Artificial_immune_system",
        "https://en.wikipedia.org/wiki/Particle_swarm_optimization",
        "https://en.wikipedia.org/wiki/Swarm_intelligence",
        "https://en.wikipedia.org/wiki/Intelligent_Water_Drops",
        "https://en.wikipedia.org/wiki/Swarm_intelligence",
        "https://en.wikipedia.org/wiki/Stochastic_diffusion_search",
        "https://en.wikipedia.org/wiki/Stigmergy",
        "https://en.wikipedia.org/wiki/Termites",
        "https://en.wikipedia.org/wiki/Collective_behavior",
        "https://en.wikipedia.org/wiki/Ants",
        "https://en.wikipedia.org/wiki/Telecommunications",
        "https://en.wikipedia.org/wiki/Telecommunication",
        "https://en.wikipedia.org/wiki/Scheduling_algorithm",
        "https://en.wikipedia.org/wiki/Constraint_satisfaction",
        "https://en.wikipedia.org/wiki/Limit_of_a_sequence",
        "https://en.wikipedia.org/wiki/Stochastic",
        "https://en.wikipedia.org/wiki/Stochastic_gradient_descent",
        "https://en.wikipedia.org/wiki/Protein_folding",
        "https://en.wikipedia.org/wiki/Transmission_Control_Protocol",
        "https://en.wikipedia.org/wiki/ISTE_Ltd",
        "https://en.wikipedia.org/wiki/ISTE_Ltd",
        "https://en.wikipedia.org/wiki/Lecture_Notes_in_Computer_Science",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/Wayback_Machine",
        "https://en.wikipedia.org/wiki/MATLAB",
        "https://en.wikipedia.org/wiki/Marco_Dorigo",
        "https://en.wikipedia.org/wiki/Luca_Maria_Gambardella",
        "https://en.wikipedia.org/wiki/Swarm_behaviour",
        "https://en.wikipedia.org/wiki/Bait_ball",
        "https://en.wikipedia.org/wiki/Collective_animal_behavior",
        "https://en.wikipedia.org/wiki/Feeding_frenzy",
        "https://en.wikipedia.org/wiki/Herd",
        "https://en.wikipedia.org/wiki/Herd_behavior",
        "https://en.wikipedia.org/wiki/Pack_hunter",
        "https://en.wikipedia.org/wiki/Shoaling_and_schooling",
        "https://en.wikipedia.org/wiki/Sort_sol",
        "https://en.wikipedia.org/wiki/Symmetry_breaking_of_escaping_ants",
        "https://en.wikipedia.org/wiki/Swarm_behaviour",
        "https://en.wikipedia.org/wiki/Swarming_motility",
        "https://en.wikipedia.org/wiki/Animal_migration",
        "https://en.wikipedia.org/wiki/Animal_migration",
        "https://en.wikipedia.org/wiki/Altitudinal_migration",
        "https://en.wikipedia.org/wiki/Animal_migration_tracking",
        "https://en.wikipedia.org/wiki/Coded_wire_tag",
        "https://en.wikipedia.org/wiki/Bird_migration",
        "https://en.wikipedia.org/wiki/Cell_migration",
        "https://en.wikipedia.org/wiki/Fish_migration",
        "https://en.wikipedia.org/wiki/Diel_vertical_migration",
        "https://en.wikipedia.org/wiki/Lessepsian_migration",
        "https://en.wikipedia.org/wiki/Salmon_run",
        "https://en.wikipedia.org/wiki/Sardine_run",
        "https://en.wikipedia.org/wiki/Natal_homing",
        "https://en.wikipedia.org/wiki/Philopatry",
        "https://en.wikipedia.org/wiki/Insect_migration",
        "https://en.wikipedia.org/wiki/Lepidoptera_migration",
        "https://en.wikipedia.org/wiki/Monarch_butterfly_migration",
        "https://en.wikipedia.org/wiki/Sea_turtle_migration",
        "https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithm",
        "https://en.wikipedia.org/wiki/Boids",
        "https://en.wikipedia.org/wiki/Crowd_simulation",
        "https://en.wikipedia.org/wiki/Particle_swarm_optimization",
        "https://en.wikipedia.org/wiki/Swarm_intelligence",
        "https://en.wikipedia.org/wiki/Collective_motion",
        "https://en.wikipedia.org/wiki/Active_matter",
        "https://en.wikipedia.org/wiki/Collective_motion",
        "https://en.wikipedia.org/wiki/Vicsek_model",
        "https://en.wikipedia.org/wiki/Swarm_robotics",
        "https://en.wikipedia.org/wiki/Ant_robotics",
        "https://en.wikipedia.org/wiki/Microbotics",
        "https://en.wikipedia.org/wiki/Nanorobotics",
        "https://en.wikipedia.org/wiki/Swarm_robotics",
        "https://en.wikipedia.org/wiki/Symbrion",
        "https://en.wikipedia.org/wiki/Allee_effect",
        "https://en.wikipedia.org/wiki/Animal_navigation",
        "https://en.wikipedia.org/wiki/Collective_intelligence",
        "https://en.wikipedia.org/wiki/Decentralised_system",
        "https://en.wikipedia.org/wiki/Eusociality",
        "https://en.wikipedia.org/wiki/Group_size_measures",
        "https://en.wikipedia.org/wiki/Microbial_intelligence",
        "https://en.wikipedia.org/wiki/Predator_satiation",
        "https://en.wikipedia.org/wiki/Quorum_sensing",
        "https://en.wikipedia.org/wiki/Spatial_organization",
        "https://en.wikipedia.org/wiki/Stigmergy",
        "https://en.wikipedia.org/wiki/Task_allocation_and_partitioning_of_social_insects",
        "https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms",
        "https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}