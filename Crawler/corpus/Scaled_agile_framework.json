{
    "url": "https://en.wikipedia.org/wiki/Scaled_agile_framework",
    "title": "Scaled agile framework",
    "table_of_contents": [
        "1 Challenges of scaling agile principles and practices",
        "1.1 Coping with longer planning horizons",
        "1.2 Keeping agile at abstract levels of responsibility",
        "1.3 Dealing with delegated authority",
        "1.4 Synchronizing deliverables",
        "1.5 Allowing time for innovation and planning",
        "2 Implementation",
        "2.1 Underlying principles of SAFe",
        "2.2 The SAFe framework",
        "2.3 Certifications",
        "3 See also",
        "4 References",
        "5 Further reading",
        "6 External links"
    ],
    "content": [
        {
            "paragraph1": "The scaled agile framework (SAFe) is a set of organization and workflow patterns intended to guide enterprises in scaling lean and agile practices. Along with large-scale Scrum (LeSS), disciplined agile delivery (DAD), and Nexus, SAFe is one of a growing number of frameworks that seek to address the problems encountered when scaling beyond a single team. SAFe is made freely available by Scaled Agile, Inc., which retains the copyrights and registered trademarks.\n",
            "paragraph2": "SAFe promotes alignment, collaboration, and delivery across large numbers of agile teams. It was developed by and for practitioners, by leveraging three primary bodies of knowledge: agile software development, lean product development, and systems thinking.\n",
            "paragraph3": "The primary reference for the scaled agile framework was originally the development of a big picture view of how work flowed from product management (or other stakeholders), through governance, program, and development teams, out to customers. With the collaboration of others in the agile community, this was progressively refined and then first formally described in a 2007 book. The framework continues to be developed and shared publicly; with an academy and an accreditation scheme supporting those who seek to implement, support, or train others in the adoption of SAFe.\n",
            "paragraph4": "Starting at its first release in 2011, five major versions have been released while the latest edition, version 5.1, was released in February 2021.\n",
            "paragraph5": "While SAFe continues to be recognised as the most common approach to scaling agile practices (at 30 percent and growing),[pageÂ needed], it also has received criticism for being too hierarchical and inflexible.\n"
        },
        {
            "title": "Challenges of scaling agile principles and practices",
            "subtitle1": "Coping with longer planning horizons",
            "paragraph1": "Development teams typically refine their backlog up to two to three iterations ahead, but in larger organizations the product marketing team needs to plan further ahead for their commitments to market and discussions with customers. They will often work with a very high level, 12 to 18-month roadmap, then plan collaboratively with the teams for three months of work. The development teams will still get into detailed refinement 2-3 iterations ahead, only getting into detailed task plans for the next iteration.\n",
            "subtitle2": "Keeping agile at abstract levels of responsibility",
            "paragraph2": "While development teams have a number of frameworks that define how they should be agile, there is very little that describes this for management. SAFe delivers many of the same principles, such as cross-functional teams, to the groups that handle the more abstract levels of responsibility and planning (product and portfolio). SAFe has also been criticized for aggregating too many disparate practices.\n",
            "subtitle3": "Dealing with delegated authority",
            "paragraph3": "In Scrum, the product owner is expected  to assume responsibility for the full product life-cycle, including the return on investment of development decisions, as well as performance in market. On large-scale developments, the organization wants a view across multiple team backlogs, such as provided by a product manager. Although SAFe assumes the product owner role sits with product management, it has nonetheless been criticized for separating product owners into the development organization.\n",
            "subtitle4": "Synchronizing deliverables",
            "paragraph4": "Agile frameworks are designed to enable the development team to be autonomous and free to design how they work. SAFe acknowledges that, at the scale of many tens or hundreds of development teams, it becomes increasingly chaotic for teams to fully self-organize. It therefore puts some constraints on this, so that where teams are working on the same product, their deliverables can be better synchronized for releasing together, although this has been one area in which SAFe has been criticized.\n",
            "subtitle5": "Allowing time for innovation and planning",
            "paragraph5": "The SAFe planning cycle recommends including an additional iteration after a release, allowing teams to improve their practices and are ready for the next planning increment. Earlier editions of SAFe also designed this to be a hardening iteration, namely to stabilize or harden the product before releasing it. This was predicated on the complications of working with large integration environments where dependencies prevented several matters from being tested until the very end. SAFe was criticized for this because it represented an anti-agile or waterfall element, but was in line with lean 90-day increments which make 13 weeks, and if doing two-week sprints you need six of them plus a one-week planning or hardening cycle. This is not included in recent editions of SAFe.\n"
        },
        {
            "title": "Implementation",
            "subtitle1": "Underlying principles of SAFe",
            "paragraph1": "According to its authors, SAFe is based upon ten underlying concepts, which are derived from existing lean and agile principles, as well as observation:\n",
            "ol1": "1 - Take an economic view\n2 - Apply systems thinking\n3 - Assume variability; preserve options\n4 - Build incrementally with fast integrated learning cycles\n5 - Base milestones on objective evaluation of working systems\n6 - Visualize and limit work-in-progress, reduce batch sizes, and manage queue lengths\n7 - Apply cadence (timing), synchronize with cross-domain planning\n8 - Unlock the intrinsic motivation of knowledge workers\n9 - Decentralize decision-making\n10 - Organize around value\n",
            "subtitle2": "The SAFe framework",
            "paragraph2": "In SAFe version 5.1, there are four configurations: essential, portfolio, large solution and full:\n",
            "ul1": "Essential SAFe is the most basic configuration. It describes the most critical elements needed and is intended to provide the majority of the framework's benefits. It includes the team and program level (which it calls agile release trains or ARTs).\nLarge Solution SAFe allows for coordination and synchronization across multiple programs, but without the portfolio considerations. In earlier versions of SAFe, this level was referred to as value stream.\nPortfolio SAFe includes concerns for strategic direction, investment funding, and lean governance.\nFull SAFe combines the other three levels.\n",
            "subtitle3": "Certifications",
            "paragraph3": "Scaled Agile provides certifications that cover different areas and knowledge levels.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Software_development",
        "https://en.wikipedia.org/wiki/Software_development_process",
        "https://en.wikipedia.org/wiki/Requirements_analysis",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Software_construction",
        "https://en.wikipedia.org/wiki/Software_testing",
        "https://en.wikipedia.org/wiki/Debugging",
        "https://en.wikipedia.org/wiki/Software_deployment",
        "https://en.wikipedia.org/wiki/Software_maintenance",
        "https://en.wikipedia.org/wiki/Software_engineering",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Cleanroom_software_engineering",
        "https://en.wikipedia.org/wiki/Incremental_build_model",
        "https://en.wikipedia.org/wiki/Software_prototyping",
        "https://en.wikipedia.org/wiki/Spiral_model",
        "https://en.wikipedia.org/wiki/Waterfall_model",
        "https://en.wikipedia.org/wiki/Software_development_methodology",
        "https://en.wikipedia.org/wiki/Adaptive_software_development",
        "https://en.wikipedia.org/wiki/DevOps",
        "https://en.wikipedia.org/wiki/Disciplined_agile_delivery",
        "https://en.wikipedia.org/wiki/Dynamic_systems_development_method",
        "https://en.wikipedia.org/wiki/Iterative_and_incremental_development",
        "https://en.wikipedia.org/wiki/Lean_software_development",
        "https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework",
        "https://en.wikipedia.org/wiki/Personal_software_process",
        "https://en.wikipedia.org/wiki/Rapid_application_development",
        "https://en.wikipedia.org/wiki/Rational_Unified_Process",
        "https://en.wikipedia.org/wiki/SEMAT",
        "https://en.wikipedia.org/wiki/Team_software_process",
        "https://en.wikipedia.org/wiki/OpenUP",
        "https://en.wikipedia.org/wiki/Unified_Process",
        "https://en.wikipedia.org/wiki/Extreme_programming",
        "https://en.wikipedia.org/wiki/Software_configuration_management",
        "https://en.wikipedia.org/wiki/Software_documentation",
        "https://en.wikipedia.org/wiki/Software_quality_assurance",
        "https://en.wikipedia.org/wiki/Software_project_management",
        "https://en.wikipedia.org/wiki/User_experience",
        "https://en.wikipedia.org/wiki/Continuous_integration",
        "https://en.wikipedia.org/wiki/Continuous_delivery",
        "https://en.wikipedia.org/wiki/Pair_programming",
        "https://en.wikipedia.org/wiki/Specification_by_example",
        "https://en.wikipedia.org/wiki/Programming_tool",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Debugger",
        "https://en.wikipedia.org/wiki/Graphical_user_interface_builder",
        "https://en.wikipedia.org/wiki/UML_tool",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Build_automation",
        "https://en.wikipedia.org/wiki/Infrastructure_as_code",
        "https://en.wikipedia.org/wiki/A_Guide_to_the_Business_Analysis_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration",
        "https://en.wikipedia.org/wiki/IEEE_Standards_Association",
        "https://en.wikipedia.org/wiki/ISO_9001",
        "https://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge",
        "https://en.wikipedia.org/wiki/ITIL",
        "https://en.wikipedia.org/wiki/International_Requirements_Engineering_Board",
        "https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
        "https://en.wikipedia.org/wiki/Glossary_of_computer_science",
        "https://en.wikipedia.org/wiki/Glossary_of_electrical_and_electronics_engineering",
        "https://en.wikipedia.org/wiki/Outline_of_software_development",
        "https://en.wikipedia.org/wiki/Scaling_of_innovations",
        "https://en.wikipedia.org/wiki/Lean_software_development",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Disciplined_agile_delivery",
        "https://en.wikipedia.org/wiki/Agile_software_development",
        "https://en.wikipedia.org/wiki/Lean_product_development",
        "https://en.wikipedia.org/wiki/Systems_thinking",
        "https://en.wikipedia.org/wiki/Product_management",
        "https://en.wikipedia.org/wiki/Project_stakeholder",
        "https://en.wikipedia.org/wiki/Project_governance",
        "https://en.wikipedia.org/wiki/Program_management",
        "https://en.wikipedia.org/wiki/Software_developer",
        "https://en.wikipedia.org/wiki/Customer",
        "https://en.wikipedia.org/wiki/Hierarchy",
        "https://en.wikipedia.org/wiki/Product_lifecycle",
        "https://en.wikipedia.org/wiki/Return_on_investment",
        "https://en.wikipedia.org/wiki/Product_manager",
        "https://en.wikipedia.org/wiki/Decentralization",
        "https://en.wikipedia.org/wiki/Value_stream",
        "https://en.wikipedia.org/wiki/Ken_Schwaber",
        "https://en.wikipedia.org/wiki/CIO_magazine",
        "https://en.wikipedia.org/wiki/Scaled_agile_framework",
        "https://en.wikipedia.org/wiki/Scaled_agile_framework",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}