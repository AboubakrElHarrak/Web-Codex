{
    "url": "https://en.wikipedia.org/wiki/Object_Pascal",
    "title": "Object Pascal",
    "table_of_contents": [
        "1 History",
        "1.1 Apple Pascal",
        "1.2 Clascal and Apple's early Object Pascal",
        "2 Borland, Inprise, CodeGear, and Embarcadero years",
        "3 Versions",
        "4 Compilers",
        "4.1 Legacy products",
        "5 Interpreters",
        "6 Sample \"Hello World\" programs",
        "6.1 Apple version",
        "6.2 Turbo Pascal version",
        "6.2.1 Stack based allocation",
        "6.2.2 Heap based allocation",
        "6.3 Delphi and Free Pascal version",
        "6.4 Modern Pascal version",
        "6.5 Oxygene version",
        "6.6 DWScript (Smart Pascal) version",
        "7 Development",
        "8 References",
        "9 External links",
        "9.1 Delphi"
    ],
    "content": [
        {
            "paragraph1": "Object Pascal is an extension to the programming language Pascal that provides object-oriented programming (OOP) features such as classes and methods.\n",
            "paragraph2": "The language was originally developed by Apple Computer as Clascal for the Lisa Workshop development system. As Lisa gave way to Macintosh, Apple collaborated with Niklaus Wirth, the author of Pascal, to develop an officially standardized version of Clascal. This was renamed Object Pascal. Through the mid-1980s, Object Pascal was the main programming language for early versions of the MacApp application framework. The language lost its place as the main development language on the Mac in 1991 with the release of the C++-based MacApp 3.0. Official support ended in 1996.\n",
            "paragraph3": "Symantec also developed a compiler for Object Pascal for their Think Pascal product, which could compile programs much faster than Apple's own Macintosh Programmer's Workshop (MPW). Symantec then developed the Think Class Library (TCL), based on MacApp concepts, which could be called from both Object Pascal and THINK C. The Think suite largely displaced MPW as the main development platform on the Mac in the late 1980s.\n",
            "paragraph4": "Symantec ported Object Pascal to the PC, and developed a similar object framework on that platform. In contrast to TCL, which eventually migrated to C++, the PC libraries remained mainly based on Pascal.\n",
            "paragraph5": "Borland added support for object-oriented programming to Turbo Pascal 5.5, which would eventually become the basis for the Object Pascal dialect used in Delphi. Delphi remained mainstream for business applications on the PC into the early 2000s, and was partly displaced in the 2000s with the introduction of the .NET Framework.\n"
        },
        {
            "title": "History",
            "subtitle1": "Apple Pascal",
            "paragraph1": "Pascal became a major language in the programming world in the 1970s, with high-quality implementations on most minicomputer platforms and microcomputers. Among the later was the UCSD Pascal system, which compiled to an intermediate p-System code format that could then run on multiple platforms. Apple licensed UCSD and used it as the basis for their Apple Pascal system for the Apple II and Apple III.\n",
            "paragraph2": "Pascal became one of the major languages in the company in this period. With the start of the Apple Lisa project, Pascal was selected as the main programming language of the platform, although this time as a compiler in contrast to the p-System interpreter.\n",
            "subtitle2": "Clascal and Apple's early Object Pascal",
            "paragraph3": "Object Pascal is an extension of the Pascal language that was developed at Apple Computer by a team led by Larry Tesler in consultation with Niklaus Wirth, the inventor of Pascal. It is descended from an earlier object-oriented version of Pascal named Clascal, which was available on the Lisa computer.\n",
            "paragraph4": "Object Pascal was needed to support MacApp, an expandable Macintosh application framework that would now be termed a class library. Object Pascal extensions, and MacApp, were developed by Barry Haynes, Ken Doyle, and Larry Rosenstein, and were tested by Dan Allen. Larry Tesler oversaw the project, which began very early in 1985 and became a product in 1986.\n",
            "paragraph5": "An Object Pascal extension was also implemented in the Think Pascal integrated development environment (IDE). The IDE includes the compiler and an editor with syntax highlighting and checking, a powerful debugger, and a class library. Many developers preferred Think Pascal over Apple's implementation of Object Pascal because Think Pascal offered a much faster compile–link–debug cycle, and tight integration of its tools. The last official release of Think Pascal was 4.01, in 1992. Symantec later released an unofficial version 4.5d4 at no charge.\n",
            "paragraph6": "Apple dropped support for Object Pascal when they moved from Motorola 68000 series chips to IBM's PowerPC architecture in 1994. MacApp 3.0, had already been rewritten in C++ and ported to this platform.\n",
            "paragraph7": "Metrowerks offered with CodeWarrior an Object Pascal compiler for Macintosh that targeted both 68k and PowerPC, both in their IDE and as MPW tools. Macintosh developers using Object Pascal had a path to port to the PowerPC, even architecture after both Apple and Symantec dropped support. MacApp 2.0, written in Object Pascal, was ported to the PowerPC using CodeWarrior. \n"
        },
        {
            "title": "Borland, Inprise, CodeGear, and Embarcadero years",
            "paragraph1": "In 1986, Borland introduced similar extensions, also named Object Pascal, to the Turbo Pascal product for the Macintosh, and in 1989 for Turbo Pascal 5.5 for DOS. When Borland refocused from DOS to Windows in 1994, they created a successor to Turbo Pascal, named Delphi, and introduced a new set of extensions to create what is now known as the Delphi language.\n",
            "paragraph2": "The development of Delphi started in 1993 and Delphi 1.0 was officially released in the United States on 14 February 1995. While code using the Turbo Pascal object model could still be compiled, Delphi featured a new syntax using the keyword class in preference to object, the Create constructor and a virtual Destroy destructor (and negating having to call the New and Dispose procedures), properties, method pointers, and some other things. These were inspired by the ISO working draft for object-oriented extensions, but many of the differences from Turbo Pascal's dialect (such as the draft's requirement that all methods be virtual) were ignored.\n",
            "paragraph3": "The Delphi language has continued to evolve over the years to support constructs such as dynamic arrays, generics and anonymous methods. The old object syntax introduced by Apple (\"Old-Style Object Types\") is still supported.\n"
        },
        {
            "title": "Versions",
            "ul1": "Borland used the name Object Pascal for the programming language in the first versions, but later renamed it to Delphi. Compilers that claim to be compatible with Object Pascal are often trying to be compatible with Delphi source code.[citation needed] Because Delphi is a trademark, compatible compilers continue using the name Object Pascal.\nEmbarcadero Technologies, which purchased Delphi in 2008,[7] sells the Delphi integrated development environment (IDE) that compiles the Delphi dialect of Object Pascal to Windows and macOS, iOS, Android and Web.\n.NET support existed from Delphi 8 through Delphi 2005, 2006, and 2007, which now has been replaced by another language, Oxygene (see below), which is not fully backward-compatible.\nThe Oxygene language developed by RemObjects Software targets the Common Language Infrastructure, the Java (software platform) Runtime Environment and Apple's Cocoa frameworks for iOS and macOS.\nThe open source Free Pascal project allows the language to be compiled for a wide range of operating systems, including Linux (32-bit, 64-bit), FreeBSD, Classic Mac OS, macOS, Solaris, Windows API (32, 64, CE), the ARM instruction set architecture (ISA), and several other hardware architectures. The first version of Free Pascal for the iPhone software development kit (SDK) 2.x was announced on January 17, 2009.[8]\nThe Smart Pascal language[9] targets ECMAScript–JavaScript and is used in Smart Mobile Studio, written by Jon Lennart Aasenden and published by Optimale Systemer (2012). The language greatly simplifies HTML5 development through object-oriented, and rapid application development (RAD) methods. Smart Pascal integrates tightly with established technologies such as node.js, Embarcadero DataSnap, and Remobjects SDK to produce high-performance client–server model web applications. The language allows easy creation of visual components and reusable libraries. The Smart Pascal dialect stems from the DWScript language, extended to better integrate with the JavaScript environment and libraries, such as asm sections which are plain JavaScript but have access to Pascal symbols, or external classes which map directly to prototypal JavaScript classes. Smart Pascal introduces true inheritance, classes, partial classes, interfaces, a virtual method table and many other advanced constructs which are not a part of JavaScript by default.\nMIDletPascal runs on a Java virtual machine (JVM) bytecode platform; which Free Pascal also targets, with far more features.\nThe Morfik Pascal language, developed by Morfik, targets Ajax-enabled Web applications. The compiler is built into the company's AppsBuilder IDE and allows Object Pascal code to be used in implementing code to execute in a browser or server. It uses the Free Pascal compiler to generate native binaries from Object Pascal.\nThe open source GNU Pascal compiler is available as a front-end to the GNU Compiler Collection, which implements the International Organization for Standardization (ISO) 7185 Pascal standard, and most of the ISO 10206 Extended Pascal standard.\nTurbo51 is a free compiler to program Intel 8051 chips.[10]\nWDSibyl is an open source Delphi-like IDE and compiler available for Microsoft Windows and OS/2,[11] and is a commercial Turbo Pascal compatible environment released by a company named Speedsoft that was later developed into a Delphi-like RAD environment named Sybil, and then open sourced under the GPL when that company closed down. Wolfgang Draxler (WD) now maintains the software. The compiler used seems to be located in a DLL and is not open-source.\n"
        },
        {
            "title": "Compilers",
            "paragraph1": "Object Pascal compilers are available for a wide range of operating systems and architectures.\n",
            "ul1": "Delphi is probably the best known compiler. It is the successor of the highly successful Borland Pascal and Turbo Pascal product line. It targets Windows 9x, the Windows NT family, .NET Framework (Delphi 8, 2005, 2007), macOS (Delphi XE2 and later), iOS (Delphi XE2 and later, generating native binaries in XE4 and later), Android (Delphi XE5 and later, generating native binaries in XE5 and later). Support for .NET finally became a separate product known as Oxygene (see below).\nFree Pascal Compiler (FPC) is an open-source Object Pascal compiler that supports many Pascal dialects, including Turbo Pascal 7, Delphi, and others. Currently, FPC can generate code for IA-32, x86-64, PowerPC, SPARC, and ARM processors, and for several operating systems, including Microsoft Windows, Linux, FreeBSD, Classic Mac OS, and macOS (with an Xcode integration kit). Several separate projects exist to facilitate rapid application development with FPC, the most prominent one being Lazarus (IDE).\nGNU Pascal (a separately distributed part of the GNU Compiler Collection), while not formally aimed at the Delphi dialect of Pascal, does contain a Turbo Pascal compatibility mode, and is very slowly incorporating a few Delphi language features. It is unsuitable for recompiling large bodies of Delphi code directly, but is notable as having prolific support for operating systems and hardware architectures.\nOxygene (formerly Chrome) is an Object Pascal compiler from RemObjects Software that integrates into Microsoft Visual Studio. It is also available as free command-line interface compiler that runs native on CLI. It is three compilers in one, each targeting a different platform: Echoes for .NET Framework, Mono, WinRT and Windows Phone 8, Cooper for JDK and Android, and Nougat for iOS and macOS.\nMIDletPascal is a mobile application development tool that generates Java ME bytecode.\nPocketStudio is a Pascal-based integrated development environment (IDE) for Palm OS.\nSmart Mobile Studio is a source-to-source compiler that transforms Pascal source code to JavaScript\nUltibo.org Core is based on Free Pascal, with development in the Lazarus IDE for embedded Raspberry Pi applications.\n",
            "subtitle1": "Legacy products",
            "ul2": "Borland Kylix was a Linux variant of Delphi which only targets Intel 32-bit Linux using the Qt library. It does not work out of the box with most modern Linux distributions.\nVirtual Pascal was a free 32-bit Turbo Pascal and Delphi compatible compiler for mainly OS/2 and Microsoft Windows. Later, it also received a DOS+ Extender and an experimental Linux cross-compiler. The compiler's development stopped at about the level of Delphi 2. In 2007, its official website ceased to operate, and further development ceased.\n"
        },
        {
            "title": "Interpreters",
            "paragraph1": "Pascal Script (formerly InnerFuse) and DWScript (Delphi Web Script) are open-source Object Pascal interpreters and scripting engines written in Delphi. They support subsets of Object Pascal. DWScript can also compile Object Pascal code into JavaScript code (Smart Pascal), and supports just-in-time compilation (JIT). Modern Pascal provides 3 different interpreters: a command-line interface (CLI), Apache Module (Celerity), and CodeRunner (node.js like solution able to handle different scripts per port), besides the ability to compile and protect a script's source code.\n"
        },
        {
            "title": "Sample \"Hello World\" programs",
            "paragraph1": "Here are several \"Hello World\" programs in different Object Pascal versions.\n",
            "subtitle1": "Apple version",
            "subtitle2": "Turbo Pascal version",
            "paragraph2": "Still supported in Delphi and Free Pascal. FPC also packages its own substitutes for the libraries/units. Delphi doesn't. The Free Pascal 1.0 series and the FPC textmode IDE are the largest open codebases in this dialect. Free Pascal 2.0 was rewritten in a more Delphi-like dialect, and the textmode IDE and related frameworks (Free Vision) are the only parts in the TP version of Object Pascal.\n",
            "paragraph3": "Another example:\n",
            "paragraph4": "This works based on pointer copy, unless there is a specific allocation for a deeper copy.\n",
            "subtitle3": "Delphi and Free Pascal version",
            "paragraph5": "Note that the object construct is still available in Delphi and Free Pascal.\n",
            "subtitle4": "Modern Pascal version",
            "subtitle5": "Oxygene version",
            "subtitle6": "DWScript (Smart Pascal) version",
            "paragraph6": "The method implementation can also be made in a distinct location as in other Object Pascal dialects.\n"
        },
        {
            "title": "Development",
            "paragraph1": "Many features have been introduced continuously to Object Pascal with extensions to Delphi and extensions to FreePascal. In reaction to criticism, Free Pascal has adopted generics with the same syntax as Delphi, provided Delphi compatibility mode is selected, and both Delphi (partial) and Free Pascal (more extensive) support operator overloading. Delphi has also introduced many other features since version 7, including generics. Whereas FreePascal tries to be compatible to Delphi in Delphi compatibility mode, it also usually introduced many new features to the language that are not always available in Delphi.\n"
        }
    ],
    "links": [
        "https://en.wikipedia.org/wiki/Programming_paradigm",
        "https://en.wikipedia.org/wiki/Imperative_programming",
        "https://en.wikipedia.org/wiki/Structured_programming",
        "https://en.wikipedia.org/wiki/Functional_programming",
        "https://en.wikipedia.org/wiki/Generic_programming",
        "https://en.wikipedia.org/wiki/Niklaus_Wirth",
        "https://en.wikipedia.org/wiki/Software_design",
        "https://en.wikipedia.org/wiki/Larry_Tesler",
        "https://en.wikipedia.org/wiki/Niklaus_Wirth",
        "https://en.wikipedia.org/wiki/Anders_Hejlsberg",
        "https://en.wikipedia.org/wiki/Software_developer",
        "https://en.wikipedia.org/wiki/Type_system",
        "https://en.wikipedia.org/wiki/Type_system",
        "https://en.wikipedia.org/wiki/Computing_platform",
        "https://en.wikipedia.org/wiki/ARM_architecture",
        "https://en.wikipedia.org/wiki/X86",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/Ppc64",
        "https://en.wikipedia.org/wiki/SPARC",
        "https://en.wikipedia.org/wiki/MIPS_architecture",
        "https://en.wikipedia.org/wiki/Common_Language_Infrastructure",
        "https://en.wikipedia.org/wiki/Filename_extension",
        "https://en.wikipedia.org/wiki/Programming_language_implementation",
        "https://en.wikipedia.org/wiki/X86",
        "https://en.wikipedia.org/wiki/ARM_architecture",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/X86",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/Ppc64",
        "https://en.wikipedia.org/wiki/SPARC",
        "https://en.wikipedia.org/wiki/MIPS_architecture",
        "https://en.wikipedia.org/wiki/ARM_architecture",
        "https://en.wikipedia.org/wiki/Common_Language_Infrastructure",
        "https://en.wikipedia.org/wiki/JavaScript",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/Simula",
        "https://en.wikipedia.org/wiki/Smalltalk",
        "https://en.wikipedia.org/wiki/Apple_Computer",
        "https://en.wikipedia.org/wiki/Apple_Lisa",
        "https://en.wikipedia.org/wiki/Macintosh",
        "https://en.wikipedia.org/wiki/Niklaus_Wirth",
        "https://en.wikipedia.org/wiki/MacApp",
        "https://en.wikipedia.org/wiki/Application_framework",
        "https://en.wikipedia.org/wiki/NortonLifeLock",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/THINK_C",
        "https://en.wikipedia.org/wiki/Borland",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/Minicomputer",
        "https://en.wikipedia.org/wiki/Microcomputer",
        "https://en.wikipedia.org/wiki/UCSD_Pascal",
        "https://en.wikipedia.org/wiki/Apple_Pascal",
        "https://en.wikipedia.org/wiki/Apple_II",
        "https://en.wikipedia.org/wiki/Apple_III",
        "https://en.wikipedia.org/wiki/Apple_Lisa",
        "https://en.wikipedia.org/wiki/Apple_Computer",
        "https://en.wikipedia.org/wiki/Larry_Tesler",
        "https://en.wikipedia.org/wiki/Niklaus_Wirth",
        "https://en.wikipedia.org/wiki/Clascal",
        "https://en.wikipedia.org/wiki/Apple_Lisa",
        "https://en.wikipedia.org/wiki/MacApp",
        "https://en.wikipedia.org/wiki/Class_library",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Syntax_highlighting",
        "https://en.wikipedia.org/wiki/Debugger",
        "https://en.wikipedia.org/wiki/NortonLifeLock",
        "https://en.wikipedia.org/wiki/Motorola_68000_series",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/Metrowerks",
        "https://en.wikipedia.org/wiki/CodeWarrior",
        "https://en.wikipedia.org/wiki/Motorola_68000_series",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/MacApp",
        "https://en.wikipedia.org/wiki/CodeWarrior",
        "https://en.wikipedia.org/wiki/Borland",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/DOS",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/International_Organization_for_Standardization",
        "https://en.wikipedia.org/wiki/Draft_document",
        "https://en.wikipedia.org/wiki/Virtual_function",
        "https://en.wikipedia.org/wiki/Dynamic_array",
        "https://en.wikipedia.org/wiki/Generic_programming",
        "https://en.wikipedia.org/wiki/Anonymous_function",
        "https://en.wikipedia.org/wiki/Borland",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Source_code",
        "https://en.wikipedia.org/wiki/Trademark",
        "https://en.wikipedia.org/wiki/Embarcadero_Technologies",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Windows",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/IOS",
        "https://en.wikipedia.org/wiki/RemObjects_Software",
        "https://en.wikipedia.org/wiki/Common_Language_Infrastructure",
        "https://en.wikipedia.org/wiki/IOS",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/Open_source",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Linux",
        "https://en.wikipedia.org/wiki/FreeBSD",
        "https://en.wikipedia.org/wiki/Classic_Mac_OS",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/Windows_API",
        "https://en.wikipedia.org/wiki/Windows_CE",
        "https://en.wikipedia.org/wiki/ARM_architecture",
        "https://en.wikipedia.org/wiki/Instruction_set_architecture",
        "https://en.wikipedia.org/wiki/IPhone",
        "https://en.wikipedia.org/wiki/Software_development_kit",
        "https://en.wikipedia.org/wiki/ECMAScript",
        "https://en.wikipedia.org/wiki/JavaScript",
        "https://en.wikipedia.org/wiki/HTML5",
        "https://en.wikipedia.org/wiki/Rapid_application_development",
        "https://en.wikipedia.org/wiki/Virtual_method_table",
        "https://en.wikipedia.org/wiki/MIDletPascal",
        "https://en.wikipedia.org/wiki/Java_virtual_machine",
        "https://en.wikipedia.org/wiki/Bytecode",
        "https://en.wikipedia.org/wiki/Morfik",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/GNU_Pascal",
        "https://en.wikipedia.org/wiki/GNU_Compiler_Collection",
        "https://en.wikipedia.org/wiki/International_Organization_for_Standardization",
        "https://en.wikipedia.org/wiki/Intel_8051",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/Windows_9x",
        "https://en.wikipedia.org/wiki/Windows_NT",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/IOS",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/PowerPC",
        "https://en.wikipedia.org/wiki/SPARC",
        "https://en.wikipedia.org/wiki/ARM_architecture",
        "https://en.wikipedia.org/wiki/Microsoft_Windows",
        "https://en.wikipedia.org/wiki/Linux",
        "https://en.wikipedia.org/wiki/FreeBSD",
        "https://en.wikipedia.org/wiki/Classic_Mac_OS",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/Xcode",
        "https://en.wikipedia.org/wiki/GNU_Pascal",
        "https://en.wikipedia.org/wiki/GNU_Compiler_Collection",
        "https://en.wikipedia.org/wiki/RemObjects_Software",
        "https://en.wikipedia.org/wiki/Microsoft_Visual_Studio",
        "https://en.wikipedia.org/wiki/Common_Language_Infrastructure",
        "https://en.wikipedia.org/wiki/WinRT",
        "https://en.wikipedia.org/wiki/Windows_Phone_8",
        "https://en.wikipedia.org/wiki/JDK",
        "https://en.wikipedia.org/wiki/IOS",
        "https://en.wikipedia.org/wiki/MacOS",
        "https://en.wikipedia.org/wiki/MIDletPascal",
        "https://en.wikipedia.org/wiki/Java_ME",
        "https://en.wikipedia.org/wiki/PocketStudio",
        "https://en.wikipedia.org/wiki/Integrated_development_environment",
        "https://en.wikipedia.org/wiki/Palm_OS",
        "https://en.wikipedia.org/wiki/Source_code",
        "https://en.wikipedia.org/wiki/JavaScript",
        "https://en.wikipedia.org/wiki/Raspberry_Pi",
        "https://en.wikipedia.org/wiki/Borland_Kylix",
        "https://en.wikipedia.org/wiki/Linux",
        "https://en.wikipedia.org/wiki/Virtual_Pascal",
        "https://en.wikipedia.org/wiki/Pascal_Script",
        "https://en.wikipedia.org/wiki/Source_code",
        "https://en.wikipedia.org/wiki/Operator_overloading",
        "https://en.wikipedia.org/wiki/InfoWorld",
        "https://en.wikipedia.org/wiki/Macworld",
        "https://en.wikipedia.org/wiki/MacTech",
        "https://en.wikipedia.org/wiki/MacTech",
        "https://en.wikipedia.org/wiki/Pascal_Script",
        "https://en.wikipedia.org/wiki/Clascal",
        "https://en.wikipedia.org/wiki/Concurrent_Pascal",
        "https://en.wikipedia.org/wiki/SuperPascal",
        "https://en.wikipedia.org/wiki/Compiler",
        "https://en.wikipedia.org/wiki/PocketStudio",
        "https://en.wikipedia.org/wiki/VSI_Pascal",
        "https://en.wikipedia.org/wiki/IP_Pascal",
        "https://en.wikipedia.org/wiki/Free_Pascal",
        "https://en.wikipedia.org/wiki/GNU_Pascal",
        "https://en.wikipedia.org/wiki/Turbo51",
        "https://en.wikipedia.org/wiki/MIDletPascal",
        "https://en.wikipedia.org/wiki/Pic_Micro_Pascal",
        "https://en.wikipedia.org/wiki/Amsterdam_Compiler_Kit",
        "https://en.wikipedia.org/wiki/Virtual_Pascal",
        "https://en.wikipedia.org/wiki/Apple_Pascal",
        "https://en.wikipedia.org/wiki/Turbo_Pascal",
        "https://en.wikipedia.org/wiki/Microsoft_Pascal",
        "https://en.wikipedia.org/wiki/UCSD_Pascal",
        "https://en.wikipedia.org/wiki/Application_programming_interface",
        "https://en.wikipedia.org/wiki/Component_Library_for_Cross_Platform",
        "https://en.wikipedia.org/wiki/Free_Component_Library",
        "https://en.wikipedia.org/wiki/FireMonkey",
        "https://en.wikipedia.org/wiki/Lazarus_Component_Library",
        "https://en.wikipedia.org/wiki/Object_Windows_Library",
        "https://en.wikipedia.org/wiki/Free_Pascal_Runtime_Library",
        "https://en.wikipedia.org/wiki/Turbo_Vision",
        "https://en.wikipedia.org/wiki/Visual_Component_Library",
        "https://en.wikipedia.org/wiki/Microcomputer",
        "https://en.wikipedia.org/wiki/Pascal_MicroEngine",
        "https://en.wikipedia.org/wiki/Comparison_of_Pascal_and_C",
        "https://en.wikipedia.org/wiki/Comparison_of_Pascal_and_Delphi",
        "https://en.wikipedia.org/wiki/ALGOL",
        "https://en.wikipedia.org/wiki/Component_Pascal",
        "https://en.wikipedia.org/wiki/Niklaus_Wirth",
        "https://en.wikipedia.org/wiki/Programming_language",
        "https://en.wikipedia.org/wiki/PL360",
        "https://en.wikipedia.org/wiki/ALGOL_W",
        "https://en.wikipedia.org/wiki/Modula",
        "https://en.wikipedia.org/wiki/Active_Oberon",
        "https://en.wikipedia.org/wiki/Operating_system",
        "https://en.wikipedia.org/wiki/Wirth_syntax_notation",
        "https://en.wikipedia.org/wiki/Workstation",
        "https://en.wikipedia.org/wiki/Stanford_University",
        "https://en.wikipedia.org/wiki/University_of_Zurich",
        "https://en.wikipedia.org/wiki/ETH_Zurich",
        "https://en.wikipedia.org/wiki/Tony_Hoare",
        "https://en.wikipedia.org/wiki/Larry_Tesler",
        "https://en.wikipedia.org/wiki/Turing_Award",
        "https://en.wikipedia.org/wiki/SIGPLAN",
        "https://en.wikipedia.org/wiki/Computer_History_Museum",
        "https://en.wikipedia.org/wiki/Marcel_Benoist_Prize",
        "https://en.wikipedia.org/wiki/Object_Pascal",
        "https://en.wikipedia.org/wiki/Object_Pascal",
        "https://en.wikipedia.org/wiki/Main_Page",
        "https://en.wikipedia.org/wiki/Main_Page"
    ]
}